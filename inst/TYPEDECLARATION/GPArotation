type `bentlerQ` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `bentlerT` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `cfQ` <class<`loadings`>, class<`matrix`>, double, logical, double, double> => class<`GPArotation`>;
type `cfT` <class<`loadings`>, class<`matrix`>, double, logical, double, double> => class<`GPArotation`>;
type `echelon` <class<`loadings`>, integer[], ...> => list<class<`matrix`> | character | logical>;
type `eiv` <class<`loadings`>, integer[], ...> => list<class<`matrix`> | character | logical>;
type `entropy` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `geominQ` <class<`loadings`>, class<`matrix`>, double, logical, double, double> => class<`GPArotation`>;
type `geominT` <class<`loadings`>, class<`matrix`>, double, logical, double, double> => class<`GPArotation`>;
type `GPFoblq` <class<`loadings`> | class<`matrix`>, class<`matrix`>, logical, double, double, character, null | list<double> | list<class<`matrix`>>> => class<`GPArotation`>;
type `GPForth` <class<`loadings`> | class<`matrix`>, class<`matrix`>, logical, double, double, character, null | list<double> | list<class<`matrix`>>> => class<`GPArotation`>;
type `infomaxQ` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `infomaxT` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `mccammon` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `NormalizingWeight` <class<`loadings`>, logical> => class<`matrix`>;
type `oblimin` <class<`loadings`>, class<`matrix`>, double, logical, double, double> => class<`GPArotation`>;
type `print.GPArotation` <class<`GPArotation`>, double, logical, ...> => class<`GPArotation`>;
type `pstQ` <class<`loadings`>, class<`matrix`>, class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `pstT` <class<`loadings`>, class<`matrix`>, class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `quartimax` <class<`loadings`> | class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `quartimin` <class<`loadings`> | class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `Random.Start` <integer> => class<`matrix`>;
type `simplimax` <class<`loadings`>, class<`matrix`>, integer, logical, double, double> => class<`GPArotation`>;
type `summary.GPArotation` <class<`GPArotation`>, ...> => class<`summary.GPArotation`>;
type `tandemI` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `tandemII` <class<`loadings`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `targetQ` <class<`loadings`> | class<`matrix`>, class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `targetT` <class<`loadings`>, class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `Varimax` <class<`loadings`> | class<`matrix`>, class<`matrix`>, logical, double, double> => class<`GPArotation`>;
type `vgQ.bentler` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.cf` <class<`matrix`>, double> => list<class<`matrix`> | double | character>;
type `vgQ.entropy` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.geomin` <class<`matrix`>, double> => list<class<`matrix`> | double | character>;
type `vgQ.infomax` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.mccammon` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.oblimin` <class<`matrix`>, double> => list<class<`matrix`> | double | character>;
type `vgQ.pst` <class<`matrix`>, class<`matrix`>, class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.quartimax` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.quartimin` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.simplimax` <class<`matrix`>, integer> => list<class<`matrix`> | double | character>;
type `vgQ.tandemI` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.tandemII` <class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.target` <class<`matrix`>, class<`matrix`>> => list<class<`matrix`> | double | character>;
type `vgQ.varimax` <class<`matrix`>> => list<class<`matrix`> | double | character>;
