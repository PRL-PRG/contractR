type `bkde` <double[], character, logical, any, double, any, logical> => list<double[]>;
type `bkde2D` <class<`matrix`>, double[], integer[], any, logical> => list<double[] | class<`matrix`>>;
type `bkfe` <double[], double, double, integer, any, logical, logical> => double;
type `blkest` <double[], double[], integer, double> => list<double>;
type `cpblock` <double[], double[], double, double> => integer;
type `dpih` <double[], character, integer, integer, double[], logical> => double;
type `dpik` <double[], character, integer, character, logical, double, double[], logical> => double;
type `dpill` <double[], double[], double, double, double, double, integer, double[], logical> => double;
type `linbin` <double[], double[], logical> => double[];
type `linbin2D` <class<`matrix`>, double[], double[]> => class<`matrix`>;
type `locpoly` <double[], any, integer, any, character, double, integer, double, any, logical, logical> => list<double[]>;
type `rlbin` <double[], double[], double[], logical> => list<double[]>;
type `sdiag` <double[], integer, integer, character, double, integer, double, double[], logical, logical> => list<double[]>;
type `sstdiag` <double[], integer, integer, character, double, integer, double, double[], logical, logical> => list<double[]>;
