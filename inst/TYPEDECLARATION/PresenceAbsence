type `auc.roc.plot` <struct<`plotID`:integer[], `Observed`:double[], `Predicted1`:double[]>, double, logical, integer[], logical, character, character, character, ? character | ^double[], null, ^double[], double, ? ???, logical, null, ^double[] | symbol, character[] | ^double[] | symbol, symbol | ???, symbol | ???> => struct<`pty`:character>;
type `error.threshold.plot` <struct<`plotID`:integer[], `Observed`:double[], `Predicted1`:double[]>, double, double, logical, character, character, character, ^integer[], null, character, double, logical, logical, character[], symbol, symbol, double, double, logical> => struct<`rect`:struct<`w`:double, `h`:double, `left`:double, `top`:double>, `text`:struct<`x`:double[], `y`:double[]>>;
type `filter` <character[]> => logical[];
type `presence.absence.hist` <struct<`plotID`:integer[], `Observed`:double[], `Predicted1`:double[]>, double, logical, character, character, character, null, null, double, logical, double[], logical, double, character[], symbol, symbol, double, double, logical> => null;
type `presence.absence.summary` <struct<`plotID`:integer[], `Observed`:integer[], `Predicted1`:double[], `Predicted2`:double[], `Predicted3`:double[]>, double, logical, double, logical, symbol, integer, double, double, double, logical, ???, ^double[], ???, ???, ^double[], double, logical, logical> => struct<`mfrow`:integer[], `cex`:double, `oma`:double[]>;
