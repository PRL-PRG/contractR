type `as.integer.bitmap` <class<`bitmap`, `rgba`>, logical, ...> => class<`array`>;
type `as.integer.magick-image` <class<`magick-image`>, ...> => class<`nativeRaster`>;
type `as.list.magick-image` <class<`magick-image`>, ...> => list<class<`magick-image`>>;
type `as.raster.magick-image` <class<`magick-image`>, ...> => class<`raster`>;
type `assert_image` <class<`magick-device`, `magick-image`> | class<`magick-image`>> => null;
type `autobrewed` < > => logical;
type `autoviewer_disable` < > => null;
type `autoviewer_enable` < > => null;
type `c.magick-image` <...> => class<`magick-image`>;
type `coder_info` <character> => list<character>;
type `demo_image` <character> => class<`magick-image`>;
type `df_to_tibble` <class<`data.frame`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `download_url` <character> => character;
type `geometry_area` <double, double, double, double> => character;
type `geometry_point` <double, double> => character;
type `geometry_size_percent` <double, double | null> => character;
type `geometry_size_pixels` <double | null, double | null, logical> => character;
type `image_animate` <class<`magick-device`, `magick-image`> | class<`magick-image`>, double, null, double, character[], logical> => class<`magick-image`>;
type `image_annotate` <class<`magick-image`>, character, character, character, double, double, character, character> => class<`magick-image`>;
type `image_append` <class<`magick-image`>, logical> => class<`magick-image`>;
type `image_apply` <class<`magick-image`>, class<`function`>, ...> => class<`magick-image`>;
type `image_average` <class<`magick-image`>> => class<`magick-image`>;
type `image_background` <class<`magick-image`>, character, logical> => class<`magick-image`>;
type `image_blank` <double, double, character, character> => class<`magick-image`>;
type `image_blur` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `image_border` <class<`magick-image`>, character, character, character> => class<`magick-image`>;
type `image_canny` <class<`magick-image`>, character> => class<`magick-image`>;
type `image_charcoal` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `image_chop` <class<`magick-image`>, character> => class<`magick-image`>;
type `image_colorize` <class<`magick-image`>, double, character> => class<`magick-image`>;
type `image_compare` <class<`magick-image`>, class<`magick-image`>, character, double> => class<`magick-image`>;
type `image_composite` <class<`magick-device`, `magick-image`> | class<`magick-image`>, class<`magick-image`>, character, character, character, character> => class<`magick-image`>;
type `image_connect` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_contrast` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_convert` <class<`magick-image`>, character | null, null | character, null | character, null, null, null> => class<`magick-image`>;
type `image_convolve` <class<`magick-image`>, character | class<`matrix`>, double, null, character | null> => class<`magick-image`>;
type `image_crop` <class<`magick-image`>, character | null, null, logical> => class<`magick-image`>;
type `image_data` <class<`magick-image`>, null, double> => class<`bitmap`, `rgba`>;
type `image_despeckle` <class<`magick-image`>, integer> => class<`magick-image`>;
type `image_draw` <class<`magick-image`>, double, double, logical, ...> => class<`magick-image`>;
type `image_emboss` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `image_enhance` <class<`magick-image`>> => class<`magick-image`>;
type `image_equalize` <class<`magick-image`>> => class<`magick-image`>;
type `image_extent` <class<`magick-image`>, character, character, character> => class<`magick-image`>;
type `image_fill` <class<`magick-image`>, character, character, double, null> => class<`magick-image`>;
type `image_flatten` <class<`magick-image`>, null | character> => class<`magick-image`>;
type `image_flip` <class<`magick-image`>> => class<`magick-image`>;
type `image_flop` <class<`magick-image`>> => class<`magick-image`>;
type `image_frame` <class<`magick-image`>, character, character> => class<`magick-image`>;
type `image_fuzzycmeans` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `image_fx` <class<`magick-image`>, character, null> => class<`magick-image`>;
type `image_ggplot` <class<`magick-image`>, logical> => class<`gg`, `ggplot`>;
type `image_graph` <double, double, character, double, double, logical, logical> => class<`magick-device`, `magick-image`>;
type `image_hough_draw` <class<`magick-image`>, character | null, character, character, double, logical> => class<`magick-image`>;
type `image_hough_txt` <class<`magick-image`>, null, character> => character;
type `image_implode` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_info` <class<`magick-image`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `image_join` <...> => class<`magick-image`>;
type `image_lat` <class<`magick-image`>, character> => class<`magick-image`>;
type `image_median` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_modulate` <class<`magick-image`>, double, double, double> => class<`magick-image`>;
type `image_morph` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_morphology` <class<`magick-image`>, character, character, double, list<any>> => class<`magick-image`>;
type `image_mosaic` <class<`magick-image`>, null> => class<`magick-image`>;
type `image_negate` <class<`magick-image`>> => class<`magick-image`>;
type `image_noise` <class<`magick-image`>, character> => class<`magick-image`>;
type `image_normalize` <class<`magick-image`>> => class<`magick-image`>;
type `image_ocr` <class<`magick-image`>, character, logical, ...> => character;
type `image_ocr_data` <class<`magick-image`>, character, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `image_oilpaint` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_orient` <class<`magick-image`>, null> => class<`magick-image`>;
type `image_quantize` <class<`magick-image`>, double, character, null, null> => class<`magick-image`>;
type `image_read` <character | class<`array`> | class<`bitmap`, `rgba`> | class<`matrix`>, null, null, logical> => class<`magick-image`>;
type `image_readbitmap` <class<`array`> | class<`bitmap`, `rgba`>> => class<`magick-image`>;
type `image_read_nativeraster` <class<`matrix`>> => class<`magick-image`>;
type `image_read_pdf` <character, double | null, double, character> => class<`magick-image`>;
type `image_read_svg` <character, double | null, null> => class<`magick-image`>;
type `image_reducenoise` <class<`magick-image`>, integer> => class<`magick-image`>;
type `image_resize` <class<`magick-image`>, character, character | null> => class<`magick-image`>;
type `image_rotate` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_sample` <class<`magick-image`>, character> => class<`magick-image`>;
type `image_scale` <class<`magick-image`>, character | null> => class<`magick-image`>;
type `image_shadow` <class<`magick-image`>, character, character, character, character, character> => class<`magick-image`>;
type `image_shear` <class<`magick-image`>, character, character> => class<`magick-image`>;
type `image_split` <class<`magick-image`>, logical> => class<`magick-image`>;
type `image_threshold` <class<`magick-image`>, character, character, null> => class<`magick-image`>;
type `image_transparent` <class<`magick-image`>, character, double> => class<`magick-image`>;
type `image_trim` <class<`magick-image`>, double> => class<`magick-image`>;
type `image_write` <class<`magick-image`>, character | null, character | null, null, null, character | null, null, logical> => (character | raw[]);
type `image_write_frame` <class<`magick-image`>, character, double> => class<`bitmap`, `rgba`>;
type `is_check` < > => logical;
type `is_url` <character> => logical;
type `length.magick-image` <class<`magick-image`>> => integer;
type `magick_attr_stroke_antialias` <class<`magick-image`>, logical> => logical[];
type `magick_attr_text_antialias` <class<`magick-image`>, logical> => logical[];
type `magick_coder_info` <character> => list<character>;
type `magick_config` < > => list<class<`numeric_version`> | logical>;
type `magick_config_internal` < > => list<character | logical>;
type `magick_device_internal` <character, double, double, double, double, logical, logical, logical> => class<`magick-image`>;
type `magick_device_pop` < > => (class<`magick-device`, `magick-image`> | null);
type `[.magick-image` <class<`magick-image`>, double[]> => class<`magick-image`>;
type `[[.magick-image` <class<`magick-image`>, double> => class<`bitmap`, `rgba`>;
type `magick_image_animate` <class<`magick-device`, `magick-image`> | class<`magick-image`>, integer, integer, character, logical> => class<`magick-image`>;
type `magick_image_annotate` <class<`magick-image`>, character, character, character, double, integer, character, character> => class<`magick-image`>;
type `magick_image_append` <class<`magick-image`>, logical> => class<`magick-image`>;
type `magick_image_as_raster` <class<`bitmap`, `rgba`>> => class<`raster`>;
type `magick_image_average` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_background` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_blank` <double, double, character, character> => class<`magick-image`>;
type `magick_image_blur` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `magick_image_border` <class<`magick-image`>, character, character, character> => class<`magick-image`>;
type `magick_image_canny` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_charcoal` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `magick_image_chop` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_colorize` <class<`magick-image`>, double, character> => class<`magick-image`>;
type `magick_image_compare` <class<`magick-image`>, class<`magick-image`>, character, double> => class<`magick-image`>;
type `magick_image_composite` <class<`magick-device`, `magick-image`> | class<`magick-image`>, class<`magick-image`>, character, character, character, character> => class<`magick-image`>;
type `magick_image_connect` <class<`magick-image`>, integer> => class<`magick-image`>;
type `magick_image_contrast` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_convolve_kernel` <class<`magick-image`>, character, integer, character[], character[]> => class<`magick-image`>;
type `magick_image_convolve_matrix` <class<`magick-image`>, class<`matrix`>, integer, character[], character[]> => class<`magick-image`>;
type `magick_image_copy` <class<`magick-image`>, class<`magick-image`>> => class<`magick-image`>;
type `magick_image_crop` <class<`magick-image`>, character[], character[], logical> => class<`magick-image`>;
type `magick_image_dead` <class<`magick-device`, `magick-image`> | class<`magick-image`>> => integer;
type `magick_image_despeckle` <class<`magick-image`>, integer> => class<`magick-image`>;
type `magick_image_emboss` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `magick_image_enhance` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_equalize` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_extent` <class<`magick-image`>, character, character, character> => class<`magick-image`>;
type `magick_image_fill` <class<`magick-image`>, character, character, double, character[]> => class<`magick-image`>;
type `magick_image_flatten` <class<`magick-image`>, character[]> => class<`magick-image`>;
type `magick_image_flip` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_flop` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_format` <class<`magick-image`>, character[], character[], character[], integer[], logical[], logical[]> => class<`magick-image`>;
type `magick_image_frame` <class<`magick-image`>, character, character> => class<`magick-image`>;
type `magick_image_fuzzycmeans` <class<`magick-image`>, double, double> => class<`magick-image`>;
type `magick_image_fx` <class<`magick-image`>, character, character[]> => class<`magick-image`>;
type `magick_image_houghline` <class<`magick-image`>, character, character, character, double> => class<`magick-image`>;
type `magick_image_implode` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_info` <class<`magick-image`>> => class<`data.frame`>;
type `magick_image_join` <list<class<`magick-image`>>> => class<`magick-image`>;
type `magick_image_lat` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_length` <class<`magick-image`>> => integer;
type `magick_image_median` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_modulate` <class<`magick-image`>, double, double, double> => class<`magick-image`>;
type `magick_image_morph` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_morphology` <class<`magick-image`>, character, character, integer, character[], character[]> => class<`magick-image`>;
type `magick_image_mosaic` <class<`magick-image`>, character[]> => class<`magick-image`>;
type `magick_image_negate` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_noise` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_normalize` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_oilpaint` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_orient` <class<`magick-image`>, character[]> => class<`magick-image`>;
type `magick_image_quantize` <class<`magick-image`>, integer, character, logical[], integer[]> => class<`magick-image`>;
type `magick_image_readbitmap_double` <class<`array`>> => class<`magick-image`>;
type `magick_image_readbitmap_native` <class<`matrix`>> => class<`magick-image`>;
type `magick_image_readbitmap_raw` <class<`array`> | class<`bitmap`, `rgba`>> => class<`magick-image`>;
type `magick_image_readpath` <character, character[], integer[], logical> => class<`magick-image`>;
type `magick_image_reducenoise` <class<`magick-image`>, integer> => class<`magick-image`>;
type `magick_image_resize` <class<`magick-image`>, character, character[]> => class<`magick-image`>;
type `magick_image_rev` <class<`magick-image`>> => class<`magick-image`>;
type `magick_image_rotate` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_sample` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_scale` <class<`magick-image`>, character[]> => class<`magick-image`>;
type `magick_image_shadow_mask` <class<`magick-image`>, character> => class<`magick-image`>;
type `magick_image_shear` <class<`magick-image`>, character, character> => class<`magick-image`>;
type `magick_image_subset` <class<`magick-image`>, integer[]> => class<`magick-image`>;
type `magick_image_threshold_black` <class<`magick-image`>, character, character[]> => class<`magick-image`>;
type `magick_image_threshold_white` <class<`magick-image`>, character, character[]> => class<`magick-image`>;
type `magick_image_transparent` <class<`magick-image`>, character, double> => class<`magick-image`>;
type `magick_image_trim` <class<`magick-image`>, double> => class<`magick-image`>;
type `magick_image_write` <class<`magick-image`>, character[], integer[], integer[], character[], character[]> => raw[];
type `magick_image_write_frame` <class<`magick-image`>, character, double> => class<`bitmap`, `rgba`>;
type `magick_image_write_integer` <class<`magick-image`>> => class<`nativeRaster`>;
type `plot.magick-image` <class<`magick-image`>, ...> => null;
type `print.magick-image` <class<`magick-image`>, logical, ...> => null;
type `register_s3_method` <character, character, character, null> => null;
type `replace_url` <character> => character;
type `rev.magick-image` <class<`magick-image`>> => class<`magick-image`>;
type `set_magick_tempdir` <character> => character;
type `setup_device` <any, double[] | null, double[] | null, character, character, double[], ...> => null;
