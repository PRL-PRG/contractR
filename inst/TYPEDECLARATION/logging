type `$` <character, character> => character | <double, any, ...> => logical | <character, ..., double, class<`function`>> => environment | <character> => list<any> | <character> => (environment | null) | <class<`function`>> => class<`function`>;
type `action` <character | null, environment, ...> => (null | logical);
type `addHandler` <class<`function`>, ..., character> => environment;
type `.basic_config` <class<`Logger`>> => environment;
type `basicConfig` <double> => null;
type `.build_msg_coloring` < > => class<`function`>;
type `composer_f` <character, ...> => character;
type `.deducelevel` <double> => double;
type `filter` <character[]> => logical[];
type `formatter` <list<character | double>> => character;
type `getHandler` <character, character> => (environment | null);
type `getLogger` <character, ...> => class<`Logger`>;
type `getMsgComposer` < > => class<`function`>;
type `.levellog` <double, any, ..., character> => logical;
type `logdebug` <character, ..., character> => logical;
type `loginfo` <character, ..., character> => logical;
type `.logrecord` <list<character | double>> => logical;
type `logReset` < > => null;
type `logwarn` <character, ..., character> => logical;
type `namedLevel` <character | double> => double;
type `namedLevel.character` <character> => double;
type `namedLevel.numeric` <double> => double;
type `removeHandler` <character> => list<any> | <character, character> => list<any>;
type `resetMsgComposer` <character> => class<`function`>;
type `setLevel` <character, environment | character> => double;
type `setMsgComposer` <class<`function`>, character> => class<`function`>;
type `updateOptions` <class<`Logger`>, ...> => null;
type `updateOptions.environment` <class<`Logger`> | environment, ...> => null;
type `updateOptions.Logger` <class<`Logger`>, ...> => null;
type `with` <character | null, environment, ...> => (null | logical);
