type `addHandler` <class<`function`> | character, ..., character> => any;
type `.basic_config` <class<`Logger`>> => environment;
type `basicConfig` <character | double> => null;
type `.build_msg_coloring` < > => class<`function`>;
type `getHandler` <character | class<`function`>, character> => (environment | null);
type `getLogger` <character, ...> => class<`Logger`>;
type `levellog` <character, double, ..., character> => logical;
type `.levellog` <double | character, any, ..., character | class<`Logger`>> => any;
type `logdebug` <character, ..., character> => logical;
type `logerror` <character, ..., character> => logical;
type `logfine` <character, ..., character> => logical;
type `logfiner` <character, ..., character> => logical;
type `logfinest` <character, ..., character> => logical;
type `loginfo` <character | double, ..., character | class<`Logger`>> => any;
type `logReset` < > => null;
type `logwarn` <character, ..., character> => logical;
type `namedLevel` <character | double> => double;
type `namedLevel.character` <character> => double;
type `namedLevel.default` <logical> => double;
type `namedLevel.numeric` <double> => double;
type `removeHandler` <character | class<`function`>> => list<any> | <character | class<`function`>, character> => list<any>;
type `resetMsgComposer` <character> => class<`function`>;
type `setLevel` <character | double, character | environment | null> => any;
type `setMsgComposer` <class<`function`>, character> => any;
type `updateOptions` <character | class<`Logger`>, ...> => null;
type `updateOptions.character` <character, ...> => null;
type `updateOptions.environment` <class<`Logger`> | environment, ...> => null;
type `updateOptions.Logger` <class<`Logger`>, ...> => null;
