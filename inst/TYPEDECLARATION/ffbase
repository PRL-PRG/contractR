type `[.ff` <tuple<>, null | ^integer[] | double | tuple<>, logical> => null | ^double[] | tuple<>;
type `[.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`fftest`:tuple<>, `ffyes`:tuple<>, `ffno`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Ozone`:tuple<>, `Solar.R`:tuple<>, `Wind`:tuple<>, `Temp`:tuple<>, `Month`:tuple<>, `Day`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`pos`:tuple<>, `group`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`surname`:tuple<>, `nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Var1`:tuple<>, `Var2`:tuple<>, `Var3`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>, `z`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x1`:tuple<>, `y1`:tuple<>>, `row.names`:null>, integer[] | null | tuple<> | character[], null | double | character[] | integer[], logical> => struct<`fftest`:logical[], `ffyes`:double[], `ffno`:double[]> | double[] | tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`pos`:tuple<>, `group`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x1`:tuple<>, `y1`:tuple<>>, `row.names`:null>;
type `[<-.ff` <tuple<>, double | ^integer[] | tuple<>, logical, logical, null | double[] | ^character[] | ^integer[] | tuple<>> => tuple<>;
type `[<-.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>, `nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, tuple<> | struct<`x`:struct<`first`:integer, `dat`:struct<`lengths`:integer, `values`:integer>, `last`:integer>, `ix`:null, `re`:logical, `minindex`:integer, `maxindex`:null, `length`:integer, `dim`:null, `dimorder`:null, `symmetric`:logical, `fixdiag`:null, `vw`:null, `NAs`:null>, character[] | null, struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`nationality`:tuple<>, `deceased`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Width`:tuple<>, `Sepal.Length`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]>> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>, `nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `*.ff_vector` <tuple<>, double> => tuple<>;
type `%ff:%` <integer, integer> => tuple<>;
type `%in%` <tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | character[] | ^integer[], tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]> | character[] | ^integer[] | double[]> => tuple<> | logical[];
type `+.ff_vector` <double | tuple<>, tuple<> | double> => tuple<>;
type `<.ff_vector` <double | tuple<>, tuple<> | double> => tuple<>;
type `>.ff_vector` <double | tuple<>, tuple<> | double> => tuple<>;
type `$` <^integer[] | character> => null;
type `addfforder` <tuple<>, logical, null> => tuple<>;
type `any.ff` <tuple<>, null, logical, null> => logical;
type `as.character.ff` <tuple<>, null> => tuple<>;
type `as.ffdf.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]>, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]>;
type `as.ffdf.list` <struct<`a`:tuple<>, `b`:tuple<>> | struct<`Var1`:tuple<>, `Var2`:tuple<>> | struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>> | struct<`nationality`:tuple<>, `deceased`:tuple<>>> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`a`:tuple<>, `b`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Var1`:tuple<>, `Var2`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`nationality`:tuple<>, `deceased`:tuple<>>>;
type `binned_sum.default` <double[], integer[], double | symbol, null> => ^double[];
type `binned_tabulate.ff` <tuple<>, tuple<>, language, double, null> => ^integer[];
type `bySum` <double[], struct<`wool`:integer[], `tension`:integer[]> | integer[], logical, null, null> => ^double[];
type `c.ff` <tuple<>> => tuple<>;
type `chunkexpr` <expression | language, character[], character, character> => expression;
type `coerce_to_allowNA` <character[]> => struct<`x`:character[], `coerceto`:character[]>;
type `coerce_to_highest_vmode` <tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, integer[] | tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, logical> => tuple<> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `cummax.ff` <tuple<>, null> => tuple<>;
type `cummin.ff` <tuple<>, null> => tuple<>;
type `cumprod.ff` <tuple<>, null> => tuple<>;
type `cumsum.ff` <tuple<>, null> => tuple<>;
type `cut.ff` <tuple<>, double, null> => tuple<>;
type `duplicated.ff` <tuple<>, logical, logical, logical, double> => tuple<>;
type `duplicated.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]>, logical, logical, logical, null | double> => tuple<>;
type `expand.ffgrid` <struct<`a`:tuple<>, `b`:tuple<>> | tuple<>, logical, logical> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`a`:tuple<>, `b`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Var1`:tuple<>, `Var2`:tuple<>>>;
type `ffappend` <tuple<>, integer[] | tuple<>, logical, null> => tuple<>;
type `ffbaseffdfindexget` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null>, tuple<>, null, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`nationality`:tuple<>, `deceased`:tuple<>>>;
type `ffdfappend` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:^integer[]> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, logical, logical, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `ffdfdply` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, tuple<>, any => any, double, integer, logical, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>, `group`:tuple<>>, `row.names`:null>;
type `ffdfget_columnwise` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, tuple<>> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>;
type `ffdfmatch` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:character[]>, integer, null, logical, null | double> => tuple<>;
type `ffdfrbind.fill` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, logical> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `ffdfwith` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`pos`:tuple<>, `split`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>>, `row.names`:null>, language, null> => tuple<>;
type `ffifelse` <tuple<>, double | integer[], null | integer | tuple<>> => tuple<>;
type `ffmatch` <tuple<>, tuple<>, null | integer, null, logical, null | double> => tuple<>;
type `ffordered` <tuple<>> => tuple<>;
type `ffrandom` <double, any => any, double | null, null> => tuple<>;
type `ffrep.int` <integer | tuple<>, double | tuple<>> => tuple<>;
type `ffseq` <double, double, language | double, null | double, null | double, null> => tuple<>;
type `ffseq_len` <double> => tuple<>;
type `ffwhich.ff_vector` <tuple<>, language, null, environment> => null | tuple<>;
type `ffwhich.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x1`:tuple<>, `y1`:tuple<>>, `row.names`:null>, language, null, environment> => tuple<>;
type `filter` <character[]> => logical[];
type `fun` <symbol, symbol> => null;
type `FUN` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>>, `row.names`:null> | double[] | ^integer[] | tuple<> | character[]> => null | character[] | ^integer[] | double[];
type `grouprunningcumsum` <integer[], double> => integer[];
type `grouprunningcumsumindex` <double[], double, double> => struct<`overflowidx`:integer[], `currentcumul`:integer>;
type `ikey` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, null> => tuple<>;
type `is.na.ff` <tuple<>, double | null> => tuple<>;
type `is.na<-.ff` <tuple<>, null, double | integer[] | tuple<>> => tuple<>;
type `list_to_df` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>;
type `load.ffdf` <character, environment> => environment;
type `max.ff` <tuple<>, double | null, logical, null> => null | double;
type `mean.ff` <tuple<>, double, null, null> => double;
type `merge.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>>, `row.names`:null>, struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`surname`:tuple<>, `nationality`:tuple<>, `deceased`:tuple<>>, `row.names`:null>, language, character, character, logical, logical, logical, logical, language, null, logical, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`name`:tuple<>, `title`:tuple<>, `other.author`:tuple<>, `price`:tuple<>, `nationality`:tuple<>, `deceased`:tuple<>>>;
type `min.ff` <tuple<>, null, logical, null> => null | integer;
type `move.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, character, character, logical> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `opsff_arith` <double | tuple<>, tuple<> | double, character> => tuple<>;
type `opsff_compare_logic` <double | tuple<>, tuple<> | double, character> => tuple<>;
type `pack.ffdf` <character, symbol> => integer;
type `range.ff` <tuple<>, null, logical, null> => ^integer[];
type `recoder` <character[], character[], character[]> => character[];
type `save.ffdf` <symbol, character, logical, logical, logical> => null;
type `sum.ff` <tuple<>, null, logical, null> => integer;
type `transform.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Ozone`:tuple<>, `Solar.R`:tuple<>, `Wind`:tuple<>, `Temp`:tuple<>, `Month`:tuple<>, `Day`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>>, `row.names`:null>, language> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Ozone`:tuple<>, `Solar.R`:tuple<>, `Wind`:tuple<>, `Temp`:tuple<>, `Month`:tuple<>, `Day`:tuple<>>> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>, `z`:tuple<>>>;
type `unique.ff` <tuple<>, logical, logical, logical, null> => tuple<>;
type `unique.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`key2`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>, logical, logical, logical, null | double> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`key2`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null>;
type `unpack.ffdf` <character, null, environment> => environment;
type `with.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`fftest`:tuple<>, `ffyes`:tuple<>, `ffno`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`Sepal.Length`:tuple<>, `Sepal.Width`:tuple<>, `Petal.Length`:tuple<>, `Petal.Width`:tuple<>, `Species`:tuple<>>, `row.names`:null> | struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>>, `row.names`:null>, language, null> => tuple<>;
type `within.ffdf` <struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>>, `row.names`:null>, language, null> => struct<`virtual`:struct<`VirtualVmode`:character[], `AsIs`:logical[], `VirtualIsMatrix`:logical[], `PhysicalIsMatrix`:logical[], `PhysicalElementNo`:integer[], `PhysicalFirstCol`:integer[], `PhysicalLastCol`:integer[]>, `physical`:struct<`x`:tuple<>, `y`:tuple<>, `z`:tuple<>>>;
