type `chisq.out.test` <double[], double, logical> => class<`htest`>;
type `cochran.test` <class<`formula`> | double[], class<`data.frame`> | double[], logical> => class<`htest`>;
type `dixon.test` <double[], double, logical, logical> => class<`htest`>;
type `FUN` <double[] | class<`matrix`>, logical, any, logical> => (double[] | class<`matrix`>) | <double[] | class<`matrix`>, logical, logical> => (class<`matrix`> | double[]);
type `grubbs.test` <double[], double, logical, logical> => class<`htest`>;
type `outlier` <double[] | class<`matrix`>, logical, logical> => (class<`matrix`> | double[]);
type `pcochran` <double, double, double> => double;
type `pdixon` <double, integer, double> => double;
type `pgrubbs` <double, integer, double> => double;
type `qcochran` <double, double, double> => double;
type `qdixon` <double, integer, double, logical> => double;
type `qgrubbs` <double, integer, double, logical> => double;
type `qtable` <double, double[], double[]> => double;
type `rm.outlier` <double[] | class<`matrix`>, logical, any, logical> => (double[] | class<`matrix`>);
type `scores` <double[], character[], double | null, null> => double[];
