type `absorbing.msm` <null | class<`msm`>, class<`matrix`> | null> => integer[];
type `agg.tables` <class<`table`>, class<`array`>, integer[], list<character[]>, list<any>> => list<class<`array`>>;
type `Ccall.msm` <double[], character, list<any>, class<`msmqmodel`>, list<double[] | character[] | double>, list<double | null>, class<`hmodel`> | list<double[]>, list<any>> => (class<`array`> | class<`matrix`> | double[]);
type `crudeinits.msm` <class<`formula`>, any, class<`matrix`>, class<`data.frame`>, null, null> => class<`matrix`>;
type `deltamethod` <class<`formula`>, double[], class<`matrix`> | double, logical> => double;
type `deriv.msm` <double[], ...> => double[];
type `deriv.supported` <list<any>, class<`hmodel`> | list<double[]>, any> => logical;
type `dgexpit` <double[], double, double> => double[];
type `dmenorm` <double[], double, double, double, double, double, double, logical> => double[];
type `dpexp` <double[], double[], double[], logical> => double[];
type `dtnorm` <double[], double, double, double, double, logical> => double[];
type `efpt.msm` <null, class<`matrix`>, double, character, character, character[], double, double, null, ...> => double[];
type `expand.data` <class<`msm`>> => list<class<`data.frame`> | class<`matrix`>>;
type `expand.interactions.msm` <list<integer>, character[]> => list<double>;
type `expsum` <double, double> => character;
type `expsum.formstr` <integer, integer[], double, double, integer, double> => list<character[] | double[] | character | double>;
type `factorcov2numeric.msm` <list<integer>, class<`msm`>, list<double[] | character[]>> => list<double>;
type `getobs.msm` <list<double[] | class<`matrix`>>, double[], double, logical> => list<double[]>;
type `gexpit` <^double[], class<`matrix`> | double[], class<`matrix`> | double[]> => ^double[];
type `glogit` <double[], double[], double[]> => double[];
type `gr` <double[], ...> => double[];
type `hazard.msm` <class<`msm`>, double, double> => list<class<`matrix`>>;
type `hmmBinom` <double, double> => class<`hmmdist`>;
type `hmmCheckInits` <double[]> => null;
type `hmmDIST` <character, character, class<`function`>, class<`call`>, ...> => class<`hmmdist`>;
type `hmmMV` <...> => class<`hmmMVdist`, `hmmdist`>;
type `information.msm` <double[], ...> => class<`matrix`>;
type `info.supported` <list<any>, class<`hmodel`> | list<double[]>, any> => logical;
type `in.range` <double, double[], logical> => logical;
type `intervaltrans.msm` <class<`msm`>, null, null, logical, logical> => class<`matrix`>;
type `is.qmatrix` <class<`matrix`>> => logical;
type `lsum` <integer, double> => character;
type `MatrixExp` <class<`matrix`>, double[], character | null, ...> => (class<`array`> | class<`matrix`>);
type `model.matrix.wrap` <class<`formula`>, class<`data.frame`>> => class<`matrix`>;
type `msm` <class<`formula`>, any, class<`data.frame`>, class<`matrix`>, logical, null, null | list<class<`hmmMVdist`, `hmmdist`>>, null, null, class<`formula`> | null, null, null | list<double[]>, null, null, null, null, null, null, null, null> => class<`msm`>;
type `msm2Surv` <class<`data.frame`>, character, character, character, null, class<`matrix`>> => class<`data.frame`, `msdata`>;
type `msm.add.hmmcovs` <class<`hmodel`>, double[], list<class<`matrix`>>> => class<`matrix`>;
type `msm.add.qcovs` <class<`msmqmodel`>, double[], class<`matrix`>> => class<`array`>;
type `msm.aggregate.data` <class<`data.frame`>> => class<`data.frame`>;
type `msm.center.covs` <class<`matrix`> | null, any, any> => (class<`matrix`> | null);
type `msm.check.constraint` <list<double[]>, class<`matrix`>> => null;
type `msm.check.hmodel` <list<class<`hmmdist`> | class<`hmmMVdist`, `hmmdist`>>, integer> => null;
type `msm.check.model` <integer[], integer[], any, any, double[], class<`matrix`>, list<double | null>> => null;
type `msm.check.qmatrix` <class<`matrix`>> => null;
type `msm.check.state` <any, class<`matrix`> | integer[], any, class<`hmodel`> | list<double[]>> => null;
type `msm.check.times` <double[], double[], class<`matrix`> | integer[] | null> => null;
type `msm.dmninvlogit` <class<`hmodel`>, any, list<class<`matrix`>>, any, class<`array`>> => class<`array`>;
type `[.msm.est` <class<`msm.est`>, class<`factor`>, any, logical> => double[];
type `msm.fixdiag.qmatrix` <class<`matrix`>> => class<`matrix`>;
type `msm.form.cmodel` <null, null, any> => list<double | null>;
type `msm.form.covmodel` <any, class<`matrix`>, list<double[]>, null, any, double, null> => list<double[] | character[]>;
type `msm.form.dh` <class<`hmodel`>, double[], class<`matrix`>, list<any>, list<class<`matrix`>>> => class<`array`>;
type `msm.form.dmodel` <null | double, class<`msmqmodel`>, class<`hmodel`> | list<double[]>> => list<double[]>;
type `msm.form.dq` <class<`msmqmodel`>, list<double | double[] | character[]>, double[], list<any>, class<`matrix`>> => class<`array`>;
type `msm.form.hconstraint` <null, class<`hmodel`>> => integer[];
type `msm.form.hcovconstraint` <null, class<`hmodel`>> => integer[];
type `msm.form.hmm.agg` <class<`data.frame`>> => ^integer[];
type `msm.form.hmodel` <list<class<`hmmdist`> | class<`hmmMVdist`, `hmmdist`>>, any, null, logical> => class<`hmodel`>;
type `msm.form.houtput` <class<`hmodel`>, list<any>, list<any>> => class<`hmodel`>;
type `msm.form.hranges` <null, class<`hmodel`>> => class<`matrix`>;
type `msm.form.initprobs` <class<`hmodel`>, any, class<`data.frame`>> => class<`hmodel`>;
type `msm.form.mf.agg` <class<`msm`> | list<class<`msmqmodel`> | list<class<`data.frame`> | double[] | double | null> | class<`msmqmodel`> | class<`hmodel`> | list<class<`data.frame`> | double | null>>> => (class<`data.frame`> | null);
type `msm.form.mm.cov` <class<`msm`> | list<class<`formula`> | logical | list<class<`data.frame`>>>> => class<`matrix`>;
type `msm.form.mm.cov.agg` <class<`msm`> | list<any>> => (class<`matrix`> | null);
type `msm.form.mm.hcov` <class<`msm`> | list<any>> => (null | list<class<`matrix`>>);
type `msm.form.mm.icov` <class<`msm`> | list<any>> => (class<`matrix`> | null);
type `msm.form.mm.mcov` <class<`msm`> | list<null | logical | list<class<`data.frame`> | double>>> => null;
type `msm.form.mvhmodel` <list<class<`hmmMVdist`, `hmmdist`>>> => list<class<`matrix`> | double[] | character[]>;
type `msm.form.obstrue` <class<`data.frame`>, class<`hmodel`> | list<double[]>, list<double | null>> => double[];
type `msm.form.obstype` <class<`data.frame`>, null, list<double[]>, logical> => double[];
type `msm.form.output` <class<`msm`>, character> => class<`msm`>;
type `msm.form.params` <class<`msmqmodel`>, list<double | double[] | character[]>, any, class<`hmodel`> | list<double[]>, null | logical> => list<double[] | character[] | class<`matrix`>>;
type `msm.form.qmodel` <class<`matrix`>, null, logical, logical, any> => class<`msmqmodel`>;
type `msm.form.univhmodel` <list<class<`hmmdist`>>> => list<character[] | double[]>;
type `msm.impute.censored` <integer[], integer[], any, list<double | null>> => list<integer[]>;
type `msm.initprobs2mat` <class<`hmodel`> | list<double[]>, any, any, class<`data.frame`>> => (class<`matrix`> | double);
type `msm.inv.transform` <double[], class<`hmodel`> | list<double[]>, class<`matrix`>> => double[];
type `msm.mninvlogit.transform` <class<`matrix`> | double[], class<`hmodel`> | list<double[]>> => (class<`matrix`> | double[]);
type `msm.mnlogit.transform` <double[], class<`hmodel`> | list<double[]>> => double[];
type `msm.obs.to.fromto` <class<`data.frame`>> => class<`data.frame`>;
type `msm.optim` <character, list<double[] | character[] | class<`matrix`>>, logical, logical, list<any>, class<`msmqmodel`>, list<double | double[] | character[]>, list<double | null>, class<`hmodel`> | list<double[]>, ...> => list<any>;
type `msm.optim.optim` <list<double[] | character[] | class<`matrix`>>, class<`function`>, logical, list<any>, class<`msmqmodel`>, list<double | double[] | character[]>, list<double | null>, class<`hmodel`> | list<double[]>, ...> => list<any>;
type `msm.parse.covariates` <any, character | list<integer>, list<double | double[] | character[]>, logical> => list<any>;
type `msm.rep.constraints` <double[], list<any>, class<`hmodel`> | list<double[]>> => double[];
type `msm.transform` <double[], class<`hmodel`> | list<double[]>, class<`matrix`>> => double[];
type `na.find.msmdata` <class<`data.frame`>, ...> => class<`array`>;
type `na.omit.msmdata` <class<`data.frame`>, ...> => class<`data.frame`>;
type `pearson.msm` <class<`msm`>, null, double, double, double, null, logical, double, null, double, logical, null, logical> => class<`pearson.msm`>;
type `pmatrix.msm` <class<`msm`>, double, any, character | list<integer>, character[], double, double, null, null, ...> => class<`msm.est`>;
type `ppass.msm` <null, class<`matrix`>, double, character, character, null, null, character[], double, double, null, ...> => class<`matrix`>;
type `ppexp` <double[], double[], double[], logical, logical> => double[];
type `qcut` <double[], any, null | double[], double, double, logical> => class<`factor`>;
type `qgeneric` <class<`function`>, double[], null, ...> => double[];
type `qmatrix.diagse.msm` <class<`msm`>, list<any>, logical, double, double[], integer> => list<double[]>;
type `qmatrix.msm` <class<`msm`>, character | list<integer>, logical, character[], double, any, null> => (class<`matrix`> | class<`msm.est`>);
type `reformat.pearson.msm` <list<class<`array`> | class<`data.frame`> | double[]>> => list<class<`data.frame`> | class<`array`> | double[]>;
type `resample` <integer[], double, ...> => integer;
type `rpexp` <double, double, double> => double;
type `sim.msm` <class<`matrix`>, double, null, any, any, double, double> => list<double[] | class<`matrix`>>;
type `simmulti.msm` <class<`data.frame`>, class<`matrix`>, null, logical, any, null, null, null, null, null, logical> => class<`data.frame`>;
type `sojourn.msm` <class<`msm`>, character, character[], double, double> => (class<`data.frame`> | list<double>);
type `statetable.msm` <any, any, class<`data.frame`> | null> => class<`table`>;
type `transient.msm` <class<`msm`> | null, null | class<`matrix`>> => integer[];
