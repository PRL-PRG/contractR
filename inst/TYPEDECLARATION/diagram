type `bentarrow` <double[], double[], double, double, character | double, character | double, double | integer[], double, character, ...> => class<`matrix`>;
type `circle` <integer, double, character> => null;
type `coordinates` <class<`matrix`> | double[] | null, double, double, double, logical, double> => class<`matrix`>;
type `curvedarrow` <double[], double[], double, double, character | double, character | double, double, double, double, logical, double[], ...> => double[];
type `en.Amplifier` <double[], double, null, any, any, ...> => null;
type `en.Capacitator` <double[], double, double, character | null, double, double, logical, ...> => null;
type `en.Ground` <double[], double, double, double, double, ...> => null;
type `en.Node` <double[], double, character, double, double, ...> => null;
type `en.Resistor` <double[], double, double, character | class<`call`> | double | null, double, double, logical, ...> => null;
type `en.Signal` <double[], double, expression | null, double, double, ...> => null;
type `en.Transistor` <double[], double[], double[], double[], double, null, double, double, ...> => null;
type `filter` <character[]> => logical[];
type `openplotmat` <null, ...> => null;
type `Parse` <character, ...> => expression;
type `plotmat` <class<`data.frame`> | class<`matrix`>, double[] | null | class<`matrix`>, double | null | class<`matrix`>, expression | character[] | integer[] | null, double, double, double, character, double, character, double, character[]> => list<class<`data.frame`> | class<`matrix`>>;
type `plotweb` <class<`matrix`>, null, double, logical, double, character, character, character, logical, double[], null, null> => list<double[]>;
type `Rep` <character | double | null, ...> => (character[] | double[] | null);
type `sarr` <double[], double[], logical> => (class<`matrix`> | null) | <double[], double[], logical> => (class<`matrix`> | null) | <double[], double[], logical> => (class<`matrix`> | null) | <double[], double[], logical> => (class<`matrix`> | null);
type `segmentarrow` <double[], double[], double, double, character | double, any, double | integer[], double, character, double, ...> => class<`matrix`>;
type `selfarrow` <double[], double, double, character | double, double, character, double[], double, double, ...> => double[];
type `shadowbox` <character, any, any, any, double, any, any, any, any, any, double, double> => null;
type `splitarrow` <double[], class<`matrix`>, double, double, character | double, character | double, double | integer[], double, double[] | null, double, ...> => class<`matrix`>;
type `straightarrow` <double[], double[], double, double, character | double, any, double, logical, double[], ...> => double[];
type `textdiamond` <double[], double, double, double, double, double[], character, character, character, character, double, ...> => null;
type `textellipse` <double[], double, double, double, double, double[], character[], character, character, character, double, double> => null;
type `textempty` <double[], character, double[], character | integer, double, ...> => null;
type `texthexa` <double[], double, double, double, double, double[], character, character, character, character, double, ...> => null;
type `textmulti` <double[], double, double, double, double, double[], character, character, character, character, double, double> => null;
type `textparallel` <double[], double, double, double, double, double[], character, character, character, character, double, double> => null;
type `textplain` <double[], any, expression | integer | character[], double[], ...> => null;
type `textrect` <double[], double, double, double, double, double[], character | integer, character, character, character, double, ...> => null;
type `textround` <double[], double, double, double, double, double[], character, character, character, character, double, double> => null;
type `tpos` <double[], double, double> => list<double[]>;
type `treearrow` <class<`matrix`>, class<`matrix`> | double[], double, double, character | double, any, double | integer[], double, double, character, ...> => (class<`matrix`> | null);
