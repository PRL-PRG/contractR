type `adorn_ns` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any> => (class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `adorn_pct_formatting` <class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`data.frame`, `tabyl`>>, double, character, logical> => (class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`data.frame`, `tabyl`>>);
type `adorn_percentages` <class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `adorn_rounding` <class<`data.frame`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`>, double, character, logical> => (class<`data.frame`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`>);
type `adorn_title` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any, any> => (class<`data.frame`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `adorn_totals` <class<`data.frame`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character[], character, logical, character> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `as_tabyl` <class<`data.frame`> | class<`data.frame`, `tabyl`> | integer[], double, null | character, null | character> => any;
type `check_vars_in_df` <class<`data.frame`>, any, character[]> => null;
type `chisq.test` <class<`data.frame`, `tabyl`>, ...> => class<`htest`>;
type `chisq.test.tabyl` <class<`data.frame`, `tabyl`>, logical, ...> => class<`htest`>;
type `clean_names` <class<`data.frame`> | class<`data.frame`, `tabyl`>, any> => (class<`data.frame`> | class<`data.frame`, `tabyl`>);
type `clean_names.default` <class<`data.frame`> | class<`data.frame`, `tabyl`>, character[]> => (class<`data.frame`> | class<`data.frame`, `tabyl`>);
type `compare_df_cols` <..., character[], character[], logical> => class<`data.frame`>;
type `compare_df_cols_df_maker` <class<`data.frame`> | list<class<`data.frame`> | class<`data.frame`> | list<class<`data.frame`>>>, character[] | list<character[]>, any> => class<`data.frame`>;
type `compare_df_cols_df_maker.data.frame` <class<`data.frame`>, character, any> => class<`data.frame`>;
type `compare_df_cols_df_maker.list` <list<class<`data.frame`> | class<`data.frame`> | list<class<`data.frame`>>>, character[] | list<character[]>, any> => class<`data.frame`>;
type `compare_df_cols_same` <..., character[], logical> => logical;
type `describe_class` <class<`factor`> | class<`factor`, `ordered`> | double, logical> => character;
type `describe_class.default` <character[] | double[], any> => character;
type `describe_class.factor` <class<`factor`> | class<`factor`, `ordered`>, logical> => character;
type `excel_numeric_to_date` <double, character, logical, logical, character> => (class<`Date`> | class<`POSIXct`, `POSIXt`>);
type `.f` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any> => (class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>) | <class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`data.frame`, `tabyl`>>, double, character, logical> => (class<`data.frame`, `tabyl`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`data.frame`, `tabyl`>>) | <class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>) | <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character, any, any> => (class<`data.frame`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>) | <class<`data.frame`> | class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>, character[], character, logical, character> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>) | <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, class<`formula`, `quosure`>, class<`formula`, `quosure`>, logical, logical> => class<`data.frame`, `tabyl`> | <class<`data.frame`, `tabyl`> | class<`data.frame`> | list<class<`data.frame`, `tabyl`>>> => (class<`data.frame`> | list<class<`data.frame`>>);
type `fisher.test` <class<`data.frame`, `tabyl`>, ...> => class<`htest`>;
type `fisher.test.tabyl` <class<`data.frame`, `tabyl`>, ...> => class<`htest`>;
type `get_dupes` <class<`data.frame`>, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `get_level_groups` <class<`factor`>, double, integer> => list<character>;
type `handle_if_special_names_used` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>> => (class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>);
type `make_clean_names` <character[], character[]> => character[];
type `paste_matrices` <class<`data.frame`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tabyl`>, class<`data.frame`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `remove_constant` <class<`data.frame`>, logical> => class<`data.frame`>;
type `remove_empty` <class<`data.frame`>, character[]> => class<`data.frame`>;
type `repair_fun` <character[], character[]> => character[];
type `round_half_up` <double[], double> => double[];
type `round_to_fraction` <double[], double[], character | double> => double[];
type `row_to_names` <class<`data.frame`>, double, logical, logical> => class<`data.frame`>;
type `tabyl` <^character[] | class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`factor`>, ...> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `tabyl_1way` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, class<`formula`, `quosure`>, logical, logical> => class<`data.frame`, `tabyl`>;
type `tabyl_2way` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, class<`formula`, `quosure`>, class<`formula`, `quosure`>, logical, logical> => class<`data.frame`, `tabyl`>;
type `tabyl_3way` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, class<`formula`, `quosure`>, class<`formula`, `quosure`>, class<`formula`, `quosure`>, logical, logical> => list<class<`data.frame`, `tabyl`>>;
type `tabyl.data.frame` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, any, any, any, logical, logical, ...> => (class<`data.frame`, `tabyl`> | list<class<`data.frame`, `tabyl`>>);
type `tabyl.default` <^character[] | class<`factor`> | class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`>, logical, logical, ...> => class<`data.frame`, `tabyl`>;
type `top_levels` <class<`factor`>, double, logical> => class<`data.frame`, `tabyl`>;
type `untabyl` <class<`data.frame`, `tabyl`> | class<`data.frame`> | list<class<`data.frame`, `tabyl`>>> => (class<`data.frame`> | list<class<`data.frame`>>);
