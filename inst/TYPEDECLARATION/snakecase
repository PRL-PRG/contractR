type `abbreviation_internal` <^character[], null | character[]> => ^character[];
type `parse1_pat_cap_smalls` <^character[]> => ^character[];
type `parse2_pat_digits` <^character[]> => ^character[];
type `parse3_pat_caps` <^character[]> => ^character[];
type `parse4_pat_cap` <^character[]> => ^character[];
type `parse5_pat_non_alnums` <^character[]> => ^character[];
type `parse6_mark_digits` <character> => character;
type `parse7_pat_caps_smalls` <character> => character;
type `parse8_pat_smalls_after_non_alnums` <character> => character;
type `preprocess_internal` <^character[], character> => ^character[];
type `replace_special_characters_internal` <character[], character[], any> => character[];
type `to_any_case` <^character[], character[], null | character[], any, any, any, character[], any, null | character> => ^character[];
type `to_lower_camel_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
type `to_lower_upper_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
type `to_mixed_case` <^character[], null, character, double, null, character, null | character, null, null> => ^character[];
type `to_parsed_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
type `to_parsed_case_internal` <^character[], double, any, null | character[], any> => ^character[];
type `to_random_case` <^character[], null, character, double, null, character, null, null, null> => character[];
type `to_screaming_snake_case` <^character[], null, character, double, null, character, null | character, null, null> => ^character[];
type `to_sentence_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
type `to_snake_case` <^character[], null | character[], character, double, null, character, null | character, null, null> => ^character[];
type `to_swap_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
type `to_title_case` <^character[], null | character, character, double, null, character, null, null, null> => ^character[];
type `to_upper_camel_case` <^character[], null | character, character, double, null, character, null | character, null, null> => ^character[];
type `to_upper_lower_case` <^character[], null, character, double, null, character, null, null, null> => ^character[];
