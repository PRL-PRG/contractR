type `coefTable` <double[], double[], double> => class<`matrix`>;
type `colMedians` <class<`matrix`> | class<`array`> | class<`data.frame`>, logical> => (class<`array`> | class<`matrix`>);
type `compPlot` <double[], double[], double[] | null, ...> => double[];
type `ddnorm` <double[], double, double> => double[];
type `insertCol` <class<`matrix`>, double, double | integer[], character> => class<`matrix`>;
type `insertRow` <class<`matrix`>, double, double | integer[], character> => class<`matrix`>;
type `isSemidefinite` <class<`matrix`> | list<class<`matrix`>> | list<class<`matrix`> | double[]>, ...> => any;
type `isSemidefinite.list` <list<class<`matrix`>> | list<class<`matrix`> | double[]>, ...> => any;
type `isSemidefinite.matrix` <class<`matrix`>, logical, double, any, ...> => any;
type `margEff` <double, ...> => any;
type `margEff.default` <double, ...> => any;
type `nObs` <class<`lm`>, ...> => integer;
type `nObs.lm` <class<`lm`>, ...> => integer;
type `nParam` <class<`lm`>, logical, ...> => integer;
type `nParam.lm` <class<`lm`>, ...> => integer;
type `quasiconcavity` <list<class<`matrix`>> | class<`matrix`>, any> => logical[];
type `quasiconvexity` <list<class<`matrix`>> | class<`matrix`>, any> => logical[];
type `rowMedians` <class<`matrix`> | class<`data.frame`>, logical> => class<`array`>;
type `rSquared` <double[], double[]> => class<`matrix`>;
type `semidefiniteness` <class<`matrix`> | list<class<`matrix`>> | list<class<`matrix`> | double[]>, ...> => any;
type `stdEr` <class<`nls`> | class<`lm`>, ...> => double[];
type `stdEr.default` <class<`nls`>, ...> => double[];
type `stdEr.lm` <class<`lm`>, ...> => double[];
type `sumKeepAttr` <integer[], logical, logical> => integer;
type `summarizeDF` <class<`data.frame`>, logical, double, class<`connection`, `file`> | null, ...> => null;
type `symMatrix` <double[], null | double, logical, logical> => class<`matrix`>;
type `triang` <integer[], double> => class<`matrix`>;
type `vecli` <class<`matrix`>> => class<`array`>;
type `vecli2m` <double[]> => class<`matrix`>;
type `veclipos` <double, double, double> => double;
