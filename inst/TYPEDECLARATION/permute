type `allFree` <integer, integer[]> => class<`matrix`>;
type `allGrid` <integer, double, any, double, logical, any> => class<`matrix`>;
type `allPerms` <double[], class<`how`>, logical> => class<`allPerms`, `matrix`, `permutationMatrix`>;
type `allSeries` <integer, double, logical> => class<`matrix`>;
type `cbindAllPerms` <list<class<`matrix`>>> => class<`matrix`>;
type `check` <double[], class<`how`>, logical> => class<`check`>;
type `doAllPerms` <integer[], class<`factor`> | null, character, any, any, any, any, any, any, class<`how`>, any> => class<`matrix`>;
type `filter` <character[]> => logical[];
type `fixupCall` <class<`how`>, character, double | null> => class<`how`>;
type `FUN` <integer[], integer[]> => logical | <integer, list<class<`matrix`>>, class<`data.frame`>> => class<`matrix`> | <integer[], any, any, character, character, class<`factor`> | null, any, any, any> => double | <integer> => class<`matrix`> | <class<`matrix`>> => integer[];
type `getBlocks` <class<`how`>, ...> => null;
type `getBlocks.how` <class<`how`>, ...> => null;
type `getCol` <class<`how`>, ...> => (double | null);
type `getCol.how` <class<`how`>, character, ...> => (double | null);
type `getComplete` <class<`how`>, ...> => logical;
type `getComplete.how` <class<`how`>, ...> => logical;
type `getConstant` <class<`how`>, ...> => logical;
type `getConstant.how` <class<`how`>, ...> => logical;
type `getDim` <class<`how`>, ...> => (double[] | null);
type `getDim.how` <class<`how`>, character, ...> => (double[] | null);
type `getMake` <class<`how`>, ...> => logical;
type `getMake.how` <class<`how`>, ...> => logical;
type `getMaxperm` <class<`how`>, ...> => double;
type `getMaxperm.how` <class<`how`>, ...> => double;
type `getMinperm` <class<`how`>, ...> => double;
type `getMinperm.how` <class<`how`>, ...> => double;
type `getMirror` <class<`how`>, ...> => logical;
type `getMirror.how` <class<`how`>, character, ...> => logical;
type `getNperm` <class<`how`>, ...> => double;
type `getNperm.how` <class<`how`>, ...> => double;
type `getObserved` <class<`how`>, ...> => logical;
type `getObserved.how` <class<`how`>, ...> => logical;
type `getPlots` <class<`how`>, ...> => class<`Plots`>;
type `getPlots.how` <class<`how`>, ...> => class<`Plots`>;
type `getRow` <class<`how`>, ...> => null;
type `getRow.how` <class<`how`>, character, ...> => null;
type `getStrata` <class<`how`>, ...> => (class<`factor`> | null);
type `getStrata.how` <class<`how`>, character, logical, ...> => (class<`factor`> | null);
type `getType` <class<`how`>, ...> => character;
type `getType.how` <class<`how`>, character, ...> => character;
type `getWithin` <class<`how`>, ...> => class<`Within`>;
type `getWithin.how` <class<`how`>, ...> => class<`Within`>;
type `how` <class<`Within`>, class<`Plots`>, null, double, logical, double, double, null, logical, logical> => class<`how`>;
type `nobs.integer` <integer[], ...> => integer;
type `nobs.numeric` <double[], ...> => integer;
type `numPerms` <double[], class<`how`>> => double;
type `Plots` <class<`factor`> | null, character[], logical, null, null> => class<`Plots`>;
type `setBlocks<-` <class<`how`>, null> => class<`how`>;
type `setBlocks<-.how` <class<`how`>, null> => class<`how`>;
type `setComplete<-` <class<`how`>, logical> => class<`how`>;
type `setComplete<-.how` <class<`how`>, logical> => class<`how`>;
type `setMake<-` <class<`how`>, logical> => class<`how`>;
type `setMake<-.how` <class<`how`>, logical> => class<`how`>;
type `setMaxperm<-` <class<`how`>, double> => class<`how`>;
type `setMaxperm<-.how` <class<`how`>, double> => class<`how`>;
type `setNperm<-` <class<`how`>, double> => class<`how`>;
type `setNperm<-.how` <class<`how`>, double> => class<`how`>;
type `summary.allPerms` <class<`allPerms`, `matrix`, `permutationMatrix`>, ...> => class<`summary.allPerms`>;
type `update.how` <class<`how`>, ..., logical> => class<`how`>;
type `Within` <character[], logical, logical, null | double, null | double> => class<`Within`>;
