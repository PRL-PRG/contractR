type `approxSSM` <class<`SSModel`>, any, double, double> => class<`SSModel`, `approxSSM`>;
type `artransform` <double[]> => double[];
type `coef.KFS` <class<`KFS`>, any, double[] | null, logical, character[], logical, ...> => (class<`matrix`, `mts`, `ts`> | class<`ts`> | double[]);
type `coef.SSModel` <class<`SSModel`>, double[] | null, double[] | null, logical, character, logical, double, ...> => (class<`matrix`, `mts`, `ts`> | double[]);
type `fitSSM` <class<`SSModel`>, double[], any, any, null, ...> => list<any>;
type `fitted.KFS` <class<`KFS`>, null, null, logical, ...> => (class<`ts`> | double[]);
type `fitted.SSModel` <class<`SSModel`>, null, null, logical, double, ...> => double[];
type `hatvalues.KFS` <class<`KFS`>, ...> => class<`ts`>;
type `importanceSSM` <class<`SSModel`>, character[], logical, double, logical, any, logical, double> => list<class<`array`> | double[]>;
type `initTheta` <class<`matrix`, `mts`, `ts`> | class<`ts`>, class<`matrix`, `mts`, `ts`> | class<`matrix`> | class<`ts`>, character[]> => class<`matrix`>;
type `interval` <class<`SSModel`>, character, double, character, integer[], double, logical, integer[], any, double, logical> => list<class<`matrix`>>;
type `is.SSModel` <class<`SSModel`> | class<`SSModel`, `approxSSM`>, logical, logical> => (logical | null);
type `KFS` <class<`SSModel`> | class<`SSModel`, `approxSSM`>, any, any, logical, any, any, any, double, double, logical> => class<`KFS`>;
type `ldl` <class<`matrix`>, any> => class<`matrix`>;
type `logLik.SSModel` <class<`SSModel`>, logical, double, logical, any, logical, any, double, any, double, ...> => double;
type `pearson_standardized` <class<`KFS`>, character, double> => class<`ts`>;
type `predict.SSModel` <class<`SSModel`>, any, any, character, double, character[], null, logical, double, logical, double, logical, ...> => (class<`matrix`, `mts`, `ts`> | list<class<`matrix`, `mts`, `ts`>>);
type `recursive_standardized` <class<`KFS`>, character, double> => (class<`matrix`, `mts`, `ts`> | class<`ts`>);
type `rename_states` <class<`SSModel`>, character> => class<`SSModel`>;
type `rstandard.KFS` <class<`KFS`>, character[], character[], double, ...> => (class<`matrix`, `mts`, `ts`> | class<`ts`>);
type `signal` <class<`KFS`>, character[], logical> => list<class<`matrix`, `mts`, `ts`> | class<`array`> | class<`ts`> | class<`array`>>;
type `simHelper` <class<`SSModel`>, double, logical> => list<class<`array`> | class<`matrix`> | double[]>;
type `simulateSSM` <class<`SSModel`>, character[], logical, double, logical, logical> => class<`array`>;
type `SSMarima` <double[] | null, any, double, any, logical, any, double, null, any> => any;
type `SSMcustom` <double | class<`matrix`> | class<`array`>, double | class<`matrix`> | class<`array`>, any, double | null | class<`matrix`> | class<`array`>, any, any, any, integer[], integer, character | null> => list<any>;
type `SSModel` <class<`formula`>, any, any, any, any, double> => class<`SSModel`>;
type `[<-.SSModel` <class<`SSModel`>, character, any, any, any, any, ..., class<`matrix`> | double[]> => class<`SSModel`>;
type `[.SSModel` <class<`SSModel`>, character[], any, any, any, any, logical, ...> => (class<`array`> | class<`matrix`> | double[] | list<class<`ts`> | class<`array`> | class<`matrix`>>);
type `SSMregression` <class<`formula`> | list<class<`formula`>>, any, any, any, integer[], any, any, any, any, integer, logical, null, any> => list<any>;
type `SSMseasonal` <double, any, character, any, integer, any, any, any, integer, null, any, any> => list<any>;
type `SSMtrend` <double, double | null | list<any>, any, integer[], any, any, any, integer, null, any> => list<any>;
type `state_standardized` <class<`KFS`>, character, double> => class<`ts`>;
type `transformSSM` <class<`SSModel`>, character> => class<`SSModel`>;
type `varianceFilter` <class<`KFS`>> => class<`matrix`, `mts`, `ts`>;
