type `AIC.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, null, double> => double;
type `bigglm` <language, any => any | struct<>, language, double> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>;
type `bigglm.data.frame` <language, struct<`Girth`:double[], `Height`:double[], `Volume`:double[]>, logical, double> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>;
type `bigglm.function` <language, any => any, struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, null, logical, double, double, null, logical, null> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>;
type `biglm` <language, struct<`Girth`:double[], `Height`:double[], `Volume`:double[]>, null, logical> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>;
type `bigqr.init` <double> => struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>;
type `coef.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer> | struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>>, null> => double[];
type `coef.bigqr` <struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, null, null> => double[];
type `data` <logical> => struct<`Girth`:double[], `Height`:double[], `Volume`:double[]>;
type `deviance.bigglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>, null> => double;
type `deviance.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, null> => double;
type `etafun` <^double[]> => ^double[];
type `f` <^double[]> => ^double[];
type `filter` <character[]> => logical[];
type `fit` <^double[]> => ^double[];
type `predict.bigglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, struct<`Girth`:double[], `Height`:double[], `Volume`:double[]>, character, logical, logical, null> => ^double[];
type `predict.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, null | struct<>, logical, logical, null> => any => any | ^double[];
type `print.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, null> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>;
type `print.summary.biglm` <struct<`obj`:struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, `mat`:^double[], `nullrss`:double, `rsq`:double>, double, null> => struct<`obj`:struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, `mat`:^double[], `nullrss`:double, `rsq`:double>;
type `singcheck.bigqr` <struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>> => struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>;
type `summary.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer> | struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>, null> => struct<`obj`:struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, `mat`:^double[], `nullrss`:double, `rsq`:double> | struct<`obj`:struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>, `mat`:^double[], `nullrss`:double, `rsq`:double>;
type `update.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, struct<`Girth`:double[], `Height`:double[], `Volume`:double[]>, null> => struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>;
type `update.bigqr` <struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, ^double[], ^double[], null | double[], logical, logical> => struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>;
type `vcov.bigglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any>, `deviance`:double, `df.resid`:double>, null, null> => ^double[];
type `vcov.biglm` <struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `iterations`:integer, `assign`:integer[], `terms`:language, `converged`:logical, `n`:double, `names`:character[], `weights`:null, `rss`:double, `sandwich`:struct<`xy`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>>> | struct<`call`:language, `qr`:struct<`D`:double[], `rbar`:double[], `thetab`:double[], `ss`:double, `checked`:logical, `tol`:double[]>, `assign`:integer[], `terms`:language, `n`:integer, `names`:character[], `weights`:null, `df.resid`:integer>, null> => ^double[];
