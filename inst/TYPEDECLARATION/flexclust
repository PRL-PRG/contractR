type `@` <class<`matrix`>, class<`matrix`>> => class<`matrix`> | <class<`matrix`>> => class<`matrix`> | <any, any, double, null | class<`matrix`>> => (integer[] | list<integer[]>) | <class<`matrix`>> => double[];
type `asMethod` <class<`cclustControl`>, character, logical> => class<`cclustControl`> | <class<`kcca`>, any, class<`kccasimple`>> => class<`kcca`> | <any, character, logical> => class<`cclustControl`> | <class<`kccasimple`>, character, logical> => class<`kcca`>;
type `barchart` <class<`kcca`>, any, ...> => (class<`trellis`> | null);
type `Barchart` <class<`matrix`>, double[], null, null, any, any, character[], character, any, double | null, logical, ...> => class<`trellis`>;
type `barplot` <class<`kcca`>, ...> => null;
type `cclust` <class<`data.frame`>, double, character, character, null, null, null, logical, logical> => class<`kcca`>;
type `clusinfo` <integer[], class<`matrix`>, logical> => class<`data.frame`>;
type `computeClusterSim` <class<`matrix`>, list<integer[]>> => class<`matrix`>;
type `createBarchartPanel` <any, any, any, any, any, double | null, any> => class<`function`>;
type `filter` <character[]> => logical[];
type `flxColors` <any, character, logical> => character[];
type `FUN` <integer[]> => integer;
type `info` <class<`kcca`>, character, ...> => integer[];
type `initCenters` <class<`matrix`>, double, class<`kccaFamily`>, class<`cclustControl`>> => list<class<`matrix`> | integer[]>;
type `kccaFamily` <character, null, null, character, null, double, character> => class<`kccaFamily`>;
type `KKKplus` < > => double;
type `.local` <class<`kcca`>, character, logical, ...> => integer[] | <class<`kcca`>, any, character, null, character, null, character, character | null, null, logical, logical, null | double> => (class<`trellis`> | null) | <class<`kcca`>, logical, logical, class<`data.frame`> | null, any, any, integer[], null, any, null, character, double> => null | <class<`kcca`>, class<`data.frame`>, ...> => integer[];
type `newKccaObject` <class<`matrix`>, class<`kccaFamily`>, class<`matrix`>, null, logical, ...> => class<`kcca`>;
type `newKccasimpleObject` <class<`matrix`>, class<`kccaFamily`>, class<`matrix`>, null, class<`matrix`>, ...> => class<`kccasimple`>;
type `predict` <class<`kcca`>, ...> => integer[];
type `randomcent` <class<`matrix`>, integer, class<`kccaFamily`>> => class<`matrix`>;
type `simple2kcca` <class<`matrix`>, class<`kccasimple`>, null, class<`matrix`>> => class<`kcca`>;
