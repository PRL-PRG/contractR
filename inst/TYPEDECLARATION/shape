type `Arrowhead` <double[], double[], double[], double[], double[] | language | symbol, double, character, character | double | integer[], double, double | character[] | integer[], double, double, null | logical | character> => null;
type `Arrows` <double[], double[], double[], double[], double, double[], double[] | language, double, character, logical, character, character | double | integer[], double, double | integer[] | character[], double, double, null | logical | character> => null;
type `emptyplot` <double[], double[], null | double, logical, null | character, character | null> => null;
type `filledellipse` <double, double, double, null | double, ^double[], double, double, double, double, character[] | double, null | ^double[], null | symbol, double | symbol, null | character, null> => null;
type `filledmultigonal` <double[], double, double, double, character[], null, null, double, null | character, double, null> => null;
type `filledshape` <^double[], ^double[], character[] | double, null | ^double[], null | symbol, null | character, double | symbol, null> => null;
type `filter` <character[]> => logical[];
type `plotcircle` <double, double[]> => null;
type `plotellipse` <double, double, double[], double, double, double, double, character, double, character | double, null | character, logical, double, language | double[], character, double[], double, double, character[]> => null;
type `roundrect` <double[], double, double, double, double, character[] | integer, null | character, double, double, null> => null;
type `colorlegend` <character[], double[], null | double, null | double, null | double[], logical, double[], double[], null | character, double, character, character, double, logical, null> => struct<`mar`:double[]>;
type `cylindersegment` <double, double, double, double, double, double[], double, double, character, double, double | null> => null;
type `expand` <double[], integer> => ^double[];
type `filledcircle` <double, double, double[], double, double, double, character[] | double, null, null, double, null, null> => null;
type `filledcylinder` <double, double, double, character[], null | character, double, null | character, double, symbol | double, double[], double, double, double, null | character[], null, null> => null;
type `filledrectangle` <double[], double, double, character[], null, null, double, null, double, null> => null;
type `textflag` <double[], double, double, double, double, character[], character, character, double, double, character, logical, null | character, double> => null;
type `writelabel` <character, double, double, double, double, null> => null;
