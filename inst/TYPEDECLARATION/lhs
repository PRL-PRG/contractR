type `augmentLHS` <class<`matrix`>, double> => class<`matrix`>;
type `createAddelKemp` <double, double, logical> => class<`matrix`>;
type `createAddelKemp3` <double, double, logical> => class<`matrix`>;
type `createAddelKempN` <double, double, double, logical> => class<`matrix`>;
type `createBose` <double, double, logical> => class<`matrix`>;
type `createBoseBush` <double, double, logical> => class<`matrix`>;
type `createBoseBushl` <double, double, double, logical> => class<`matrix`>;
type `createBush` <double, double, logical> => class<`matrix`>;
type `createBusht` <double, double, double, logical> => class<`matrix`>;
type `create_oalhs` <double, double, logical, logical> => class<`matrix`>;
type `geneticLHS` <double, double, double, double, double, character, logical> => class<`matrix`>;
type `improvedLHS` <double, double, double> => class<`matrix`>;
type `maximinLHS` <double, double, character, double, double, double, character, logical> => class<`matrix`>;
type `oa_to_oalhs` <double, double, class<`matrix`>> => class<`matrix`>;
type `optAugmentLHS` <class<`matrix`>, double, double> => class<`matrix`>;
type `optimumLHS` <double, double, double, double, logical> => class<`matrix`>;
type `optSeededLHS` <class<`matrix`>, double, double, double, logical> => class<`matrix`>;
type `randomLHS` <double, double, logical> => class<`matrix`>;
type `runifint` <double, double, integer> => double[];
