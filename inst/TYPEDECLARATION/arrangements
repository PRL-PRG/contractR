type `.subset2` <double, null | double, null | logical, null, logical, null> => logical;
type `$` <double | character, null | character, null | logical> => null | ^integer[];
type `combinations` <null | character[] | double, double, null, null, null | double[], logical, null | character, double, null | double, null | double[], null | double, null> => ^character[] | ^integer[] | list<integer[]>;
type `filter` <character[]> => logical[];
type `icombinations` <double, double, null, null, null, logical, null> => environment;
type `ipartitions` <double, null | double, logical, null> => environment;
type `ipermutations` <double, double, null, null, null, logical, null> => environment;
type `ncombinations` <null | character[] | double, double, null, null, null | double[], logical, logical> => integer | raw[];
type `npartitions` <double, null | double, logical> => integer | raw[];
type `npermutations` <null | character[] | double, null | double, null, null, null | double[], logical, logical> => integer | raw[];
type `partitions` <double, null | double, logical, null | character, integer, null, null, null, null> => ^integer[] | tuple<integer[], integer[], integer[]> | list<integer[]>;
type `permutations` <null | character[] | double, null | double, null, null, null | double[], logical, null | character, double, null | double, null | double[], null | double, null> => ^character[] | ^integer[] | list<integer[]>;
type `validate_n_value` <double, null, null, null> => double;
