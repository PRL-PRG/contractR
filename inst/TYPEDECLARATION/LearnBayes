type `bayes.influence` <class<`matrix`>, class<`data.frame`>> => list<double[] | class<`matrix`>>;
type `bayes.model.selection` <double[], class<`matrix`>, double, logical> => list<class<`data.frame`> | logical[]>;
type `bayes.probit` <double[], class<`matrix`>, double, list<double[] | class<`matrix`>> | list<double>> => (list<class<`matrix`> | double> | list<class<`matrix`> | null>);
type `bayesresiduals` <class<`lm`>, list<class<`matrix`> | double[]>, double> => double[];
type `betabinexch` <double[], class<`matrix`>> => double;
type `betabinexch0` <double[], class<`matrix`>> => double;
type `beta.select` <list<double>, list<double>> => double[];
type `bfexch` <double, list<class<`matrix`> | double>> => double;
type `bfindep` <class<`matrix`>, double, double> => list<double>;
type `binomial.beta.mix` <double[], class<`matrix`>, double[]> => list<double[] | class<`matrix`>>;
type `blinreg` <double[], class<`matrix`>, double, null> => list<class<`matrix`> | double[]>;
type `blinregexpected` <class<`matrix`>, list<class<`matrix`> | double[]>> => class<`matrix`>;
type `blinregpred` <class<`matrix`>, list<class<`matrix`> | double[]>> => class<`matrix`>;
type `bprobit.probs` <class<`matrix`>, class<`matrix`>> => class<`matrix`>;
type `bradley.terry.post` <double[], class<`data.frame`>> => double;
type `careertraj.setup` <class<`data.frame`>> => list<character[] | class<`matrix`> | double[]>;
type `cauchyerrorpost` <double[], double[]> => double;
type `ctable` <class<`matrix`>, class<`matrix`>> => double;
type `discint` <class<`matrix`>, double> => list<double[]>;
type `discrete.bayes` <class<`function`>, double[], double[], ...> => class<`bayes`>;
type `discrete.bayes.2` <any, class<`matrix`>, null, ...> => class<`bayes2`>;
type `dmnorm` <double[], double[] | class<`matrix`>, class<`matrix`>, logical> => double;
type `dmt` <class<`matrix`> | double[], double[], class<`matrix`>, double, logical> => double[];
type `gibbs` <class<`function`>, class<`matrix`>, double, double[], ...> => list<class<`matrix`>>;
type `groupeddatapost` <double[], list<double[]>> => double;
type `hiergibbs` <class<`data.frame`>, double> => list<class<`matrix`>>;
type `histprior` <double[], double[], double[]> => double[];
type `howardprior` <double[], double[]> => double;
type `impsampling` <class<`function`>, list<double[] | class<`matrix`>>, class<`function`>, double, class<`data.frame`>> => list<double | class<`matrix`>>;
type `indepmetrop` <class<`function`>, list<class<`matrix`>>, class<`matrix`>, double, ...> => list<class<`matrix`>>;
type `laplace` <class<`function`>, class<`matrix`> | double[], ...> => (list<class<`matrix`> | double> | list<double[] | class<`matrix`>> | list<double | class<`matrix`>>);
type `lbinorm` <double[], list<double[] | class<`matrix`>>> => double;
type `logctablepost` <double[], double[]> => double;
type `logisticpost` <double[], class<`matrix`>> => double;
type `logpoissgamma` <double[], list<double[]>> => double[];
type `logpoissnormal` <double[], list<double[]>> => double[];
type `mnormt.onesided` <double, double[], double[]> => list<double>;
type `mnormt.twosided` <double, double, double[], double[]> => list<double[]>;
type `mycontour` <class<`function`>, double[], list<double> | class<`data.frame`> | list<class<`matrix`>> | list<double[] | class<`matrix`>>, ...> => null;
type `normal.normal.mix` <double[], class<`matrix`>, double[]> => list<double[] | class<`matrix`>>;
type `normal.select` <list<double>, list<double>> => list<double>;
type `normchi2post` <double[], double[]> => double;
type `normnormexch` <double[], class<`matrix`>> => double;
type `normpostpred` <list<double[]>, double, class<`function`>> => double[];
type `normpostsim` <integer[], null, double> => list<double[]>;
type `ordergibbs` <class<`data.frame`>, double> => class<`matrix`>;
type `pbetap` <double[], double, integer[]> => double[];
type `pbetat` <double, double, double[], double[]> => list<double>;
type `pdisc` <double[], double[], double[]> => double[];
type `pdiscp` <double[], double[], double, integer[]> => double[];
type `plot.bayes` <class<`bayes`>, ...> => class<`matrix`>;
type `poissgamexch` <double[], list<class<`matrix`> | double>> => double;
type `poisson.gamma.mix` <double[], class<`matrix`>, list<double[]>> => list<double[] | class<`matrix`>>;
type `predplot` <double[], double, double> => null;
type `print.bayes` <class<`bayes`>, ...> => double[];
type `prior.two.parameters` <double[], double[]> => class<`matrix`>;
type `rdirichlet` <double, double[]> => class<`matrix`> | <double, double[]> => class<`matrix`>;
type `reg.gprior.post` <double[], list<list<integer[] | class<`matrix`> | double[]>>> => double;
type `regroup` <class<`matrix`>, double> => class<`matrix`>;
type `rejectsampling` <class<`function`>, list<double[] | class<`matrix`>>, double, double, class<`data.frame`>> => class<`matrix`>;
type `rigamma` <double, double, double> => double[] | <double, double, double> => double;
type `rmnorm` <double, double[], class<`matrix`>> => class<`matrix`>;
type `rmt` <double, double[], class<`matrix`>, double> => class<`matrix`>;
type `robustt` <double[], double, double> => list<class<`matrix`>>;
type `rtruncated` <integer, double[], double[], class<`function`>, class<`function`>, ...> => double[] | <double, double, double, class<`function`>, class<`function`>, ...> => double[];
type `rwmetrop` <class<`function`>, list<class<`matrix`> | double>, double[] | class<`matrix`>, double, ...> => list<class<`matrix`> | double>;
type `simcontour` <class<`function`>, double[], list<class<`matrix`>>, double> => list<double[]>;
type `sir` <class<`function`>, list<class<`matrix`> | double> | list<double[] | class<`matrix`>>, double, class<`data.frame`>> => class<`matrix`>;
type `summary.bayes` <class<`bayes`>, double, ...> => list<double[]>;
type `transplantpost` <double[], class<`data.frame`>> => double;
type `triplot` <double[], double[], character> => list<list<double[]>>;
type `weibullregpost` <double[], class<`matrix`>> => double;
