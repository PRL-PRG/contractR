type `[[` <class<`condition`, `error`, `simpleError`>> => class<`condition`, `error`, `simpleError`>;
type `$` <class<`jqr`>> => class<`character`, `jqson`>;
type `ad` <character> => class<`jqr`>;
type `allj` <character> => class<`jqr`>;
type `anyj` <character> => class<`jqr`>;
type `at` <character | class<`jqr`>, ...> => class<`jqr`>;
type `at_` <character | class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `build_array` <character, ...> => class<`jqr`>;
type `build_array_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `build_object` <character | class<`character`, `jqson`> | class<`jqr`>, ...> => class<`jqr`>;
type `build_object_` <character | class<`character`, `jqson`> | class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `callback` <character[]> => null;
type `collapse_vec` <character | double> => (character | double);
type `comb` <list<any>, character> => list<character>;
type `combine` <class<`character`, `jqson`>> => class<`jqson`>;
type `contains` <character, ...> => class<`jqr`>;
type `contains_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `cpt` <list<character>> => list<character>;
type `del` <character, ...> => class<`jqr`>;
type `del_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `do` <character | class<`jqr`>, ...> => class<`jqr`>;
type `do_` <character | class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `dot` <character> => class<`jqr`>;
type `dot_` <character | class<`character`, `jqson`>, character> => class<`jqr`>;
type `dotindex` <character, ...> => class<`jqr`>;
type `dotindex_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `dotstr` <character | class<`jqr`>, ...> => class<`jqr`>;
type `dotstr_` <character | class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `endswith` <class<`jqr`>, ...> => class<`jqr`>;
type `endswith_` <class<`jqr`>, ..., any> => class<`jqr`>;
type `filter` <character[]> => logical[];
type `flags` <character | class<`character`, `jqson`> | class<`jqr`>, logical, logical, logical, logical, logical, logical> => class<`jqr`>;
type `floorj` <character> => class<`jqr`>;
type `fromjson` <class<`jqr`>> => class<`jqr`>;
type `FUN` <class<`lazy`>> => character | <class<`lazy`>> => character | <class<`lazy`>> => character;
type `funs` <character, character, character> => class<`jqr`>;
type `getdata` <character | class<`jqr`> | class<`character`, `jqson`>> => (character | class<`character`, `jqson`>);
type `get_expr` <class<`lazy`> | class<`lazy_dots`>> => character;
type `get_jq_seq` <double | integer[], logical> => character;
type `group` <character, ...> => class<`jqr`>;
type `group_` <character, ..., any> => class<`jqr`>;
type `haskey` <character, ...> => class<`jqr`>;
type `haskey_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `index` <character, ...> => class<`jqr`>;
type `index_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `indexif` <character, ...> => class<`jqr`>;
type `indexif_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `index_loc` <character, ...> => class<`jqr`>;
type `index_loc_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `indices` <character, ...> => class<`jqr`>;
type `indices_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `join` <character, ...> => class<`jqr`>;
type `join_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `jq` <character[] | class<`connection`, `file`> | class<`jqr`>, ...> => class<`character`, `jqson`>;
type `jq.character` <character[], ..., integer> => class<`character`, `jqson`>;
type `jq.connection` <class<`connection`, `file`>, ..., integer, null> => class<`character`, `jqson`>;
type `jq_flags` <logical, logical, logical, logical, logical, logical> => integer;
type `jq.jqr` <class<`jqr`>, ...> => class<`character`, `jqson`>;
type `jqr` <character[] | class<`character`, `jqson`>, ...> => character[];
type `jqr.connection` <class<`connection`, `file`>, character, integer, null> => character[];
type `jqr.default` <character[] | class<`character`, `jqson`>, character, integer> => character[];
type `jqr_feed` <class<`jqr_program`>, character[] | class<`character`, `jqson`>, logical, logical> => character[];
type `jqr_new` <character, integer> => class<`jqr_program`>;
type `keys` <character> => class<`jqr`>;
type `lengthj` <class<`jqr`>> => class<`jqr`>;
type `ltrimstr` <class<`jqr`>, ...> => class<`jqr`>;
type `ltrimstr_` <class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `make_query` <class<`jqr`>> => character;
type `map` <character, ...> => class<`jqr`>;
type `map_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `maxj` <character, ...> => class<`jqr`>;
type `maxj_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `minj` <character, ...> => class<`jqr`>;
type `minj_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `paths` <character> => class<`jqr`>;
type `peek` <class<`jqr`>> => class<`jq_query`>;
type `pipe_autoexec` <logical> => null;
type `pipeline_info` < > => list<logical | environment | logical | null>;
type `pipeline_on_exit` <environment> => null;
type `pluck` <class<`lazy_dots`>, character, any> => list<class<`name`> | double>;
type `pop` <class<`jqr`>> => list<character>;
type `query_from_dots` <...> => character;
type `rangej` <double | integer[], logical> => class<`jqr`>;
type `recurse` <character, ...> => class<`jqr`>;
type `recurse_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `reverse` <character> => class<`jqr`>;
type `rindex_loc` <character, ...> => class<`jqr`>;
type `rindex_loc_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `rtrimstr` <class<`jqr`>, ...> => class<`jqr`>;
type `rtrimstr_` <class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `select` <character | class<`jqr`>, ...> => class<`jqr`>;
type `select_` <character | class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `setdef` <class<`lazy_dots`>, character> => character;
type `sortj` <character, ...> => class<`jqr`>;
type `sortj_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
type `sqrtj` <character> => class<`jqr`>;
type `startswith` <class<`jqr`>, ...> => class<`jqr`>;
type `startswith_` <class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `string` <class<`jqr`>> => character;
type `sub_ops` <character> => character;
type `sub_ops_sel` <character> => character;
type `tojson` <class<`jqr`>> => class<`jqr`>;
type `tonumber` <class<`jqr`>> => class<`jqr`>;
type `tostring` <class<`jqr`>> => class<`jqr`>;
type `tryargs` <character | class<`character`, `jqson`> | class<`jqr`>> => list<any>;
type `type` <class<`jqr`>, ...> => class<`jqr`>;
type `type_` <class<`jqr`>, ..., class<`lazy_dots`>> => class<`jqr`>;
type `types` <character> => class<`jqr`>;
type `uniquej` <character, ...> => class<`jqr`>;
type `uniquej_` <character, ..., any> => class<`jqr`>;
type `vars` <character, ...> => class<`jqr`>;
type `vars_` <character, ..., class<`lazy_dots`>> => class<`jqr`>;
