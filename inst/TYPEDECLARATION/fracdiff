type `filter` <character[]> => logical[];
type `.fdcov` <double[], double, symbol, double, double, ^double[], double[]> => struct<`msg`:character, `d`:double, `nam`:character[], `h`:double, `hd`:double[], `se.ok`:logical, `covariance.dpq`:^double[], `stderror.dpq`:double[], `correlation.dpq`:^double[]> | struct<`msg`:character, `d`:double, `nam`:character[], `h`:double, `hd`:double[], `se.ok`:logical, `covariance.dpq`:^double[], `stderror.dpq`:null, `correlation.dpq`:null>;
type `coef.fracdiff` <struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:null, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double, `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, null> => double[];
type `confint.fracdiff` <struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, null, double, null> => ^double[];
type `diffseries` <double[], double> => double[];
type `fdGPH` <double[], double> => struct<`d`:double, `sd.as`:double, `sd.reg`:double>;
type `fdSperio` <double[], double, double> => struct<`d`:double, `sd.as`:double, `sd.reg`:double>;
type `fracdiff` <double[], double, double, null | ^logical[], null, null | double, double[], null, double, double> => struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double, `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:null, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>;
type `fracdiff.sim` <double, null | double[], null | double[], double, any => any, double[], null | double, logical, logical, double[], double | null, double> => struct<`series`:double[], `ar`:double[], `ma`:double[], `d`:double, `mu`:double, `n.start`:double> | struct<`series`:double[], `ar`:double[], `ma`:null, `d`:double, `mu`:double, `n.start`:double> | struct<`series`:double[], `ar`:null, `ma`:null, `d`:double, `mu`:double, `n.start`:double>;
type `fracdiff.var` <double[], struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, double> => struct<`log.likelihood`:double, `n`:integer, `msg`:character, `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>;
type `logLik.fracdiff` <struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double, `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language, `coef`:^double[]> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:null, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, null> => double;
type `summary.fracdiff` <struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double, `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:null, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, logical, null> => struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language, `coef`:^double[], `df`:integer, `aic`:double, `symbolic.cor`:logical> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language, `coef`:^double[], `df`:integer, `aic`:double, `symbolic.cor`:logical>;
type `vcov.fracdiff` <struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double[], `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:null, `correlation.dpq`:null, `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language> | struct<`log.likelihood`:double, `n`:integer, `msg`:character[], `d`:double, `ar`:double, `ma`:double, `covariance.dpq`:^double[], `fnormMin`:double, `sigma`:double, `stderror.dpq`:double[], `correlation.dpq`:^double[], `h`:double, `d.tol`:double, `M`:double, `hessian.dpq`:^double[], `length.w`:integer, `call`:language>, null> => ^double[];
