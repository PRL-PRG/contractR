type `frobenius.norm` <class<`matrix`>> => double;
type `MaRaTe.internal` <class<`matrix`>, class<`matrix`> | null, character> => (list<double | class<`matrix`>> | list<double>);
type `MaRaTe.internal.csample` <class<`matrix`>, class<`factor`>, character, ...> => list<double | class<`matrix`>>;
type `mat.sqrt` <class<`matrix`>> => class<`matrix`>;
type `mycolMeans` <class<`data.frame`> | class<`matrix`> | double[]> => double[];
type `pair.diff` <class<`matrix`>> => class<`matrix`>;
type `pair.prod` <class<`matrix`>> => class<`matrix`>;
type `pair.sum` <class<`matrix`>> => class<`matrix`>;
type `rank.ctest` <class<`data.frame`> | class<`formula`> | class<`ics`> | class<`matrix`>, ...> => class<`htest`>;
type `rank.ctest.default` <class<`data.frame`> | class<`matrix`>, class<`data.frame`> | null | class<`matrix`>, double[] | null, character, class<`function`>, ...> => class<`htest`>;
type `rank.ctest.formula` <class<`formula`>, any, ...> => class<`htest`>;
type `rank.ctest.ics` <class<`ics`>, class<`factor`> | null, double[], any, ...> => class<`htest`>;
type `sumsignout` <class<`matrix`>> => class<`matrix`>;
type `T.vdw.loc` <double, double[]> => double;
type `tyler.shape` <class<`matrix`>, double | null, null, double, double, double, logical, logical> => class<`matrix`>;
type `vdw.loc` <double[], double, double, class<`function`>> => double;
