type `bSpline` <double[], null, double[], double, logical, double[], null> => ^double[];
type `cSpline` <^double[], null, double[], double, logical, double[], logical, null> => ^double[];
type `dbs` <^double[], integer, null, double[], double, logical, double[], character[] | integer[] | null> => ^double[];
type `deriv.bSpline2` <^double[], integer, null> => ^double[];
type `deriv.cSpline` <^double[], double, null> => ^double[];
type `deriv.ibs` <^double[], integer, null> => ^double[];
type `deriv.iSpline` <^double[], double, null> => ^double[];
type `deriv.mSpline` <^double[], integer, null> => ^double[];
type `filter` <character[]> => logical[];
type `FUN` <^double[], integer[]> => ^double[];
type `ibs` <^double[], null, double[], double, logical, double[], null> => ^double[];
type `iSpline` <^double[], null, double[], double, logical, double[], integer, null> => ^double[];
type `mSpline` <^double[], null | integer, double[], double, logical, double[], double, null> => ^double[];
type `pieceConst` <language, null, double[], double[], logical> => struct<`df`:integer, `knots`:double[]>;
type `predict.bSpline2` <^double[], double[], null> => ^double[];
type `predict.cSpline` <^double[], double[], null> => ^double[];
type `predict.dbs` <^double[], double[], null> => ^double[];
type `predict.ibs` <^double[], double[], null> => ^double[];
type `predict.iSpline` <^double[], double[], null> => ^double[];
type `predict.mSpline` <^double[], double[], null> => ^double[];
