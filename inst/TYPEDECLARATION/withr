type `add_handler` <environment, list<class<`call`> | environment>, logical> => list<class<`call`> | environment>;
type `defer` <any, environment, character[]> => list<class<`call`> | environment>;
type `defer_parent` <any, character[]> => list<class<`call`> | environment>;
type `get_handlers` <environment> => (null | list<list<class<`call`> | environment>>);
type `get_seed` < > => (integer[] | null);
type `is.named` <character | double | null | list<class<`connection`, `file`> | class<`SQLiteConnection`>>> => logical;
type `local_connection` <class<`connection`, `file`>, environment> => class<`connection`, `file`>;
type `local_db_connection` <class<`SQLiteConnection`>, environment> => class<`SQLiteConnection`>;
type `make_call` <...> => class<`call`>;
type `names2` <character | list<null>> => character;
type `pdf_dev` <character, double, double, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any> => integer;
type `png_dev` <character, ...> => integer;
type `set_envvar` <character | double | null, character> => (character | null);
type `set_handlers` <environment, list<list<class<`call`> | environment>>> => null;
type `vlapply` <list<class<`SQLiteConnection`>>, class<`function`>, ..., logical> => logical;
type `with_` <class<`function`>, any, environment, logical> => class<`function`>;
type `with_connection` <list<class<`connection`, `file`>>, any> => null;
type `with_db_connection` <list<class<`SQLiteConnection`>>, logical> => logical;
type `with_dir` <character, character> => character;
type `with_envvar` <double, character, character> => character;
type `with_file` <character | list<null>, character> => (character | list<null>);
type `with_pdf` <character, null, double, double, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any> => null;
type `with_png` <character, null, ...> => null;
type `with_preserve_seed` <double[]> => double[];
type `with_seed` <integer, double[]> => double[];
