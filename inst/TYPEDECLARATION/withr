type `filter` <character[]> => logical[];
type `get_seed` < > => integer[];
type `get_valid_seed` < > => integer[];
type `add_handler` <environment, struct<`expr`:language, `envir`:environment>, logical> => struct<`expr`:language, `envir`:environment>;
type `defer` <language, environment, character[]> => struct<`expr`:language, `envir`:environment>;
type `get_handlers` <environment> => tuple<> | tuple<struct<`expr`:language, `envir`:environment>>;
type `local_dir` <character, environment> => character;
type `make_call` <any => any> => language;
type `set_handlers` <environment, tuple<struct<`expr`:language, `envir`:environment>>> => null;
type `with_dir` <character, character | double | ^integer[]> => character | double | ^integer[];
type `with_preserve_seed` <null | character | double[] | ^integer[] | struct<`sqrt`:double> | struct<`square`:double> | struct<`sum`:integer, `prod`:integer> | struct<`test`:integer[], `train`:integer[]>> => null | character | double[] | ^integer[] | struct<`sqrt`:double> | struct<`square`:double> | struct<`sum`:integer, `prod`:integer> | struct<`test`:integer[], `train`:integer[]>;
type `with_seed` <integer, null | character | double[] | ^integer[] | struct<`sqrt`:double> | struct<`square`:double> | struct<`sum`:integer, `prod`:integer> | struct<`test`:integer[], `train`:integer[]>> => null | character | double[] | ^integer[] | struct<`sqrt`:double> | struct<`square`:double> | struct<`sum`:integer, `prod`:integer> | struct<`test`:integer[], `train`:integer[]>;
type `::` <struct<`gargle_quiet`:logical> | struct<`rlang_interactive`:logical> | character | struct<`RSTUDIO_CONSOLE_WIDTH`:integer> | integer | struct<`width`:integer> | language, null | environment | character | struct<`value`:character[], `visible`:logical>, environment | logical | character[], logical> => null | struct<`gargle_quiet`:null> | struct<`rlang_backtrace_on_error`:null> | struct<`value`:character[], `visible`:logical> | struct<`width`:integer> | struct<`expr`:language, `envir`:environment>;
type `set_options` <struct<`gargle_quiet`:null> | struct<`gargle_quiet`:logical> | struct<`rlang_interactive`:null> | struct<`rlang_interactive`:logical> | struct<`rlang_backtrace_on_error`:null> | character | struct<`width`:integer>> => struct<`gargle_quiet`:logical> | struct<`gargle_quiet`:null> | struct<`rlang_interactive`:logical> | struct<`rlang_interactive`:null> | struct<`rlang_backtrace_on_error`:character> | struct<`rlang_backtrace_on_error`:null> | struct<`width`:integer>;
type `is.named` <null | struct<`RSTUDIO_CONSOLE_WIDTH`:integer> | character> => logical;
type `output_sink` <integer, symbol, logical> => null;
type `set_envvar` <null | struct<`RSTUDIO_CONSOLE_WIDTH`:integer>, character> => null | character;
type `set_output_sink` <integer, symbol, logical> => struct<`n`:integer>;
type `set_collate` <character> => character;
type `set_locale` <character> => character;
type `with_collate` <character, character[]> => character[];
type `defer_parent` <language, character[]> => struct<`expr`:language, `envir`:environment>;
type `pdf_dev` <character, double, double, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol, symbol> => integer;
type `png_dev` <character, double> => integer;
type `with_pdf` <character, null, double, double, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null> => null;
type `with_png` <character, null, double> => null;
