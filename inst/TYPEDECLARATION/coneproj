type `coef.coneproj` <class<`coneproj`>, ...> => (class<`matrix`> | double[]);
type `conc` <double[]> => double[];
type `coneA` <class<`matrix`> | double[], class<`matrix`>, null | double[], null, logical> => class<`coneproj`>;
type `coneB` <double[], class<`matrix`>, class<`matrix`>, double[] | null, null, logical> => class<`coneproj`>;
type `constreg` <double[], class<`matrix`>, class<`matrix`>, null, logical, double> => class<`coneproj`>;
type `conv` <double[]> => double[];
type `decr` <double[]> => double[];
type `decr.conc` <double[]> => double[];
type `decr.conv` <double[]> => double[];
type `fitted.coneproj` <class<`coneproj`>, ...> => class<`matrix`>;
type `incr` <double[]> => double[];
type `incr.conc` <double[]> => double[];
type `incr.conv` <double[]> => double[];
type `makedelta` <class<`matrix`>, double> => class<`matrix`>;
type `qprog` <class<`matrix`>, class<`matrix`>, class<`matrix`>, double[], null, logical> => class<`coneproj`>;
type `shapereg` <any, null, null, logical, double> => class<`coneproj`>;
type `shapereg.fit` <double[], class<`matrix`>, double, class<`matrix`> | null, null, logical, any> => list<double[] | class<`matrix`> | null | double[] | class<`matrix`> | null | double | class<`matrix`>>;
type `summary.coneproj` <class<`coneproj`>, ...> => class<`summary.coneproj`>;
