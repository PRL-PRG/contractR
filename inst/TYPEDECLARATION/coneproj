type `coef.coneproj` <struct<`constr.fit`:^double[], `unconstr.fit`:^double[], `coefs`:^double[]> | struct<`coefs`:double[], `constr.fit`:^double[], `linear.fit`:^double[], `se.beta`:double[], `pval`:double, `pvals.beta`:double[], `test`:logical, `SSE0`:double, `SSE1`:double, `shape`:double, `tms`:language, `zid`:integer, `vals`:character, `zid1`:double, `zid2`:double, `tnm`:character, `ynm`:character, `znms`:character, `is_param`:logical, `is_fac`:logical, `xmat`:^double[], `call`:language>, ???> => ^double[];
type `conc` <double[]> => double[];
type `conv` <double[]> => double[];
type `decr` <double[]> => double[];
type `decr.conc` <double[]> => double[];
type `decr.conv` <double[]> => double[];
type `filter` <character[]> => logical[];
type `fitted.coneproj` <struct<`coefs`:double, `constr.fit`:^double[], `linear.fit`:^double[], `se.beta`:double, `pval`:null, `pvals.beta`:double, `test`:logical, `SSE0`:double, `SSE1`:double, `shape`:double, `tms`:language, `zid`:null, `vals`:null, `zid1`:null, `zid2`:null, `tnm`:character, `ynm`:character, `znms`:null, `is_param`:null, `is_fac`:null, `xmat`:null, `call`:language> | struct<`df`:double, `thetahat`:^double[], `steps`:integer, `xmat`:^double[], `face`:integer[]> | struct<`df`:double, `yhat`:^double[], `steps`:integer, `coefs`:^double[], `face`:integer[]>, ???> => ^double[];
type `incr` <double[]> => double[];
type `incr.conc` <double[]> => double[];
type `incr.conv` <double[]> => double[];
type `summary.coneproj` <struct<`coefs`:double[], `constr.fit`:^double[], `linear.fit`:^double[], `se.beta`:double[], `pval`:null, `pvals.beta`:double[], `test`:logical, `SSE0`:double, `SSE1`:double, `shape`:double, `tms`:language, `zid`:integer, `vals`:character, `zid1`:double, `zid2`:double, `tnm`:character, `ynm`:character, `znms`:character, `is_param`:logical, `is_fac`:logical, `xmat`:^double[], `call`:language> | struct<`coefs`:double[], `constr.fit`:^double[], `linear.fit`:^double[], `se.beta`:double[], `pval`:double, `pvals.beta`:double[], `test`:logical, `SSE0`:double, `SSE1`:double, `shape`:double, `tms`:language, `zid`:integer, `vals`:character, `zid1`:double, `zid2`:double, `tnm`:character, `ynm`:character, `znms`:character, `is_param`:logical, `is_fac`:logical, `xmat`:^double[], `call`:language>, ???> => struct<`call`:language, `coefficients`:^double[], `residuals`:struct<`SSE.Linear`:double, `SSE.Full`:double>, `zcoefs`:double[]>;
