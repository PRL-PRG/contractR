type `filter` <character[]> => logical[];
type `FUN` <null | character[] | double[] | struct<>, null> => null | struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>> | struct<> | character[] | tuple<character[]> | double[];
type `melt.matrix` <^double[], null, null | language> => struct<`X1`:integer[], `X2`:integer[], `value`:double[]>;
type `add.all.combinations` <struct<`a`:double[], `b`:double[], `c`:double[], `result`:integer[]>, tuple<character[]>, null | ^double[]> => struct<`a`:double[], `b`:double[], `c`:double[], `result`:double[]>;
type `all.vars.character` <character, character> => struct<`m`:tuple<character[]>, `l`:character> | struct<`m`:tuple<character[]>, `l`:null> | struct<`m`:tuple<character, character>, `l`:character[]> | struct<`m`:tuple<null, character[]>, `l`:null>;
type `as.data.frame.cast_matrix` <^double[], null, null, null> => struct<`chick`:integer[], `0`:double[], `2`:double[], `4`:double[], `6`:double[], `8`:double[]>;
type `cast` <struct<`time`:double[], `chick`:integer[], `diet`:integer[], `variable`:integer[], `value`:double[]>, language | character, null | any => any | tuple<any => any, any => any>, null, logical | character[], null | language | symbol | integer[] | pairlist | character[] | environment, logical, null | double, logical, character> => struct<`chick`:integer[], `0`:double[], `2`:double[], `4`:double[], `6`:double[], `8`:double[]> | ^double[] | struct<`1`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `2`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `3`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `4`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `5`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `6`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `7`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `8`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `9`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `10`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>> | struct<`1`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `2`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `3`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `4`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `5`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `6`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `7`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `8`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `9`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `10`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>> | struct<`3`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `10`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `15`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `16`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `19`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `31`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `51`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `52`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `63`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `78`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `79`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `86`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>> | struct<`ozone`:struct<`month`:integer[], `(all)`:double[]>, `solar.r`:struct<`month`:integer[], `(all)`:double[]>, `wind`:struct<`month`:integer[], `(all)`:double[]>, `temp`:struct<`month`:integer[], `(all)`:double[]>> | struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>> | struct<`total_bill`:struct<`sex`:integer[], `No`:double[], `Yes`:double[]>, `tip`:struct<`sex`:integer[], `No`:double[], `Yes`:double[]>, `size`:struct<`sex`:integer[], `No`:double[], `Yes`:double[]>>;
type `cast_matrix` <^double[], tuple<struct<`chick`:integer[]>, struct<`time`:double[]>> | tuple<struct<`day`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`diet`:integer[]>, struct<`variable`:integer>> | tuple<struct<`month`:integer[]>, struct<`result_variable`:integer[]>> | tuple<struct<`month`:integer[]>, struct<`value`:integer>> | tuple<struct<`month`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`sex`:integer[]>, struct<`smoker`:integer[]>> | tuple<struct<`subject`:integer[]>, struct<`time`:integer[]>> | tuple<struct<`time`:double[]>, struct<`variable`:integer>> | tuple<struct<`treatment`:integer[]>, struct<`rep`:double[]>> | tuple<struct<`treatment`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`result_variable`:integer[]>> | tuple<struct<`time`:double[]>, struct<`diet`:integer[]>> | tuple<struct<`time`:integer[]>, struct<`variable`:integer[]>>> => ^double[];
type `cast_parse_formula` <character, character[]> => struct<`m`:tuple<character[]>, `l`:null> | struct<`m`:tuple<character[], character, null>, `l`:character[]> | struct<`m`:tuple<character>, `l`:character[]>;
type `cbind2` <^double[]> => ^double[];
type `check_formula` <character, character[]> => null;
type `combine_factor` <integer[], double[], character> => integer[];
type `compute.margins` <struct<`time`:double[], `chick`:integer[], `diet`:integer[], `variable`:integer[], `value`:double[]>, tuple<character[]> | tuple<double[]>, tuple<character[], character> | tuple<character[], null>, any => any, null, logical> => struct<`diet`:integer[], `time`:integer[], `chick`:integer[], `result`:list<double>>;
type `condense` <struct<`time`:double[], `chick`:integer[], `diet`:integer[], `variable`:integer[], `value`:double[]>, character[], any => any, null> => struct<`chick`:integer[], `time`:double[], `result`:list<double>>;
type `dim_names` <struct<`chick`:integer[], `time`:double[], `diet`:integer[], `result`:^double[]> | symbol, null | character[]> => struct<`chick`:integer[]>;
type `expand` <struct<`month`:integer[], `result`:tuple<double[], double[], double[], double[], double[]>>> => struct<`month`:integer[], `result_variable`:integer[], `result`:double[]>;
type `fun.aggregate` <double[], null> => double[];
type `funstofun` <any => any | double[], null> => any => any | double[];
type `margin.intersect` <symbol, null | character, null | character | symbol, null | symbol> => null | tuple<character[]>;
type `margin.vars` <tuple<character[], character> | tuple<character[], null>, character[]> => null | tuple<character[]> | tuple<double[]>;
type `melt_check` <struct<`month`:integer[], `variable`:integer[], `X1`:double[], `X2`:double[]>, symbol | character[] | integer[], character[] | symbol> => struct<`id`:character[], `measure`:character[]>;
type `melt.array` <integer[], null | character[], null | language> => struct<`X`:integer[], `Y`:integer[], `Z`:integer[], `value`:integer[]>;
type `melt.data.frame` <struct<`ozone`:^integer[], `solar.r`:^integer[], `wind`:double[], `temp`:integer[], `month`:integer[], `day`:integer[]>, character[] | null | integer[], null | character[] | symbol, character, logical, logical, null> => struct<`month`:integer[], `day`:integer[], `variable`:integer[], `value`:^double[]>;
type `melt.default` <double | integer[], double | language> => struct<`value`:double>;
type `melt.list` <tuple<tuple<integer[]>, double, tuple<tuple<integer, integer>, tuple<integer, integer>>> | struct<`a`:integer, `b`:integer, `c`:integer, `d`:integer> | tuple<integer[]> | tuple<tuple<integer, integer>, tuple<integer, integer>> | tuple<^integer[], ^integer[]>, null, double> => struct<`value`:double[], `L2`:^integer[], `L1`:integer[], `L3`:^integer[]>;
type `nested.by` <struct<`time`:integer[], `treatment`:integer[], `subject`:integer[], `rep`:double[], `variable`:integer[], `value`:double[]>, struct<`variable`:integer[], `time`:integer[]>, any => any, null> => struct<`1`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `2`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `3`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `4`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `5`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `6`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `7`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `8`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `9`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>, `10`:struct<`potato`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `buttery`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `grassy`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `rancid`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>, `painty`:struct<`treatment`:integer[], `1`:double[], `2`:double[]>>>;
type `nulldefault` <null | character[], language | character | integer[]> => character[] | integer[];
type `rcolnames` <^double[]> => struct<`diet`:integer[]>;
type `rdimnames` <^double[]> => tuple<struct<`chick`:integer[]>, struct<`time`:double[]>> | tuple<struct<`day`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`diet`:integer[]>, struct<`variable`:integer>> | tuple<struct<`month`:integer[]>, struct<`result_variable`:integer[]>> | tuple<struct<`month`:integer[]>, struct<`value`:integer>> | tuple<struct<`month`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`sex`:integer[]>, struct<`smoker`:integer[]>> | tuple<struct<`subject`:integer[]>, struct<`time`:integer[]>> | tuple<struct<`time`:double[]>, struct<`diet`:integer[]>> | tuple<struct<`time`:double[]>, struct<`variable`:integer>> | tuple<struct<`time`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`treatment`:integer[]>, struct<`rep`:double[]>> | tuple<struct<`treatment`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`result_variable`:integer[]>>;
type `rdimnames<-` <^double[], tuple<struct<`chick`:integer[]>, struct<`time`:double[]>> | tuple<struct<`day`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`diet`:integer[]>, struct<`variable`:integer>> | tuple<struct<`month`:integer[]>, struct<`result_variable`:integer[]>> | tuple<struct<`month`:integer[]>, struct<`value`:integer>> | tuple<struct<`month`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`sex`:integer[]>, struct<`smoker`:integer[]>> | tuple<struct<`subject`:integer[]>, struct<`time`:integer[]>> | tuple<struct<`time`:double[]>, struct<`variable`:integer>> | tuple<struct<`treatment`:integer[]>, struct<`rep`:double[]>> | tuple<struct<`treatment`:integer[]>, struct<`variable`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`month`:integer[]>> | tuple<struct<`variable`:integer[]>, struct<`result_variable`:integer[]>> | tuple<struct<`time`:double[]>, struct<`diet`:integer[]>> | tuple<struct<`time`:integer[]>, struct<`variable`:integer[]>>> => ^double[];
type `recast` <struct<`time`:integer[], `treatment`:integer[], `subject`:integer[], `rep`:double[], `potato`:^double[], `buttery`:^double[], `grassy`:^double[], `rancid`:^double[], `painty`:^double[]>, language, null, integer[], null> => struct<`time`:integer[], `potato`:integer[], `buttery`:integer[], `grassy`:integer[], `rancid`:integer[], `painty`:integer[]>;
type `remove.blank` <character[]> => null | character[];
type `rename` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]> | struct<`a`:double, `b`:double, `c`:double>, character[]> => struct<`mpg`:double[], `cylinders`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `weight`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]> | struct<`c`:double, `a`:double, `b`:double>;
type `replace.remainder` <null | character[]> => null | character[];
type `reshape1` <struct<`time`:double[], `chick`:integer[], `diet`:integer[], `variable`:integer[], `value`:double[]>, tuple<character[], character> | tuple<character[], null> | tuple<character, character[]>, null | any => any, logical | null | character[], logical, null | double, logical, null> => struct<`chick`:integer[], `0`:double[], `2`:double[], `4`:double[], `6`:double[], `8`:double[]>;
type `round_any` <double, double, any => any> => double;
type `rrownames` <^double[]> => struct<`chick`:integer[]>;
type `sort_df` <struct<`a`:double[], `b`:double[], `c`:double[], `result`:double[]>, character[]> => struct<`a`:double[], `b`:double[], `c`:double[], `result`:double[]>;
type `vars` <character> => character[];
