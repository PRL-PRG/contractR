type `.block.indices` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]>> => tuple<integer[]> | struct<`1`:integer[], `2`:integer[]>;
type `.decode.value` <character | language, double[]> => double[];
type `.orth.moments` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[], `Blk`:integer[]>> => ^double[];
type `.parse.coding` <language> => struct<`names`:character[], `const`:double[]>;
type `.randomize` <struct<`A`:double[], `B`:double[]>, logical> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>;
type `.rot.moments` <struct<`run.order`:integer[], `std.order`:integer[], `x1`:double[], `x2`:double[], `x3`:double[]>> => double[];
type `.rsdesattr` <struct<`Blocks`:integer[], `x1`:double[], `x2`:double[], `x3`:double[]>, character[], character, language> => struct<`primary`:character[], `call`:language>;
type `[.coded.data` <struct<`A`:double[], `B`:double[], `std.order`:integer[], `run.order`:integer[]>, null | double[]> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>;
type `as.coded.data` <struct<`A`:double[], `B`:double[]>, null | language, struct<`A`:language, `B`:language> | tuple<language, language> | struct<`x1`:language>, character> => struct<`A`:double[], `B`:double[]>;
type `bbd` <language | double, double, character | logical, logical, null | tuple<language, language, language>> => struct<`run.order`:integer[], `std.order`:integer[], `Plant`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[], `y1`:^logical[], `y2`:^logical[]>;
type `canonical` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Response`:double[], `FO(A# B)`:^double[], `TWI(A# B)`:^double[], `PQ(A# B)`:^double[]>, `data`:struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `Response`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`A`:language, `B`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[], `TWI(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, double> => struct<`xs`:double[], `eigen`:struct<`values`:double[], `vectors`:^double[]>>;
type `canonical.path` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, double, double[], logical, double> => struct<`dist`:double[], `x1`:double[], `x2`:double[], `|`:integer[], `Ethanol`:double[], `A.F.ratio`:double[], `|`:integer[], `yhat`:double[]>;
type `ccd` <language | double, null | language, language | character, double[], character | double, double, double, logical, logical, null | tuple<language, language, language>, logical> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[], `Blk`:integer[]>;
type `ccd.pick` <double, double[], integer[], double[], integer[], double, double | integer[], double, double, character[], null | character> => struct<`n.c`:double[], `n0.c`:integer[], `blks.c`:double[], `n.s`:double[], `n0.s`:integer[], `bbr.c`:double[], `wbr.s`:double[], `bbr.s`:double[], `N`:double[], `alpha.rot`:double[], `alpha.orth`:double[]>;
type `code2val` <struct<`x1`:double[], `x2`:double[], `x3`:double[], `x4`:double[], `|`:integer[]> | double[], struct<`x1`:language, `x2`:language>> => struct<`A`:double[], `R`:double[], `W`:double[], `L`:double[], `|`:integer[]> | double[];
type `coded.data` <struct<`Blocks`:integer[], `T1`:integer[], `T2`:integer[], `T3`:integer[]>, null | language, tuple<> | tuple<language, language> | struct<`x1`:language, `x2`:language>, character> => struct<`Blocks`:integer[], `x1`:double[], `x2`:double[], `x3`:double[]>;
type `codings.coded.data` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>> => struct<`A`:language, `B`:language> | struct<`x1`:language>;
type `codings.rsm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>> => struct<`x1`:language, `x2`:language>;
type `codings<-` <struct<`run.order`:integer[], `std.order`:integer[], `Blocks`:integer[], `x1`:double[], `x2`:double[], `x3`:double[]>, tuple<language, language, language> | struct<`x1`:language>> => struct<`run.order`:integer[], `std.order`:integer[], `Blocks`:integer[], `x1`:double[], `x2`:double[], `x3`:double[]>;
type `contour.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `poly(hp# disp# degree = 3)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>>, language, double[] | null | struct<`block`:character>, symbol | null | struct<`x1`:double[], `x2`:double[]>, symbol | null | double[], character[] | symbol | null, null, logical, double, logical, logical, language | character[], null | character> => struct<`disp ~ hp`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[]>> | struct<`x1 ~ x2`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[]>>;
type `cube` <language | double, symbol | language | null, double, double, symbol | null | tuple<language, language>, logical, language | null, double, double> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]>;
type `decode.data` <struct<`x1`:double[], `x2`:double[], `x3`:double[], `x4`:double[], `|`:integer[]>> => struct<`A`:double[], `R`:double[], `W`:double[], `L`:double[], `|`:integer[]>;
type `deldist` <double, double> => double;
type `djoin` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]>, struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]> | language, null, character | symbol, null> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[], `Blk`:integer[]>;
type `dupe` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>, logical, null | tuple<language, language, language>> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>;
type `f` <double, double> => double;
type `filter` <character[]> => logical[];
type `FO` <double[]> => ^double[];
type `foldover` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]>, null, double | null, logical> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[]>;
type `fun` <symbol, symbol> => null;
type `FUN` <null | character | double[] | struct<`level`:double, `x`:double[], `y`:double[]>, double[]> => null | language | character | ^double[];
type `incr.out` <double, double, double> => double;
type `is.coded.data` <struct<`A`:double[], `B`:double[]>> => logical;
type `loftest` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>>> => struct<`Df`:double[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>;
type `model.data` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`log(Volume)`:double[], `poly(log(Girth)# 3)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `poly(hp# disp# degree = 3)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>>, logical> => struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[]>;
type `names<-.coded.data` <struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, character[]> => struct<`Time`:double[], `Temp`:double[], `Yield`:double[]>;
type `PE` <double[]> => integer[];
type `persp.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, language, double[], null, null, character | null, character[] | null, character[], null | character, null, double, logical, double, double, double, null, logical, character, null> => struct<`x1 ~ x2`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>, `x1 ~ x3`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>, `x1 ~ x4`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>, `x2 ~ x3`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>, `x2 ~ x4`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>, `x3 ~ x4`:struct<`x`:double[], `y`:double[], `z`:^double[], `labs`:character[], `zlim`:double[], `transf`:^double[]>>;
type `PQ` <double[]> => ^double[];
type `print.coded.data` <struct<`x1`:double[], `x2`:double[], `Block`:integer[], `Yield`:double[]>, null, logical> => struct<`x1`:double[], `x2`:double[], `Block`:integer[], `Yield`:double[]>;
type `recode.data` <struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, null, struct<`x1`:language, `x2`:language>> => struct<`x1`:double[], `x2`:double[], `Yield`:double[]>;
type `register_s3_method` <character, character, character> => null;
type `rsm` <language, struct<`x1`:double[], `x2`:double[], `Yield`:double[], `Block`:integer[]>, null | language> => struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Response`:double[], `FO(A# B)`:^double[], `TWI(A# B)`:^double[], `PQ(A# B)`:^double[]>, `data`:struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `Response`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`A`:language, `B`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`CO.conc`:double[], `FO(x1# x2)`:^integer[], `TWI(x1# x2)`:^double[], `PQ(x1# x2)`:^double[]>, `data`:struct<`x1`:integer[], `x2`:integer[], `CO.conc`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>>;
type `SO` <double[]> => ^double[];
type `soln` <double> => double[];
type `star` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `Response`:^logical[]>, double, character | double, double, logical> => struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[]>;
type `stdorder` <struct<`run.order`:integer[], `std.order`:integer[], `x1`:double[], `x2`:double[], `Yield`:double[]>> => struct<`run.order`:integer[], `std.order`:integer[], `x1`:double[], `x2`:double[], `Yield`:double[]>;
type `steepest` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, double[], logical> => struct<`dist`:double[], `x1`:double[], `x2`:double[], `|`:integer[], `Time`:double[], `Temp`:double[], `|`:integer[], `yhat`:double[]>;
type `summary.rsm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Yield`:double[], `FO(x1# x2)`:^double[]>, `data`:struct<`x1`:double[], `x2`:double[], `Yield`:double[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, character[], null> => struct<`call`:language, `terms`:language, `residuals`:double[], `coefficients`:^double[], `aliased`:logical[], `sigma`:double, `df`:integer[], `r.squared`:double, `adj.r.squared`:double, `fstatistic`:double[], `cov.unscaled`:^double[], `sa`:double[], `lof`:struct<`Df`:double[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>, `coding`:struct<`x1`:language, `x2`:language>> | struct<`call`:language, `terms`:language, `residuals`:double[], `coefficients`:^double[], `aliased`:logical[], `sigma`:double, `df`:integer[], `r.squared`:double, `adj.r.squared`:double, `fstatistic`:double[], `cov.unscaled`:^double[], `canonical`:struct<`xs`:double[], `eigen`:struct<`values`:double[], `vectors`:^double[]>>, `lof`:struct<`Df`:double[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>, `coding`:struct<`x1`:language, `x2`:language>>;
type `truenames.coded.data` <struct<`x1`:integer[], `x2`:integer[], `y`:double[]>> => character[];
type `TWI` <double[], null> => ^double[];
type `typical` <double[]> => double;
type `varfcn` <struct<`run.order`:integer[], `std.order`:integer[], `A`:double[], `B`:double[], `C`:double[], `D`:double[], `E`:double[], `Blk`:integer[]>, language, double[], null | struct<>, logical, logical, null, null> => struct<`A`:double[], `B`:double[], `VF`:double[]>;
type `xs` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`block`:character>, `xlevels`:struct<`block`:character[]>, `call`:language, `terms`:language, `model`:struct<`ave`:integer[], `block`:integer[], `FO(x1# x2# x3# x4)`:^integer[], `TWI(x1# x2# x3# x4)`:^double[], `PQ(x1# x2# x3# x4)`:^double[]>, `data`:struct<`block`:integer[], `x1`:integer[], `x2`:integer[], `x3`:integer[], `x4`:integer[], `ave`:integer[], `logSD`:integer[]>, `b`:double[], `order`:double, `B`:^double[], `newlabs`:character[], `coding`:struct<`x1`:language, `x2`:language, `x3`:language, `x4`:language>>, null> => double[];
