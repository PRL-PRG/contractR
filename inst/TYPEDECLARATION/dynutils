type `.process_input_matrices` <double> => struct<`x`:null, `y`:null>;
type `add_class` <struct<`important_number`:double>, character> => struct<`important_number`:double>;
type `calculate_arithmetic_mean` <double[], null> => double[];
type `calculate_distance` <character, double> => ^double[];
type `calculate_geometric_mean` <double[] | tuple<double[], double[]>, ? double[]> => double[];
type `calculate_harmonic_mean` <double, null> => double;
type `calculate_mean` <double, character, null> => double;
type `calculate_similarity` <double, character> => ^double[];
type `filter` <character[]> => logical[];
type `fun` <double, null> => double;
type `is_sparse` < > => logical;
type `process_combination_input` <double[] | tuple<double[], double[]>> => ^double[];
type `process_weights` <double[], integer> => ^double[];
type `spearman_rank_sparse` <null, null> => null;
type `spearman_rank_sparse_rcpp` <double[], integer[], integer> => double[];
