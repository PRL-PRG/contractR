type `cdf` <double, ...> => double[];
type `checkmvArgs` <double[], double[], double[], class<`matrix`> | null | double, null | class<`matrix`> | double> => list<double[] | class<`matrix`> | null | double[] | null | class<`matrix`> | double | null>;
type `chkcorr` <class<`matrix`>> => logical;
type `dmvnorm` <class<`matrix`> | double[], double[], class<`matrix`>, logical> => double;
type `dmvt` <double[], double[], class<`matrix`>, double, logical, character> => double;
type `dots2GenzBretz` <...> => list<null>;
type `f` <double> => double;
type `filter` <character[]> => logical[];
type `fitlr` <double[], double[], double[], character> => class<`glm`, `lm`>;
type `FUN` <double> => double | <double> => double;
type `func` <double> => double | <double> => double | <double, any, any> => double;
type `GenzBretz` <double, double, double> => class<`GenzBretz`>;
type `get_est` <class<`glm`, `lm`>, double> => double;
type `getInt` <double, double[], class<`matrix`>, character, character[], double> => double[];
type `get_new_points` <class<`glm`, `lm`>, double, any, double> => double[];
type `get_quant_loclin` <class<`function`>, double, double[], double, double, character, double, logical, ...> => list<double>;
type `isInf` <double[]> => logical[];
type `isNInf` <double[]> => logical[];
type `mvt` <double[], double[], double, class<`matrix`>, double[], any, ...> => list<double | character>;
type `pmvnorm` <double[], double[], double[], class<`matrix`> | null, null | class<`matrix`> | double, any, ...> => double;
type `pmvt` <double[], double[], double[], double, class<`matrix`> | null, null | class<`matrix`> | double, any, character[], ...> => double;
type `predict_with_se` <class<`glm`, `lm`>, class<`data.frame`>> => list<double>;
type `probval` <class<`GenzBretz`>, ...> => list<double[]>;
type `probval.GenzBretz` <class<`GenzBretz`>, integer, double, double[], double[], double[], any, double[], double[]> => list<double[]>;
type `qmvnorm` <double, null, character, double, null, class<`matrix`>, class<`GenzBretz`>, double, double, logical, ...> => list<double>;
type `qmvt` <double, null, character, double, double, double | null, null | double | class<`matrix`>, any, character[], double, double, logical> => list<double>;
type `rmvnorm` <double, double[], class<`matrix`>, character[], logical> => class<`matrix`>;
type `rmvt` <any, class<`matrix`>, double, double[], any, ...> => any;
type `sanitize_x` <double[], double> => double[];
type `sanitize_y` <double[]> => double[];
type `stop_crit` <double, class<`glm`, `lm`>, double, double, double> => list<logical>;
type `wgts` <double[], double> => double[];
