type `.addREADME` <character, null> => null | logical;
type `.baseLoad` <integer, language> => pairlist;
type `addMemoization.default` <any => any, language, null> => any => any;
type `clearCache.default` <symbol, null, logical, logical> => character[];
type `filter` <character[]> => logical[];
type `fun` <symbol, character> => null | character;
type `FUN` <character> => logical;
type `generateCache.default` <tuple<double, double> | struct<`expr`:language> | struct<`some`:double, `vari`:double, `ables`:double> | struct<`what`:any => any, ``:double>, character, null | null> => character;
type `getCachePath.default` <null, null, character, null> => character;
type `getCacheRootPath.default` <null | character, null> => null | character;
type `getChecksum.default` <tuple<double, double> | struct<`expr`:language> | struct<`some`:double, `vari`:double, `ables`:double> | struct<`what`:any => any, ``:double>, null> => character;
type `memoizedCall.default` <any => any, double, environment, logical, null, null> => double;
type `readCacheHeader.default` <character | integer, null> => struct<`identifier`:character, `version`:character, `comment`:character, `timestamp`:double>;
type `saveCache.default` <double[], null | tuple<double, double> | struct<`some`:double, `vari`:double, `ables`:double>, null, character, null | character, null | character, null, null, null> => character;
type `setCacheRootPath.default` <character, null> => struct<`R.cache.rootPath`:character> | struct<`R.cache.rootPath`:null>;
type `setupCacheRootPath.default` <character, null> => character;
type `sleep` <double, environment> => double;
