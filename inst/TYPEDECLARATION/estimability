type `epredict` <class<`lm`>, ...> => ^double[];
type `epredict.lm` <class<`lm`>, class<`data.frame`>, ..., character[], double, class<`matrix`> | null> => ^double[];
type `estble.subspace` <class<`matrix`>, class<`matrix`>, double> => class<`matrix`>;
type `eupdate` <class<`lm`>, ...> => class<`lm`>;
type `eupdate.lm` <class<`lm`>, ...> => class<`lm`>;
type `filter` <character[]> => logical[];
type `FUN` <double[] | class<`matrix`>, class<`matrix`>, double> => logical[];
type `is.estble` <double[] | class<`matrix`>, class<`matrix`>, double> => logical[];
type `nonest.basis` <class<`lm`> | class<`matrix`> | class<`qr`>, ...> => class<`matrix`>;
type `nonest.basis.lm` <class<`lm`>, ...> => class<`matrix`>;
type `nonest.basis.matrix` <class<`matrix`>, ...> => class<`matrix`>;
type `nonest.basis.qr` <class<`qr`>, ...> => class<`matrix`>;
type `.patch.predict` <class<`lm`>, class<`data.frame`>, character, double, class<`matrix`> | null, ...> => ^double[];
