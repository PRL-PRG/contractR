type `.alg3` <class<`matrix`>, double[], class<`matrix`>, double, double, double> => list<double[] | class<`matrix`>>;
type `asMethod` <class<`ics2`>, character, logical> => class<`ics`>;
type `cov4` <class<`matrix`>, character, class<`function`>> => class<`matrix`>;
type `.cov4moments.mean` <class<`matrix`>> => class<`matrix`>;
type `.cov4moments.origin` <class<`matrix`>> => class<`matrix`>;
type `cov4.wt` <class<`matrix`>, double[], logical, character, class<`function`>> => class<`matrix`>;
type `covOrigin` <class<`matrix`>, null, class<`function`>> => class<`matrix`>;
type `filter` <character[]> => logical[];
type `fitted` <class<`ics`>, ...> => class<`data.frame`>;
type `ics` <class<`data.frame`> | class<`matrix`>, class<`function`>, class<`function`>, list<any>, list<any>, character, logical, class<`function`>> => class<`ics`>;
type `ics2` <class<`matrix`>, class<`function`>, class<`function`> | list<double[] | class<`matrix`>>, list<any>, list<any>, class<`function`>> => class<`ics2`>;
type `.local` <class<`ics`> | class<`ics2`>, null, ...> => null | <class<`ics`>, double[] | null> => class<`data.frame`> | <class<`ics2`>, double> => class<`ics2`> | <class<`ics`>, double> => class<`ics`>;
type `mat.sqrt` <class<`matrix`>> => class<`matrix`>;
type `mean3` <class<`matrix`>, class<`function`>> => double[];
type `.norm.mu.V` <double[], class<`matrix`>, class<`matrix`>> => double;
type `plot` <class<`ics`>, any, ...> => null | <class<`ics2`>, any, ...> => null;
type `S1` <class<`matrix`>> => list<double[] | class<`matrix`>> | <class<`matrix`>, double, character, null, null, null, double, double, class<`function`>> => list<double[] | class<`matrix`>>;
type `S2` <class<`matrix`>, character, class<`function`>> => class<`matrix`> | <class<`matrix`>, double, character, null, null, null, double, double, class<`function`>> => list<double[] | class<`matrix`>> | <class<`data.frame`>, class<`function`>> => class<`matrix`> | <class<`matrix`>> => list<double[] | class<`matrix`>>;
type `screeplot.ics` <class<`ics`>, null, character, character, character, character, integer[], logical, ...> => null;
type `summary` <class<`ics`>, ...> => class<`ics`> | <class<`ics2`>, ...> => class<`ics2`>;
type `tM` <class<`matrix`>, double, character, null, null, null, double, double, class<`function`>> => list<double[] | class<`matrix`>>;
type `validityMethod` <class<`ics`>> => logical | <class<`ics2`>> => logical;
