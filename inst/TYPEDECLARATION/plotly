type `%||%` <character[] | null | class<`waiver`> | class<`AsIs`> | class<`colorway`> | class<`Date`> | class<`element`, `element_text`> | class<`formula`> | class<`logical`, `plotly_default`> | class<`matrix`> | double[] | list<any>, any> => (character[] | class<`AsIs`> | class<`character`, `plotly_default`> | class<`colorway`> | class<`Date`> | class<`element`, `element_blank`> | class<`element`, `element_line`> | class<`element`, `element_text`> | class<`formula`> | class<`formula`, `quosure`> | class<`list`, `plotly_default`> | class<`logical`, `plotly_default`> | class<`matrix`> | class<`numeric`, `plotly_default`> | class<`ts`> | class<`unit`> | double[] | list<any> | null);
type `%()%` <null, character[] | double[]> => (character[] | double[]);
type `add_data` <class<`htmlwidget`, `plotly`>, class<`data.frame`> | class<`data.frame`, `plotly_data`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `spec_tbl_df`, `tbl`, `tbl_df`> | null> => class<`htmlwidget`, `plotly`>;
type `add_heatmap` <class<`htmlwidget`, `plotly`>, null, null, null, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_lines` <class<`htmlwidget`, `plotly`>, null, null, null, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_markers` <class<`htmlwidget`, `plotly`>, class<`formula`> | double | null, class<`formula`> | double | null, null, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_paths` <class<`htmlwidget`, `plotly`>, null, null, null, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_ribbons` <class<`htmlwidget`, `plotly`>, null, class<`formula`>, class<`formula`>, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_text` <class<`htmlwidget`, `plotly`>, null, null, null, character, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_trace` <class<`htmlwidget`, `plotly`>, ..., null, logical> => class<`htmlwidget`, `plotly`>;
type `add_trace_classed` <class<`htmlwidget`, `plotly`>, character[], ...> => class<`htmlwidget`, `plotly`>;
type `aes2plotly` <class<`GeomBar`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPoint`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`>, any, character> => (character | double);
type `alpha_inherit` <class<`colorway`, `plotly_default`>, class<`character`, `colorway`, `plotly_default`>> => class<`character`, `colorway`, `plotly_default`>;
type `animation_opts` <class<`htmlwidget`, `plotly`>, double, double, character, logical, character> => class<`htmlwidget`, `plotly`>;
type `animation_opts_format` <double, double, character, logical, character> => list<character | list<double | character | double>>;
type `arrange_safe` <class<`data.frame`, `tbl`, `tbl_df`>, character[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `as_widget` <list<character | list<any>> | list<character | logical | list<any>> | list<list<character | list<double>>> | list<character | list<class<`function`> | null | list<double> | list<double[]>>> | list<character | list<class<`function`> | null | list<double> | list<class<`formula`> | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<class<`formula`> | class<`AsIs`> | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<character[] | class<`matrix`> | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<class<`Date`> | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<class<`formula`> | character | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<class<`ts`> | double[]>>> | list<character | list<class<`function`> | null | list<double> | list<double[] | list<character | list<double | character>>>>> | list<character | list<class<`function`> | null | list<double> | list<double[] | list<character | list<character | double>>>>>, ...> => class<`htmlwidget`, `plotly`>;
type `attrs_name_check` <character[], character[], any> => character[];
type `attrs_selected` <double, ...> => (list<double> | list<character | double | list<character>>);
type `bbox` <character, double, double> => list<double>;
type `bboxes2range` <list<null>, ...> => null;
type `br` < > => character;
type `cartesian2geo` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `coerce_attr_defaults` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>, any> => (class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>);
type `colorbar` <class<`htmlwidget`, `plotly`>, ..., double[] | null, double> => class<`htmlwidget`, `plotly`>;
type `colorbar_built` <class<`htmlwidget`, `plotly`>, ..., double[] | null, double> => class<`htmlwidget`, `plotly`>;
type `colorscale_json` <class<`matrix`, `plotly_default`> | null> => (class<`matrix`, `plotly_default`> | null);
type `colorway` <class<`htmlwidget`, `plotly`> | null> => list<class<`colorway`>>;
type `colorway_retrain` <list<list<any>>, list<class<`colorway`>>> => list<list<any>>;
type `colourPickerLib` < > => class<`html_dependency`>;
type `compact` <list<any>> => list<any>;
type `config` <class<`htmlwidget`, `plotly`>, ..., logical, logical, character | null, null | character> => class<`htmlwidget`, `plotly`>;
type `crosstalk_key` < > => character;
type `%|D|%` <null | class<`logical`, `plotly_default`> | logical, any> => (class<`character`, `plotly_default`> | class<`logical`, `plotly_default`> | class<`numeric`, `plotly_default`> | logical | null);
type `default` <character | class<`colorway`> | null | class<`matrix`> | double[]> => (class<`character`, `plotly_default`> | class<`colorway`, `plotly_default`> | class<`list`, `plotly_default`> | class<`logical`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`>);
type `deparse2` <class<`formula`> | character[] | class<`AsIs`> | class<`matrix`> | integer[] | null> => (character | null);
type `dependency_dir` <...> => character;
type `dots2plots` <...> => list<class<`htmlwidget`, `plotly`>>;
type `easingOpts` < > => character[];
type `ensure_one` <list<list<character[] | list<any>>>, character> => (character | list<character | double | list<double>> | list<logical>);
type `faced` <character, character> => character;
type `filter_.plotly` <class<`htmlwidget`, `plotly`>, ..., class<`lazy_dots`>> => class<`htmlwidget`, `plotly`>;
type `fit_bounds` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `fortify.SharedData` <class<`R6`, `SharedData`>, any, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `geo2cartesian` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `geom2trace.GeomBar` <class<`GeomBar`, `data.frame`>, list<any>, class<`gg`, `ggplot`>> => list<double[] | character[] | list<logical | character | list<double | character>>>;
type `geom2trace.GeomPath` <class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`>, list<any>, class<`gg`, `ggplot`>> => (list<double[] | character[] | list<double | character>> | list<^double[] | ^character[] | list<double | character>>);
type `geom2trace.GeomPoint` <class<`GeomPoint`, `data.frame`>, list<logical | character | list<character>>, class<`gg`, `ggplot`>> => list<double[] | character[] | list<character | double | list<double | character>>>;
type `geom2trace.GeomPolygon` <class<`GeomPolygon`, `GeomSmooth`, `data.frame`>, list<any>, class<`gg`, `ggplot`>> => list<double[] | character[] | list<double | character>>;
type `get_domain` <character> => character;
type `get_domains` <integer, double, double[], null, null> => class<`data.frame`>;
type `getLevels` <^logical[] | null> => logical[];
type `getUnitType` <class<`unit`>> => character;
type `gg2list` <class<`gg`, `ggplot`>, null, null, character, logical, double, logical, character> => list<character | list<any>>;
type `ggfun` <character> => (class<`function`> | class<`Geom`, `GeomBar`, `GeomRect`, `gg`, `ggproto`> | class<`Geom`, `GeomPath`, `gg`, `ggproto`> | class<`Geom`, `GeomPoint`, `gg`, `ggproto`> | class<`Geom`, `GeomPolygon`, `gg`, `ggproto`>);
type `ggplotly` <class<`gg`, `ggplot`>, null, null, character, logical, double, logical, character> => class<`htmlwidget`, `plotly`>;
type `ggplotly.ggplot` <class<`gg`, `ggplot`>, null, null, character, logical, double, logical, character> => class<`htmlwidget`, `plotly`>;
type `ggtype` <class<`Layer`, `LayerInstance`, `gg`, `ggproto`>, character> => character;
type `glTypes` < > => character[];
type `group2NA` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`>, any, character | null, any, any> => (class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`>);
type `groups.plotly` <class<`htmlwidget`, `plotly`>> => list<class<`name`>>;
type `has_attr` <character[], character> => logical[];
type `has_color_array` <character[], character> => logical[];
type `has_colorbar` <class<`htmlwidget`, `plotly`>> => logical;
type `has_facet` <class<`gg`, `ggplot`>> => logical;
type `has_fill` <class<`plotly_colorbar`> | class<`plotly_colorbar`, `zcolor`> | list<any>> => logical;
type `has_group` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<any>> => logical;
type `has_legend` <class<`htmlwidget`, `plotly`>> => logical;
type `has_line` <character[], any> => logical[];
type `has_text` <character[], any> => logical[];
type `hide_colorbar` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `hide_legend` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `highlight` <class<`htmlwidget`, `plotly`>, character, any, logical, logical, character[] | null, logical, null> => class<`htmlwidget`, `plotly`>;
type `highlight_defaults` < > => list<character | double | list<double>>;
type `highlight_key` <...> => class<`R6`, `SharedData`>;
type `hover_on` <class<`GeomBar`, `data.frame`> | class<`GeomLine`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPoint`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`> | class<`GeomSmooth`, `data.frame`>> => character;
type `i` <character[] | class<`Date`> | class<`matrix`> | double[] | null> => (character[] | class<`Date`> | class<`matrix`> | double[] | null);
type `is3d` <character> => logical;
type `is_blank` <character[] | class<`element`, `element_blank`> | class<`element`, `element_line`> | class<`element`, `element_text`> | class<`waiver`> | list<any> | null> => logical;
type `is.colorbar` <class<`plotly_colorbar`> | class<`plotly_colorbar`, `zcolor`> | list<any>> => logical;
type `is.default` <class<`character`, `plotly_default`> | class<`logical`, `plotly_default`> | null | character | class<`character`, `colorway`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`> | double[]> => logical;
type `is.discrete` <character[] | class<`AsIs`> | class<`Date`> | class<`matrix`> | double[] | null> => logical;
type `is_geo` <class<`htmlwidget`, `plotly`>> => logical;
type `is_mapbox` <class<`htmlwidget`, `plotly`>> => logical;
type `is.plotly` <character | class<`data.frame`, `rowwise_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`htmlwidget`, `plotly`> | double | list<class<`htmlwidget`, `plotly`>>> => logical;
type `is_rstudio` < > => logical;
type `is_sf` <class<`data.frame`, `plotly_data`> | class<`data.frame`, `plotly_data`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `plotly_data`, `tbl`, `tbl_df`>> => logical;
type `is_subplot` <class<`htmlwidget`, `plotly`>> => logical;
type `is_tidy` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>> => logical;
type `is_type` <class<`htmlwidget`, `plotly`>, character> => logical;
type `layers2layout` <list<character | list<double | character | double>>, list<class<`Layer`, `LayerInstance`, `gg`, `ggproto`>>, any> => list<character | list<double | character | double>>;
type `layers2traces` <list<class<`data.frame`>>, any, class<`Layout`, `gg`, `ggproto`>, class<`gg`, `ggplot`>> => (list<list<double[] | character[] | list<logical | character | list<double | character>>>> | list<list<double[] | character[] | list<character | double | list<double | character>> | double[] | character[] | list<double | character>>> | list<list<double[] | character[] | list<character | double | list<double | character>>>> | list<list<^double[] | ^character[] | list<double | character>>>);
type `layout` <class<`htmlwidget`, `plotly`>, ..., null> => class<`htmlwidget`, `plotly`>;
type `layout.plotly` <class<`htmlwidget`, `plotly`>, ..., null> => class<`htmlwidget`, `plotly`>;
type `list2df` <list<double[]>, any> => class<`data.frame`>;
type `locale_dependency` <character> => class<`html_dependency`>;
type `lty2dash` <double | null> => character[];
type `make_panel_border` <double[], double[], list<any>> => list<list<any>>;
type `map_color` <list<class<`plotly_colorbar`, `zcolor`>> | list<list<any>> | list<class<`plotly_colorbar`> | list<any>>, logical, any, any, character> => (list<class<`plotly_colorbar`, `zcolor`>> | list<list<any>> | list<class<`plotly_colorbar`> | list<any>>);
type `map_linetype` <list<list<any>>> => list<list<any>>;
type `map_size` <list<list<any>>, logical> => list<list<any>>;
type `map_symbol` <list<list<any>>> => list<list<any>>;
type `mathjax_cdn` < > => class<`html_dependency`>;
type `mm2pixels` <double | class<`unit`>> => double[];
type `modify_list` <null | list<any>, list<any> | null, ...> => list<any>;
type `mutate_.plotly` <class<`htmlwidget`, `plotly`>, ..., class<`lazy_dots`>> => class<`htmlwidget`, `plotly`>;
type `names2` <list<any> | null> => character[];
type `new_id` < > => character;
type `npscales` < > => character[];
type `plot_geo` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`>, ..., logical> => class<`htmlwidget`, `plotly`>;
type `plot_ly` <class<`data.frame`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>, ..., null, any, any, null, null, any> => class<`htmlwidget`, `plotly`>;
type `plotly_build` <class<`gg`, `ggplot`> | class<`htmlwidget`, `plotly`>, logical> => class<`htmlwidget`, `plotly`>;
type `plotly_build.gg` <class<`gg`, `ggplot`>, logical> => class<`htmlwidget`, `plotly`>;
type `plotly_build.plotly` <class<`htmlwidget`, `plotly`>, logical> => class<`htmlwidget`, `plotly`>;
type `plotly_data` <class<`htmlwidget`, `plotly`>, character> => (class<`data.frame`, `grouped_df`, `plotly_data`, `tbl`, `tbl_df`> | class<`data.frame`, `plotly_data`> | class<`data.frame`, `plotly_data`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `plotly_data`, `tbl`, `tbl_df`>);
type `plotlyHtmlwidgetsCSS` < > => class<`html_dependency`>;
type `plotlyjsBundle` <class<`htmlwidget`, `plotly`>> => class<`html_dependency`>;
type `plotlyjsBundleIDX` <class<`htmlwidget`, `plotly`>> => integer;
type `plotly_json` <class<`htmlwidget`, `plotly`>, logical, logical, ...> => class<`json`>;
type `plotlyMainBundle` < > => class<`html_dependency`>;
type `populate_categorical_axes` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `prefix_class` <class<`character`, `plotly_default`> | character | class<`colorway`, `plotly_default`> | class<`colorway`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`> | class<`data.frame`, `plotly_data`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`GeomLine`, `data.frame`> | class<`GeomSmooth`, `data.frame`> | list<any> | null | class<`matrix`> | double[], character[]> => (class<`character`, `colorway`, `plotly_default`> | class<`character`, `plotly_default`> | class<`colorway`, `plotly_default`> | class<`data.frame`, `grouped_df`, `plotly_data`, `tbl`, `tbl_df`> | class<`data.frame`, `plotly_data`> | class<`data.frame`, `plotly_data`, `spec_tbl_df`, `tbl`, `tbl_df`> | class<`data.frame`, `plotly_data`, `tbl`, `tbl_df`> | class<`GeomBar`, `data.frame`> | class<`GeomLine`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPoint`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`> | class<`GeomSmooth`, `data.frame`> | class<`list`, `plotly_default`> | class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | class<`list`, `plotly_path`> | class<`list`, `plotly_polygon`, `plotly_ribbon`> | class<`logical`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`> | class<`TeX`, `character`>);
type `rangeslider` <class<`htmlwidget`, `plotly`>, class<`Date`> | null, class<`Date`> | null, ...> => class<`htmlwidget`, `plotly`>;
type `raster2uri` <class<`raster`>, ...> => character;
type `rect2shape` <class<`element`, `element_blank`>> => list<character | null | list<null | double | character[]>>;
type `registerFrames` <class<`htmlwidget`, `plotly`>, any> => class<`htmlwidget`, `plotly`>;
type `relay_type` <character> => character;
type `retain` <character[] | class<`character`, `colorway`, `plotly_default`> | class<`character`, `plotly_default`> | class<`logical`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`> | double[] | null, class<`function`>> => (character | class<`character`, `colorway`, `plotly_default`> | class<`character`, `plotly_default`> | class<`logical`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`> | double[] | null);
type `rgb2hex` <character[] | class<`character`, `colorway`, `plotly_default`>> => character[];
type `ribbon_dat` <class<`GeomSmooth`, `data.frame`>> => class<`GeomSmooth`, `data.frame`>;
type `rm_asis` <^character[] | ^double[] | null | list<any>> => (^character[] | ^double[] | null | list<any>);
type `schema` <logical, ...> => list<list<character[] | list<character | list<character | list<any> | character[] | character[] | list<any> | character[]>> | character | list<list<character | list<character>>> | list<any>>>;
type `set_last_plot` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `shiny_defaults_set` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `shiny_event_defaults` < > => character[];
type `showRGB` <character[], ...> => null;
type `slice_.plotly` <class<`htmlwidget`, `plotly`>, ..., class<`lazy_dots`>> => class<`htmlwidget`, `plotly`>;
type `special_attrs` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>> => null;
type `split_on` <class<`GeomBar`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`> | class<`GeomPoint`, `data.frame`>> => (character[] | null);
type `style` <class<`htmlwidget`, `plotly`>, ..., double[] | null> => class<`htmlwidget`, `plotly`>;
type `subplot` <..., double, null, null, double, logical, logical, logical> => class<`htmlwidget`, `plotly`>;
type `supply_defaults` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `supply_highlight_attrs` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `TeX` <character> => class<`TeX`, `character`>;
type `text2font` <class<`element`, `element_text`>, character> => list<character | double>;
type `to_basic` <class<`GeomBar`, `data.frame`> | class<`GeomLine`, `data.frame`> | class<`GeomPoint`, `data.frame`> | class<`GeomSmooth`, `data.frame`>, any, any, any, any, ...> => (class<`GeomBar`, `data.frame`> | class<`GeomLine`, `GeomPath`, `data.frame`> | class<`GeomPoint`, `data.frame`> | list<class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`>>);
type `to_basic.default` <class<`GeomBar`, `data.frame`> | class<`GeomPoint`, `data.frame`>, any, any, any, any, ...> => (class<`GeomBar`, `data.frame`> | class<`GeomPoint`, `data.frame`>);
type `to_basic.GeomLine` <class<`GeomLine`, `data.frame`>, any, any, any, any, ...> => class<`GeomLine`, `GeomPath`, `data.frame`>;
type `to_basic.GeomSmooth` <class<`GeomSmooth`, `data.frame`>, any, any, list<any>, any, ...> => list<class<`GeomPath`, `GeomSmooth`, `data.frame`> | class<`GeomPolygon`, `GeomSmooth`, `data.frame`>>;
type `to_JSON` <list<character[] | list<any>>, ...> => class<`json`>;
type `to_milliseconds` <class<`Date`> | null> => (double | null);
type `toRGB` <null | character[] | class<`colorway`, `plotly_default`> | class<`AsIs`> | class<`colorway`>, any> => (character[] | null);
type `toWebGL` <class<`gg`, `ggplot`>> => class<`htmlwidget`, `plotly`>;
type `traceify` <list<any>, null | character[]> => list<list<any>>;
type `trace_replace` <list<any>, character[], character | list<double> | double | list<list<character>>> => list<any>;
type `train_data` <class<`data.frame`, `tbl`, `tbl_df`>, class<`list`, `plotly_line`> | list<class<`Date`> | double[] | character> | list<double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `translate_linebreaks` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `tryFALSE` <any> => logical;
type `try_library` <character, character> => null;
type `tryNULL` <any> => (character[] | double | null | list<double>);
type `typedArrayPolyfill` < > => class<`html_dependency`>;
type `uniq` <class<`character`, `colorway`, `plotly_default`> | class<`character`, `plotly_default`> | class<`matrix`, `plotly_default`> | class<`numeric`, `plotly_default`> | class<`logical`, `plotly_default`> | null | class<`AsIs`> | class<`matrix`> | ^character[] | ^double[]> => (class<`matrix`, `plotly_default`> | double[] | null | class<`matrix`> | ^character[]);
type `unitConvert` <class<`margin`, `unit`> | class<`element`, `element_blank`> | class<`element`, `element_line`> | class<`element`, `element_text`> | class<`unit`> | double, character, character[]> => double[];
type `user_specified` <null | list<any>> => logical;
type `verify_arrays` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_attr` <class<`list`, `plotly_default`> | class<`plotly_colorbar`> | class<`plotly_colorbar`, `zcolor`> | list<any>, any, any> => (class<`list`, `plotly_default`> | class<`plotly_colorbar`> | class<`plotly_colorbar`, `zcolor`> | list<any>);
type `verify_attr_names` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_attr_spec` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_colorscale` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_guides` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_hovermode` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_key_type` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_mathjax` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_mode` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_orientation` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>> => (class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>);
type `verify_partial_bundle` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_scattergl_platform` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_showlegend` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
type `verify_type` <class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[]> | list<class<`Date`> | double[]> | list<character[] | double[]> | list<double[] | list<character | list<double | character>>>> => (class<`list`, `plotly_heatmap`> | class<`list`, `plotly_line`> | list<double[] | character> | list<class<`Date`> | double[] | character> | list<character[] | double[]> | list<double[] | character | list<character | list<double | character>>>);
type `verifyUnit` <class<`margin`, `unit`> | class<`element`, `element_blank`> | class<`element`, `element_line`> | class<`element`, `element_text`> | class<`unit`> | double> => (class<`margin`, `unit`> | class<`unit`>);
type `verify_webgl` <class<`htmlwidget`, `plotly`>> => class<`htmlwidget`, `plotly`>;
