type `anova.lmerModLmerTest` <class<`lmerModLmerTest`>, ..., any, character[]> => class<`anova`, `data.frame`>;
type `as.data.frame.ls_means` <class<`data.frame`, `ls_means`>, ..., logical> => class<`data.frame`>;
type `as_lmerModLmerTest` <class<`lmerMod`>, double> => class<`lmerModLmerTest`>;
type `as_lmerModLT` <class<`lmerMod`>, class<`function`>, double> => class<`lmerModLmerTest`>;
type `asMethod` <class<`lmerModLmerTest`>, any, class<`lmerMod`>> => class<`lmerModLmerTest`> | <class<`lmerModLmerTest`>, character, logical> => class<`lmerMod`>;
type `contain` <character, character> => logical;
type `containment` <class<`lmerModLmerTest`>> => list<character[]>;
type `contest` <class<`lmerModLmerTest`>, class<`matrix`> | double[] | list<double[] | class<`matrix`>>, ...> => (class<`data.frame`> | list<class<`data.frame`>>);
type `contest1D` <class<`lmerModLmerTest`>, ^double[], ...> => class<`data.frame`>;
type `contest1D.lmerModLmerTest` <class<`lmerModLmerTest`>, ^double[], double, character[], logical, any, ...> => class<`data.frame`>;
type `contest.lmerModLmerTest` <class<`lmerModLmerTest`>, class<`matrix`> | double[] | list<double[] | class<`matrix`>>, double, logical, logical, logical, double, logical, character[], ...> => (class<`data.frame`> | list<class<`data.frame`>>);
type `contestMD` <class<`lmerModLmerTest`>, class<`matrix`> | double[], ...> => class<`data.frame`>;
type `contestMD.lmerModLmerTest` <class<`lmerModLmerTest`>, class<`matrix`> | double[], double[], character[], any, ...> => class<`data.frame`>;
type `doolittle` <class<`matrix`>, double> => list<class<`matrix`>>;
type `extract_contrasts_type3` <class<`lmerModLmerTest`>, class<`matrix`>> => list<class<`matrix`>>;
type `filter` <character[]> => logical[];
type `fun` <character, character[]> => character[] | <double[]> => double;
type `FUN` <character> => logical | <integer> => class<`matrix`> | <class<`name`>> => character | <character> => character[] | <character> => character | <class<`matrix`>> => class<`data.frame`> | <class<`matrix`>> => double | <character> => double[] | <character> => character[] | <integer> => double | <character> => class<`matrix`> | <^double[]> => class<`data.frame`> | <class<`matrix`>> => class<`matrix`> | <integer> => class<`data.frame`> | <class<`matrix`> | double[]> => class<`data.frame`> | <integer> => double[] | <integer> => class<`matrix`> | <character> => class<`matrix`> | <class<`factor`>> => null | <class<`matrix`>> => double | <integer> => class<`data.frame`> | <character> => class<`data.frame`> | <class<`matrix`> | double[]> => class<`data.frame`> | <character> => logical | <integer> => class<`matrix`> | <integer> => ^double[] | <character> => character | <integer> => character[];
type `func` <double[], class<`function`>> => class<`matrix`> | <double[], class<`function`>, logical> => double;
type `get_coefmat` <class<`lmerModLmerTest`>, character> => class<`matrix`>;
type `get_contrast_coding` <class<`lmerModLmerTest`>, character> => list<character>;
type `get_contrasts_type1` <class<`lmerModLmerTest`>> => list<class<`matrix`>>;
type `get_contrasts_type3` <class<`lmerModLmerTest`>, null> => list<class<`matrix`>>;
type `get_fac_list` <class<`lmerModLmerTest`>> => list<character[]>;
type `get_Fstat_ddf` <double[], double> => double;
type `get_levels` <character, character[]> => character[];
type `get_min_data` <class<`lmerModLmerTest`>, any> => class<`data.frame`>;
type `get_model_matrix` <class<`lmerModLmerTest`>, character, character> => class<`matrix`>;
type `get_num_list` <class<`lmerModLmerTest`>, any> => list<any>;
type `get_rdX` <class<`lmerModLmerTest`>, logical> => class<`matrix`>;
type `get_var_list` <class<`lmerModLmerTest`>, any> => list<character[]>;
type `is_estimable` <class<`matrix`>, class<`matrix`>, null, any> => logical[];
type `lmer` <any, any, logical, any, null, integer, any, any, any, any, null, logical> => class<`lmerModLmerTest`>;
type `ls_means` <class<`lmerModLmerTest`>, ...> => class<`data.frame`, `ls_means`>;
type `lsmeans_contrasts` <class<`lmerModLmerTest`>, null> => list<class<`matrix`>>;
type `ls_means.lmerModLmerTest` <class<`lmerModLmerTest`>, null, double, character[], logical, ...> => class<`data.frame`, `ls_means`>;
type `mk_Ftable` <double, integer, double, double, double> => class<`data.frame`>;
type `mk_ttable` <double | null, double | null, double | null> => class<`data.frame`>;
type `nullspace` <class<`matrix`>, character[], any> => class<`matrix`>;
type `numeric_terms` <class<`lmerModLmerTest`>> => logical[];
type `qform` <double[], class<`matrix`>> => double;
type `rbindall` <...> => class<`data.frame`>;
type `safeDeparse` <class<`name`>, integer, logical, character[], integer> => character;
type `single_anova` <class<`lmerModLmerTest`>, character[], character> => class<`anova`, `data.frame`>;
type `summary.lmerModLmerTest` <class<`lmerModLmerTest`>, ..., character[]> => class<`summary.lmerModLmerTest`, `summary.merMod`>;
type `term2colX` <class<`formula`, `terms`>, class<`matrix`>> => list<integer>;
type `term_contain` <character, class<`matrix`>, character[], character[]> => logical[];
type `waldCI` <double | null, double | null, double | null, double> => class<`matrix`>;
