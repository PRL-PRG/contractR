type `.abcd_and_binary` <class<`proxy_registry_entry`, `registry_entry`> | list<any>> => null;
type `as.data.frame.proxy_registry` <class<`pr_DB`, `proxy_registry`> | class<`proxy_registry`>, ...> => class<`data.frame`>;
type `as.dist` <class<`matrix`>, null> => class<`dist`>;
type `as.matrix` <character[] | double[] | class<`data.frame`> | class<`dist`> | class<`dist`, `simil`>, ...> => class<`matrix`>;
type `as_matrix_dist` <class<`dist`> | class<`dist`, `simil`>, ...> => class<`matrix`>;
type `as.matrix.dist` <class<`dist`>, double, ...> => class<`matrix`>;
type `as.matrix.simil` <class<`dist`, `simil`>, double, ...> => class<`matrix`>;
type `as.simil` <class<`dist`>, class<`function`>> => class<`dist`, `simil`>;
type `col.dist` <class<`dist`>> => integer[];
type `dim.dist` <class<`dist`>> => integer[];
type `dimnames<-.dist` <class<`dist`>, character[]> => class<`dist`>;
type `dimnames.dist` <class<`dist`>> => character[];
type `dist` <character[] | class<`matrix`> | class<`data.frame`> | list<double[]>, character[] | class<`matrix`> | class<`data.frame`> | null | class<`function`> | list<double[]>, character | null, ..., logical, logical, logical, logical, logical, logical> => (class<`crossdist`> | class<`dist`> | class<`pairdist`>);
type `[[.dist` <class<`dist`>, double[], ...> => class<`dist`>;
type `.FUNCall` <any> => class<`function`>;
type `.functions_to_characters` <class<`proxy_registry_entry`, `registry_entry`> | class<`registry_entry`, `simple.list`>> => (class<`proxy_registry_entry`, `registry_entry`> | class<`registry_entry`, `simple.list`>);
type `length.proxy_registry` <class<`pr_DB`, `proxy_registry`>> => integer;
type `names<-.dist` <class<`dist`>, character[]> => class<`dist`>;
type `names.dist` <class<`dist`>> => character[];
type `pr_Canberra_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_cos_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_eDice_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_eJaccard_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Euclidean_prefun` <class<`matrix`> | list<double[]>, class<`matrix`> | null | list<double[]>, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_fJaccard_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Gower_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Jaccard_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Levenshtein_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Mahalanobis_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Manhattan_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `pr_Minkowski_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<double>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `[[.proxy_registry` <class<`pr_DB`, `proxy_registry`> | class<`proxy_registry`>, character> => (class<`proxy_registry_entry`, `registry_entry`> | class<`registry_entry`, `simple.list`>);
type `pr_simil2dist` <class<`dist`> | class<`matrix`> | double[]> => (class<`dist`> | class<`matrix`> | double[]);
type `pr_supremum_prefun` <class<`matrix`>, class<`matrix`> | null, logical, list<any>, class<`proxy_registry_entry`, `registry_entry`>> => list<any>;
type `row.dist` <class<`dist`>> => integer[];
type `rowMeans.dist` <class<`dist`>, logical, logical> => double[];
type `rowSums.dist` <class<`dist`>, logical> => double[];
type `subset.dist` <class<`dist`>, double[], ...> => class<`dist`>;
type `summary.pr_DB` <class<`pr_DB`, `proxy_registry`>, character[], ...> => class<`summary.pr_DB`>;
type `summary.proxy_registry` <class<`proxy_registry`>, ...> => class<`data.frame`>;
