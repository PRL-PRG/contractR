type `::` <double[], any => any, struct<`maxit`:double>, logical, ???> => struct<`par`:double[], `value`:double, `counts`:integer, `convergence`:integer, `message`:character, `hessian`:null>;
type `filter` <character[]> => logical[];
type `subplex` <double[], any => any | character, struct<`maxit`:double> | tuple<> | struct<`parscale`:double[]> | struct<`reltol`:double>, logical, ??? | double> => struct<`par`:double[], `value`:double, `counts`:integer, `convergence`:integer, `message`:character, `hessian`:^double[]> | struct<`par`:double[], `value`:double, `counts`:integer, `convergence`:integer, `message`:character, `hessian`:null>;
