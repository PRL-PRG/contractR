type `append.poly` <class<`gpc.poly`>, class<`gpc.poly`>> => class<`gpc.poly`> | <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`> | <class<`gpc.poly`> | class<`gpc.poly.nohole`>, class<`gpc.poly`> | class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
type `area` <class<`matrix`>> => double;
type `area.poly` <class<`gpc.poly`>, ...> => double | <class<`gpc.poly`>, ...> => double;
type `asMethod` <double[], character, logical> => class<`gpc.poly`> | <class<`matrix`>, character, logical> => class<`gpc.poly`> | <class<`gpc.poly`>, character, logical> => double[] | <double[], character, logical> => class<`gpc.poly.nohole`> | <class<`gpc.poly.nohole`>, character, logical> => double[];
type `expand.poly` <double[]> => list<list<double[]>> | <double[]> => list<list<double[]>>;
type `filter` <character[]> => logical[];
type `flatten.poly` <class<`gpc.poly`> | class<`gpc.poly.nohole`>> => double[];
type `fun` <character, character> => null;
type `FUN` <double[]> => class<`matrix`> | <list<double[]>> => double[] | <class<`matrix`>> => class<`matrix`> | <list<double[]>> => null | <list<double[]>> => double;
type `get.bbox` <class<`gpc.poly`>> => list<double[]> | <class<`gpc.poly`>> => list<double[]>;
type `intersect` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`> | <class<`gpc.poly`>, class<`gpc.poly`>> => class<`gpc.poly`>;
type `.local` <class<`gpc.poly`>, any, list<any>, character, character, double, logical, ...> => list<null>;
type `plot` <class<`gpc.poly`>, any, ...> => list<null>;
type `read.polyfile` <character, logical> => (class<`gpc.poly`> | class<`gpc.poly.nohole`>);
type `setdiff` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
type `show` <class<`gpc.poly`>> => class<`gpc.poly`>;
type `triangulate` <class<`gpc.poly`>> => class<`matrix`> | <class<`gpc.poly`>> => class<`matrix`>;
type `tristrip` <class<`gpc.poly`>> => list<class<`matrix`>> | <class<`gpc.poly`>> => list<class<`matrix`>>;
type `union` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
