type `cluster_mat` <any, class<`dist`> | character, character> => class<`hclust`>;
type `convert_annotations` <class<`data.frame`>, list<character[]>> => class<`matrix`>;
type `draw_annotation_legend` <list<integer[] | class<`factor`>>, list<character[]>, character, ...> => class<`gDesc`, `gTree`, `grob`>;
type `draw_annotation_names` <class<`data.frame`>, double, logical, any, any, any> => class<`gDesc`, `grob`, `text`>;
type `draw_annotations` <class<`matrix`>, character, integer | null, double, logical> => class<`gDesc`, `grob`, `rect`>;
type `draw_dendrogram` <class<`hclust`>, integer | null, logical> => class<`gDesc`, `grob`, `polyline`>;
type `draw_legend` <character[], double[], double[], ...> => class<`gDesc`, `gTree`, `grob`>;
type `draw_main` <character, ...> => class<`gDesc`, `grob`, `text`>;
type `draw_matrix` <class<`matrix`>, character, double[] | null, integer | null, class<`matrix`>, any, any> => class<`gDesc`, `gTree`, `grob`>;
type `find_coordinates` <integer, null | double[], double[]> => list<class<`unit`> | class<`unit`, `unit.arithmetic`>>;
type `find_gaps` <class<`hclust`>, double> => integer;
type `generate_annotation_colours` <list<class<`factor`> | integer[]>, null | list<character[]>, logical> => list<character[]>;
type `generate_breaks` <class<`matrix`> | double[], integer, logical> => double[];
type `heatmap_motor` <class<`matrix`>, character, double | null, double | null, class<`hclust`>, class<`hclust`> | null, double, double, character | null, any, any, any, any, double[] | null, null | class<`data.frame`>, null | class<`data.frame`>, any, logical, logical, logical> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `is.na2` <character[] | class<`data.frame`> | class<`factor`> | class<`hclust`> | double[] | null | list<character[]>> => logical;
type `lo` <character[], character[], integer, integer, double | null, double | null, double, double, double[] | null, null | class<`data.frame`>, null | class<`data.frame`>, any, any, logical, logical, character | null, double, double, double, double> => list<class<`gDesc`, `gTree`, `grob`, `gtable`> | double>;
type `pheatmap` <class<`matrix`>, character[], double | null, null, character, null | double, null | double, character, logical, logical, character | class<`dist`>, character | class<`dist`>, character, class<`function`>, null, null | double, any, double, logical, null | integer[]> => class<`pheatmap`>;
type `scale_colours` <class<`matrix`>, character[], double[], character> => class<`matrix`>;
type `scale_mat` <class<`matrix`>, character> => class<`matrix`>;
type `scale_rows` <class<`matrix`>> => class<`matrix`>;
type `scale_vec_colours` <double[], character[], double[], character> => character[];
