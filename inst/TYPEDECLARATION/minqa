type `filter` <character[]> => logical[];
type `bobyqa` <double[], any => any, double[], double[], struct<`maxfun`:double> | tuple<> | struct<`npt`:double> | struct<`iprint`:double>, null> => struct<`par`:double[], `fval`:double, `feval`:integer, `ierr`:double, `msg`:character>;
type `commonArgs` <double[], any => any, tuple<> | struct<`maxfun`:double> | struct<`npt`:double> | struct<`iprint`:double>, environment> => environment;
type `fn1` <double[]> => ^double[];
type `FUN` <character> => null | double;
type `newuoa` <double[], any => any, struct<`maxfun`:double> | tuple<> | struct<`npt`:double> | struct<`iprint`:double>, null> => struct<`par`:double[], `fval`:double, `feval`:integer, `ierr`:double, `msg`:character>;
type `uobyqa` <double[], any => any, struct<`maxfun`:double> | tuple<> | struct<`iprint`:double>, null> => struct<`par`:double[], `fval`:double, `feval`:integer, `ierr`:double, `msg`:character>;
type `::` <double[], any => any, double[] | struct<`maxfun`:double, `iprint`:double>, double[] | null, struct<`maxfun`:double, `iprint`:double>, null | double> => struct<`par`:double[], `fval`:double, `feval`:integer, `ierr`:double, `msg`:character>;
