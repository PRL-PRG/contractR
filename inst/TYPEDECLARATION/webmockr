type `::` <null, any> => logical[] | <null, any> => logical[];
type `$` <null | list<character>> => (character | null) | <null, logical> => raw[] | <class<`R6`, `RequestSignature`>> => logical | < > => class<`HashCounter`, `R6`> | <character> => double | <list<any>> => (character | null) | <null, any> => null | <list<character | list<character | class<`curl_handle`> | logical | character | character>>, class<`R6`, `Response`>> => class<`HttpResponse`, `R6`> | <list<double | character>> => logical | <null, logical> => null | <null, logical> => null | <list<character | double | character | class<`form_file`>>, list<character | double | character | class<`form_file`>>> => logical | < > => logical | < > => logical | <list<character | list<character | class<`curl_handle`> | logical | character | character>>> => class<`HttpResponse`, `R6`> | <class<`form_file`> | list<character | double | class<`form_file`>>, character> => logical | <class<`R6`, `StubbedRequest`>> => list<class<`R6`, `StubbedRequest`>> | < > => character | <class<`Adapter`, `HttrAdapter`, `R6`> | class<`Adapter`, `CrulAdapter`, `R6`>> => list<class<`Adapter`, `CrulAdapter`, `R6`> | class<`Adapter`, `HttrAdapter`, `R6`> | class<`Adapter`, `CrulAdapter`, `R6`>> | < > => character | <list<character | list<character | class<`curl_handle`> | logical | character | character>>> => class<`R6`, `RequestSignature`> | <class<`R6`, `RequestSignature`>> => logical | < > => character | < > => list<any> | <character> => logical | <class<`R6`, `StubbedRequest`>, class<`HttpResponse`, `R6`>> => class<`HttpResponse`, `R6`> | <integer> => integer | <character> => logical | <class<`form_file`> | list<character | double | class<`form_file`>>, character> => list<character | double | character | class<`form_file`>> | <class<`R6`, `StubbedRequest`>> => list<any> | <class<`R6`, `RequestSignature`>> => logical | < > => list<any> | <character> => double | <list<double | character>> => logical | <class<`R6`, `StubbedRequest`>> => class<`R6`, `Response`> | <null | list<character>, character | class<`form_file`> | double | raw[] | null | list<character>, null | list<character>> => (null | list<character>) | <double | null, character | null | list<character | list<character>>, null | list<double>> => raw[] | <list<double | character>> => list<double | character> | <class<`R6`, `RequestSignature`>> => list<class<`R6`, `StubbedRequest`>> | <character> => character;
type `%||%` <character | null | double | list<character>, any> => (character | double | null | list<character>);
type `add_scheme` <character> => character;
type `along_rep` <null | list<any>, logical> => logical[];
type `assert` <character | class<`R6`, `RequestSignature`> | class<`R6`, `StubbedRequest`> | double | null | list<any>, character[]> => null;
type `assert_request` <list<character | list<character | class<`curl_handle`> | logical | character | character>>> => null;
type `cc` <list<any>> => list<double | character | raw[]>;
type `check_for_pkg` <character> => logical;
type `esc` <character> => character;
type `filter` <character[]> => logical[];
type `fun` <any, any> => class<`HttpLibAdapaterRegistry`, `R6`>;
type `FUN` <class<`Adapter`, `CrulAdapter`, `R6`> | class<`Adapter`, `HttrAdapter`, `R6`>> => logical | <class<`Adapter`, `CrulAdapter`, `R6`> | class<`Adapter`, `HttrAdapter`, `R6`>> => logical | <class<`Adapter`, `CrulAdapter`, `R6`> | class<`Adapter`, `HttrAdapter`, `R6`>> => character | <class<`R6`, `StubbedRequest`>> => character | <character> => logical | <class<`R6`, `StubbedRequest`>> => logical;
type `hdl_lst2` <list<character>> => character;
type `httr_mock` <logical> => logical;
type `hz_namez` <null | list<any>> => logical[];
type `is_body_empty` <list<character | list<character | class<`curl_handle`> | logical | character | character>>> => logical;
type `make_body` <null> => character;
type `make_headers` <null> => character;
type `make_status` <null> => character;
type `mock_file` <character, character> => class<`mock_file`>;
type `normalize_headers` <null, any> => null;
type `normalize_uri` <character> => character;
type `parseurl` <character> => list<character | null>;
type `pluck_body` <list<character | list<character | class<`curl_handle`> | logical | character | character>>> => null;
type `prune_port` <character> => character;
type `prune_trailing_slash` <character> => character;
type `query_mapper` <list<character | double | character | class<`form_file`>>> => list<character | double | character | class<`form_file`>>;
type `remove_request_stub` <class<`R6`, `StubbedRequest`>> => list<any>;
type `request_is_in_cache` <class<`R6`, `RequestSignature`>> => logical;
type `request_registry` < > => class<`R6`, `RequestRegistry`>;
type `request_registry_clear` < > => class<`HashCounter`, `R6`>;
type `stub_registry` < > => class<`R6`, `StubRegistry`>;
type `stub_registry_clear` < > => list<any>;
type `stub_request` <character, character, null> => class<`R6`, `StubbedRequest`>;
type `.subset2` <character, character, list<any>> => (character | null) | <list<double | character>> => list<double | character> | <character | null, null | character> => character | <character, character, any, null, null, null> => null | <character, character, null> => list<character | null> | <class<`form_file`> | list<character | double | character | class<`form_file`>>> => list<character | double | character | class<`form_file`>> | < > => null | <list<any>> => list<any> | <character> => character;
type `to_return` <class<`R6`, `StubbedRequest`>, ..., list<any>> => class<`R6`, `StubbedRequest`>;
type `to_string` <list<character>> => character;
type `url_builder` <character, null> => character;
type `vcr_cassette_inserted` < > => logical;
type `vcr_loaded` < > => logical;
type `webmockr_configuration` < > => class<`webmockr_config`>;
type `webmockr_configure` <logical, logical, null, logical, logical, logical, logical> => class<`webmockr_config`>;
type `wi_th` <class<`R6`, `StubbedRequest`>, ..., list<any>> => class<`R6`, `StubbedRequest`>;
