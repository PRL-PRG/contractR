type `_fseq` <struct<`engine`:character[], `pkg`:tuple<character, character, character, character[], character>>> => ? character | struct<> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>;
type `.f` <character | language | integer, character | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, symbol | struct<>, symbol | character, ???> => logical | any => any | struct<>;
type `.obs` < > => integer;
type `[[` <struct<`.pred`:double> | tuple<character> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>>> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>> | character[]> => ? struct<`.pred`:double, `neighbors`:integer, `.row`:integer> | character[] | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>> | tuple<character> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>>> | tuple<struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>>;
type `$` <^double[] | struct<>, symbol | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:integer>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>> => integer | struct<>;
type `add_methods` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character>, character> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `add_rowindex` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>> => struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[], `.row`:integer[]>;
type `boost_tree` <character, ? double | language, ? double, ? double, null, null, null, null> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language, `tree_depth`:language, `learn_rate`:language, `loss_reduction`:language, `sample_size`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `check_args.linear_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `check_args.logistic_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character>> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character>;
type `check_args.nearest_neighbor` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `check_control` <struct<`verbosity`:integer, `catch`:logical>> => struct<`verbosity`:integer, `catch`:logical>;
type `check_dup_names` <struct<`funded_amnt`:integer[], `int_rate`:double[]>, struct<`..y`:integer[]>> => null;
type `check_empty_ellipse` <???> => tuple<>;
type `check_eng_args` <? tuple<> | struct<`nlambda`:language> | struct<`x`:language>, struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>> | struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>>, character[]> => ? tuple<> | struct<`nlambda`:language> | struct<`x`:language>;
type `check_engine` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `check_form_dots` <tuple<>> => null;
type `check_installs` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => null;
type `check_mode` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, symbol | language> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `check_model_exists` <character> => null;
type `check_pred_type` <struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:integer>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, ? character> => character;
type `convert_form_to_xy_fit` <language, struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, ???, symbol, logical, character> => struct<`x`:struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `y`:double[], `weights`:null, `offset`:null, `terms`:language, `xlevels`:tuple<>, `offset_expr`:null, `options`:struct<`indicators`:logical, `composition`:character, `contrasts`:null>>;
type `convert_xy_to_form_fit` <struct<`funded_amnt`:integer[], `int_rate`:double[]>, integer[], null, character> => struct<`formula`:language, `data`:struct<`funded_amnt`:integer[], `int_rate`:double[], `..y`:integer[]>, `weights`:null, `x_var`:character[]>;
type `decision_tree` <character, ? double | language, ? double, ? double> => struct<`args`:struct<`cost_complexity`:language, `tree_depth`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `deharmonize` <struct<`penalty`:language, `mixture`:language> | struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, struct<`parsnip`:character[], `original`:character[], `func`:tuple<>, `has_submodel`:logical[]>> => tuple<> | struct<`ks`:language, `kernel`:language, `distance`:language> | struct<`lambda`:language, `alpha`:language> | struct<`reg_param`:language, `elastic_net_param`:language>;
type `eval_mod` <language, logical, logical, environment> => struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`..y`:integer[], `funded_amnt`:integer[], `int_rate`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`funded_amnt`:integer[], `int_rate`:double[], `..y`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`Class`:integer[], `funded_amnt`:integer[], `int_rate`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`funded_amnt`:integer[], `term`:integer[], `int_rate`:double[], `sub_grade`:integer[], `addr_state`:integer[], `verification_status`:integer[], `annual_inc`:double[], `emp_length`:integer[], `delinq_2yrs`:integer[], `inq_last_6mths`:integer[], `revol_util`:double[], `acc_now_delinq`:integer[], `open_il_6m`:integer[], `open_il_12m`:integer[], `open_il_24m`:integer[], `total_bal_il`:integer[], `all_util`:integer[], `inq_fi`:integer[], `inq_last_12m`:integer[], `delinq_amnt`:integer[], `num_il_tl`:integer[], `total_il_high_credit_limit`:integer[], `Class`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>> | struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>;
type `filter` <character[]> => logical[];
type `fit_control` <integer, logical> => struct<`verbosity`:integer, `catch`:logical>;
type `fit_xy.model_spec` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character>, struct<`funded_amnt`:integer[], `int_rate`:double[]>, integer[], struct<`verbosity`:integer, `catch`:logical>, ???> => struct<`lvl`:character[], `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`..y`:integer[], `funded_amnt`:integer[], `int_rate`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`funded_amnt`:integer[], `int_rate`:double[], `..y`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, `preproc`:struct<`x_var`:character[], `NA`:null>>;
type `fit.model_spec` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character>, language, struct<`funded_amnt`:integer[], `term`:integer[], `int_rate`:double[], `sub_grade`:integer[], `addr_state`:integer[], `verification_status`:integer[], `annual_inc`:double[], `emp_length`:integer[], `delinq_2yrs`:integer[], `inq_last_6mths`:integer[], `revol_util`:double[], `acc_now_delinq`:integer[], `open_il_6m`:integer[], `open_il_12m`:integer[], `open_il_24m`:integer[], `total_bal_il`:integer[], `all_util`:integer[], `inq_fi`:integer[], `inq_last_12m`:integer[], `delinq_amnt`:integer[], `num_il_tl`:integer[], `total_il_high_credit_limit`:integer[], `Class`:integer[]>, struct<`verbosity`:integer, `catch`:logical>, ???> => struct<`lvl`:character[], `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`Class`:integer[], `funded_amnt`:integer[], `int_rate`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`funded_amnt`:integer[], `term`:integer[], `int_rate`:double[], `sub_grade`:integer[], `addr_state`:integer[], `verification_status`:integer[], `annual_inc`:double[], `emp_length`:integer[], `delinq_2yrs`:integer[], `inq_last_6mths`:integer[], `revol_util`:double[], `acc_now_delinq`:integer[], `open_il_6m`:integer[], `open_il_12m`:integer[], `open_il_24m`:integer[], `total_bal_il`:integer[], `all_util`:integer[], `inq_fi`:integer[], `inq_last_12m`:integer[], `delinq_amnt`:integer[], `num_il_tl`:integer[], `total_il_high_credit_limit`:integer[], `Class`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `x`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `x`:^double[]>, `preproc`:struct<`y_var`:character>>;
type `form_form` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, struct<`verbosity`:integer, `catch`:logical>, environment, ???> => struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `x`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `x`:^double[]>, `preproc`:struct<`y_var`:character>>;
type `format_num` <double[]> => struct<`.pred`:double[]>;
type `FUN` <language | symbol | character> => logical | language;
type `get_args` <character, character> => struct<`parsnip`:character[], `original`:character[], `func`:tuple<>, `has_submodel`:logical[]>;
type `get_descr_df` <language, struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>> => struct<`.cols`:any => any, `.preds`:any => any, `.obs`:any => any, `.lvls`:any => any, `.facts`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any>;
type `get_descr_form` <language, struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>> => struct<`.cols`:any => any, `.preds`:any => any, `.obs`:any => any, `.lvls`:any => any, `.facts`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any>;
type `get_from_env` <character> => character[] | struct<>;
type `get_model_env` < > => environment;
type `get_model_spec` <character, character, character> => struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>> | struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character[], `args`:struct<`x`:language, `dataset`:symbol>>>> | struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>> | struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>> | struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>> | struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>;
type `has_multi_predict.default` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character>, ???> => logical;
type `has_multi_predict.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, ???> => logical;
type `inher` <struct<`funded_amnt`:integer[], `int_rate`:double[]> | integer[] | language, character[], symbol> => struct<`funded_amnt`:integer[], `int_rate`:double[]> | integer[] | language;
type `int_check` <integer, double> => logical;
type `is_missing_arg` <language | symbol> => logical;
type `is_spark` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `x`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => logical;
type `is_varying` <? language | symbol> => logical;
type `levels_from_formula` <language, struct<`funded_amnt`:integer[], `int_rate`:double[], `..y`:integer[]>> => character[];
type `linear_reg` <character, ? double | language, ? double | language> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `logistic_reg` <character, ? double | language, ? double | language> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `make_call` <character, character, struct<`formula`:symbol, `data`:symbol, `ks`:language> | struct<`formula`:symbol, `data`:symbol, `weights`:language>, ???> => language;
type `make_classes` <character> => character[];
type `make_formula` <language, character, logical> => language;
type `make_pred_call` <struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>> | struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>, `extras`:struct<`level`:double, `std_error`:logical>> | struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>> => language;
type `mars` <character, double, null, ? character> => struct<`args`:struct<`num_terms`:language, `prod_degree`:language, `prune_method`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `mlp` <character, ? double | language, ? double, ? double, null, null> => struct<`args`:struct<`hidden_units`:language, `penalty`:language, `dropout`:language, `epochs`:language, `activation`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `multi_predict_args.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, ???> => character;
type `multi_predict._train.kknn` <struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:double>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double, `disp`:double, `hp`:double, `drat`:double, `wt`:double, `qsec`:double, `vs`:double, `am`:double, `gear`:double, `carb`:double>, null, integer[], ???> => struct<`.pred`:tuple<struct<`neighbors`:integer[], `.pred`:double[]>>>;
type `multinom_reg` <character, ? double | language, ? double> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `nearest_neighbor` <character, double, null, null> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `new_model_spec` <character, struct<`cost_complexity`:language, `tree_depth`:language, `min_n`:language> | struct<`cost`:language, `degree`:language, `scale_factor`:language, `margin`:language> | struct<`cost`:language, `rbf_sigma`:language, `margin`:language> | struct<`dist`:language> | struct<`hidden_units`:language, `penalty`:language, `dropout`:language, `epochs`:language, `activation`:language> | struct<`mtry`:language, `trees`:language, `min_n`:language> | struct<`neighbors`:language, `weight_func`:language, `dist_power`:language> | struct<`num_terms`:language, `prod_degree`:language, `prune_method`:language> | struct<`penalty`:language, `mixture`:language>, ? struct<`importance`:language> | struct<`sample.fraction`:language> | struct<`seed`:language> | struct<`strata`:language, `sampsize`:language> | tuple<> | struct<`nlambda`:language> | struct<`x`:language>, character, null, ? character> => struct<`args`:struct<`cost_complexity`:language, `tree_depth`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`cost`:language, `degree`:language, `scale_factor`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`cost`:language, `rbf_sigma`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`dist`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`hidden_units`:language, `penalty`:language, `dropout`:language, `epochs`:language, `activation`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`importance`:language>, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`sample.fraction`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`seed`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`strata`:language, `sampsize`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`num_terms`:language, `prod_degree`:language, `prune_method`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character>;
type `null_model` <character> => struct<`args`:tuple<>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `nullmodel.default` <null, integer[], ???> => struct<`call`:language, `value`:character, `levels`:character[], `pct`:double[], `n`:integer>;
type `poke_descrs` <struct<`.cols`:any => any, `.preds`:any => any, `.obs`:any => any, `.lvls`:any => any, `.facts`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any>> => struct<`.obs`:any => any, `.preds`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any, `.facts`:any => any, `.lvls`:any => any, `.cols`:any => any>;
type `positive_int_scalar` <double> => logical;
type `possible_engines` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character>, ???> => character[];
type `predict_confint.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, double, logical, ???> => struct<`.pred_lower`:double[], `.pred_upper`:double[]>;
type `predict_numeric.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:integer>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, ???> => double[];
type `predict_raw.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, struct<`type`:character>, ???> => ^double[];
type `predict.model_fit` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:integer>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, ? character, tuple<> | struct<`type`:character>, double | ???> => struct<`.pred_lower`:double[], `.pred_upper`:double[]> | ^double[];
type `predict.nullmodel` <struct<`call`:language, `value`:character, `levels`:character[], `pct`:double[], `n`:integer>, ^logical[], null, ???> => integer[];
type `prepare_data` <struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>>>, `engine`:character>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>> | struct<`lvl`:null, `spec`:struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, `fit`:struct<`MISCLASS`:^logical[], `MEAN.ABS`:^double[], `MEAN.SQU`:^double[], `fitted.values`:tuple<double[]>, `best.parameters`:struct<`kernel`:character, `k`:integer>, `response`:character, `distance`:double, `call`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>>, `preproc`:struct<`y_var`:character>>, struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>> => struct<`cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>;
type `rand_forest` <character, ? double | language, ? double, ? double> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `requires_descrs` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => logical;
type `scoped_descrs` <struct<`.cols`:any => any, `.preds`:any => any, `.obs`:any => any, `.lvls`:any => any, `.facts`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any>, environment> => struct<`.obs`:any => any, `.preds`:any => any, `.dat`:any => any, `.x`:any => any, `.y`:any => any, `.facts`:any => any, `.lvls`:any => any, `.cols`:any => any>;
type `set_args` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`importance`:language>, `mode`:character, `method`:null, `engine`:null>;
type `set_engine` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, character, language | double | symbol | ???> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`sample.fraction`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`seed`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`strata`:language, `sampsize`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character>;
type `set_mode` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`importance`:language>, `mode`:character, `method`:null, `engine`:null>, character> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`importance`:language>, `mode`:character, `method`:null, `engine`:null>;
type `shhhh` <character> => logical;
type `show_model_info` <character> => null;
type `specific_model` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>> => character;
type `surv_reg` <character, ? character | language> => struct<`args`:struct<`dist`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `svm_poly` <character, ? double | language, ? double, ? double, null> => struct<`args`:struct<`cost`:language, `degree`:language, `scale_factor`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `svm_rbf` <character, ? double | language, ? double, null> => struct<`args`:struct<`cost`:language, `rbf_sigma`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `translate.default` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, character, ???> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `alpha`:language, `nlambda`:language, `family`:character>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`x`:language, `formula`:language, `weight_col`:language, `reg_param`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character[], `args`:struct<`x`:language, `dataset`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `alpha`:language, `family`:character>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `lambda`:language, `family`:character>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>>;
type `translate.linear_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`x`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, character, ???> => struct<`args`:struct<`mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `alpha`:language, `family`:character>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>> | struct<`args`:struct<`penalty`:double, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `family`:character>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `weights`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `pred_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `interval`:character, `level`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`x`:language, `formula`:language, `weight_col`:language, `reg_param`:language>>, `pred`:struct<`numeric`:struct<`pre`:null, `post`:any => any, `func`:character[], `args`:struct<`x`:language, `dataset`:symbol>>>>, `engine`:character>;
type `translate.logistic_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character>, character, ???> => struct<`args`:struct<`mixture`:language>, `eng_args`:struct<`nlambda`:language>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:character>, `args`:struct<`x`:language, `y`:language, `weights`:language, `alpha`:language, `nlambda`:language, `family`:character>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newx`:language, `type`:character, `s`:language>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newx`:language>>>>, `engine`:character, `defaults`:struct<`family`:character>> | struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>>;
type `translate.nearest_neighbor` <struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>, character, ???> => struct<`args`:struct<`neighbors`:language, `weight_func`:language, `dist_power`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:tuple<>, `args`:struct<`formula`:language, `data`:language, `ks`:language>>, `pred`:struct<`numeric`:struct<`pre`:any => any, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>>>, `engine`:character>;
type `update_dot_check` <???> => null;
type `update.boost_tree` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language, `tree_depth`:language, `learn_rate`:language, `loss_reduction`:language, `sample_size`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, null, null, null, null, logical, ???> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language, `tree_depth`:language, `learn_rate`:language, `loss_reduction`:language, `sample_size`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.decision_tree` <struct<`args`:struct<`cost_complexity`:language, `tree_depth`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, logical, ???> => struct<`args`:struct<`cost_complexity`:language, `tree_depth`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.linear_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, logical, ???> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.logistic_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, logical, ???> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.mars` <struct<`args`:struct<`num_terms`:language, `prod_degree`:language, `prune_method`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, logical, ???> => struct<`args`:struct<`num_terms`:language, `prod_degree`:language, `prune_method`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.mlp` <struct<`args`:struct<`hidden_units`:language, `penalty`:language, `dropout`:language, `epochs`:language, `activation`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, null, null, logical, ???> => struct<`args`:struct<`hidden_units`:language, `penalty`:language, `dropout`:language, `epochs`:language, `activation`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.multinom_reg` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, logical, ???> => struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.rand_forest` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, logical, ???> => struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.surv_reg` <struct<`args`:struct<`dist`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, character, logical, ???> => struct<`args`:struct<`dist`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.svm_poly` <struct<`args`:struct<`cost`:language, `degree`:language, `scale_factor`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, null, logical, ???> => struct<`args`:struct<`cost`:language, `degree`:language, `scale_factor`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `update.svm_rbf` <struct<`args`:struct<`cost`:language, `rbf_sigma`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>, double, null, null, logical, ???> => struct<`args`:struct<`cost`:language, `rbf_sigma`:language, `margin`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null>;
type `varying_args.model_spec` <struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:null, `mode`:character, `method`:null, `engine`:null> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`sample.fraction`:language>, `mode`:character, `method`:null, `engine`:character> | struct<`args`:struct<`mtry`:language, `trees`:language, `min_n`:language>, `eng_args`:struct<`strata`:language, `sampsize`:language>, `mode`:character, `method`:null, `engine`:character>, logical, ???> => struct<`name`:character[], `varying`:logical[], `id`:character[], `type`:character[]>;
type `varying_tbl` <character[], logical[], character, character, logical> => struct<`name`:character[], `varying`:logical[], `id`:character[], `type`:character[]>;
type `xy_form` <struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character>, environment, struct<`verbosity`:integer, `catch`:logical>, ???> => struct<`lvl`:character[], `spec`:struct<`args`:struct<`penalty`:language, `mixture`:language>, `eng_args`:tuple<>, `mode`:character, `method`:struct<`libs`:character, `fit`:struct<`interface`:character, `protect`:character[], `func`:character[], `defaults`:struct<`family`:language>, `args`:struct<`formula`:language, `data`:language, `weights`:language, `family`:language>>, `pred`:struct<`class`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `prob`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `type`:character>>, `raw`:struct<`pre`:null, `post`:null, `func`:character, `args`:struct<`object`:language, `newdata`:symbol>>, `conf_int`:struct<`pre`:null, `post`:any => any, `func`:character, `args`:struct<`object`:language, `newdata`:symbol, `se.fit`:logical, `type`:character>>>>, `engine`:character, `defaults`:struct<`family`:language>>, `fit`:struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`..y`:integer[], `funded_amnt`:integer[], `int_rate`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`funded_amnt`:integer[], `int_rate`:double[], `..y`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, `preproc`:struct<`x_var`:character[], `NA`:null>>;
