type `att.copy.nc` <class<`NetCDF`>, character | double, character | double, class<`NetCDF`>, character | double> => null;
type `att.delete.nc` <class<`NetCDF`>, character, character> => null;
type `att.get.nc` <class<`NetCDF`>, character | integer, character | integer, logical, logical> => (character | double);
type `att.inq.nc` <class<`NetCDF`>, character | integer, character | integer> => list<character | double>;
type `att.put.nc` <class<`NetCDF`>, character, character, character, character | double> => null;
type `att.rename.nc` <class<`NetCDF`>, character, character, character> => null;
type `close.nc` <class<`NetCDF`>, ...> => null;
type `create.nc` <character, logical, logical, logical, character, logical> => class<`NetCDF`>;
type `dim.def.nc` <class<`NetCDF`>, character, double, logical> => integer;
type `dim.inq.nc` <class<`NetCDF`>, character | double> => list<character | double>;
type `dim.rename.nc` <class<`NetCDF`>, character | double, character> => null;
type `file.inq.nc` <class<`NetCDF`>> => list<integer | character>;
type `filter` <character[]> => logical[];
type `fun` <any, any> => null;
type `FUN` <integer> => class<`NetCDF`> | <double[]> => character;
type `grp.def.nc` <class<`NetCDF`>, character> => class<`NetCDF`>;
type `grp.inq.nc` <class<`NetCDF`>, null, logical> => list<any>;
type `grp.rename.nc` <class<`NetCDF`>, character, null> => null;
type `open.nc` <character, logical, logical, logical, ...> => class<`NetCDF`>;
type `print_att` <class<`NetCDF`>, list<character | double>, character, null | list<character | double[] | null>> => null;
type `print_grp` <class<`NetCDF`>, double> => null;
type `print.nc` <class<`NetCDF`>, ...> => null;
type `read.nc` <class<`NetCDF`>, logical, ...> => list<class<`matrix`> | class<`array`> | list<class<`matrix`>>>;
type `sync.nc` <class<`NetCDF`>> => null;
type `type.def.nc` <class<`NetCDF`>, character, character, double | null, null | character, null | character[], null | double[], null | character[], null | list<null | double>> => integer;
type `type.inq.nc` <class<`NetCDF`>, integer | character, logical> => list<character | double | character | double | integer[] | double[] | character[] | list<null | integer>>;
type `utcal.nc` <character, double[] | class<`array`>, character> => (character[] | class<`matrix`> | class<`POSIXct`, `POSIXt`>);
type `utinit.nc` <character> => null;
type `utinvcal.nc` <character, class<`matrix`> | class<`POSIXct`, `POSIXt`> | character | double[]> => double[];
type `var.def.nc` <class<`NetCDF`>, character, character, character[] | double[], null, null, null, logical, null, logical, null, integer[]> => integer;
type `var.get.nc` <class<`NetCDF`>, character | double, null | ^double[], ^double[] | null, double, logical, logical, logical, logical, null, null, null> => (class<`array`> | class<`matrix`> | ^double[]);
type `var.inq.nc` <class<`NetCDF`>, character | double> => list<any>;
type `var.put.nc` <class<`NetCDF`>, character, character[] | class<`array`> | class<`matrix`> | ^double[], ^double[] | null, ^double[] | null, double, logical, null, null, null> => null;
type `var.rename.nc` <class<`NetCDF`>, character | double, character> => null;
