type `Arrows` <double[], double[], double[], double[], double, double, logical, double, double, character, double, any> => null;
type `cart2clock` <double[], double[], double> => class<`data.frame`>;
type `chooseFace` <null, double> => double;
type `clock2cart` <class<`data.frame`> | double[], null | double[], double> => class<`data.frame`>;
type `col2hsv` <character[]> => class<`matrix`>;
type `data.sheet` <list<integer[]>> => class<`matrix`>;
type `draw.leg` <list<double | character | list<integer[] | double | character[]> | double | character | list<integer[] | double | character[] | integer[]>>, logical, null> => class<`frame`, `gDesc`, `gTree`, `grob`>;
type `filter` <character[]> => logical[];
type `fun` <character, character> => class<`DLLInfo`>;
type `FUN` <integer[]> => ^integer[];
type `general.control` <logical, null, null, null, double[], logical, double, double, null, integer[], double, character> => list<any>;
type `getXY` <class<`data.frame`> | class<`matrix`> | double[] | list<integer[]>, null | double[], logical> => class<`data.frame`>;
type `grid.control` <double, null, character, double, double, double, double, null, null, character, double, character[]> => list<list<any>>;
type `hr` <double[], double[], logical> => double[];
type `IDPcolorRamp` <double, class<`data.frame`>, double[]> => character[];
type `is.characterOrExpression` <character[]> => logical;
type `process.key` <double, logical, character, logical, character, logical, logical, double, double, double, double, double> => list<any>;
type `pw` <double[], logical> => double[];
type `pw.ai` <double[], logical> => double[];
type `pw.aw` <double[], logical> => double[];
type `rearrangeUnit` <class<`unit`> | class<`unit`, `unit.list`>, double, class<`unit`, `unit.list`>> => class<`unit`, `unit.list`>;
type `showColors` <character[], double, logical, double[]> => null;
type `Td` <double[], null, null, logical> => double[];
type `Td1` <double[]> => double[];
type `Td.aw` <double[], null, null, logical> => double[];
type `Tf1` <double[]> => double[];
type `Tf.ai` <double[], null, null, logical> => double[];
