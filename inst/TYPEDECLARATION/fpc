type `adcoord` <class<`matrix`>, logical[], double> => list<double[] | class<`matrix`>>;
type `ancoord` <class<`matrix`>, integer[], double, double, character, double, ...> => list<double[] | class<`matrix`>>;
type `awcoord` <class<`matrix`>, integer[], double, character, character, logical, double, double> => list<double[] | class<`matrix`>>;
type `batcoord` <class<`matrix`>, integer[], double, character> => list<double[] | class<`matrix`>>;
type `batvarcoord` <class<`matrix`>, integer[], double> => list<double[] | class<`matrix`>>;
type `bhattacharyya.dist` <double[], double[], class<`matrix`>, class<`matrix`>> => double;
type `bhattacharyya.matrix` <class<`matrix`>, class<`array`>, list<double[]> | character, logical> => class<`matrix`>;
type `calinhara` <class<`data.frame`> | class<`matrix`>, integer[], integer> => double;
type `can` <double, double> => double;
type `cat2bin` <class<`matrix`>, double | integer[]> => (list<class<`matrix`> | list<list<character[] | integer[] | character | double>>> | list<class<`matrix`> | list<list<character | double | character[] | integer[]>>>);
type `cdbw` <class<`matrix`>, double[], double, double[], logical, logical> => list<double>;
type `cgrestandard` <class<`valstat`> | list<double | character[] | list<null | list<double>>>, list<double | list<null | class<`data.frame`>>>, integer[] | double, logical, logical, logical, list<any>> => class<`valstat`>;
type `claraCBI` <class<`matrix`>, double, logical, logical, ...> => list<any>;
type `classifdist` <class<`dist`> | class<`matrix`>, double[], character, any, any> => double[];
type `classifnp` <class<`matrix`>, double[], character, null, any, any> => double[];
type `clucols` <double, null> => character[];
type `clujaccard` <logical[], logical[], double | null> => double;
type `clusexpect` <double, double, double, double> => double;
type `clustatsum` <class<`dist`>, double[], any, any, logical, double, logical, ...> => list<double>;
type `clusterbenchstats` <class<`matrix`> | double[], integer[] | double, logical, logical, character[], character[], logical[], logical[]> => class<`clusterbenchstats`>;
type `clusterboot` <class<`data.frame`> | class<`dist`> | class<`matrix`>, double, logical, character[], logical, logical, double, any> => class<`clboot`>;
type `cluster.magazine` <double[] | class<`matrix`>, double | integer[], logical, logical, character[], logical[], logical[], list<list<any>> | list<null | list<character>>> => list<list<any>>;
type `cluster.stats` <class<`dist`>, integer[], null | integer[], logical, logical, logical, logical, logical> => list<any>;
type `cluster.varstats` <integer[], class<`data.frame`>, class<`data.frame`>, logical, double[], double[], double[], double> => class<`varwisetables`>;
type `cmahal` <double, double, double, double, double, double, double> => double[];
type `con.comp` <class<`matrix`>> => double[];
type `confusion` <class<`matrix`>, double[], double, double, logical> => double;
type `cov.wml` <class<`matrix`>, double[], logical, logical> => list<class<`matrix`> | double[]>;
type `cqcluster.stats` <class<`dist`>, double[], null | integer[], logical, logical, logical, logical, logical> => class<`cquality`>;
type `cvnn` <class<`dist`>, list<double[]>, double> => list<double[]>;
type `dbscan` <class<`dist`> | class<`matrix`>, double, double, logical, character[], logical, logical, null> => class<`dbscan`>;
type `dbscanCBI` <class<`matrix`>, double, double, logical, ...> => list<any>;
type `dipp.tantrum` <double[], double, double> => list<double[]>;
type `diptest.multi` <class<`matrix`>, double[], character, double> => double;
type `discrcoord` <class<`matrix`>, double[], character, ...> => list<double[] | class<`matrix`>>;
type `discrete.recode` <class<`matrix`> | class<`data.frame`>, logical, double[], double[]> => list<class<`matrix`> | double[] | list<character[]>>;
type `discrproj` <class<`matrix`> | class<`data.frame`>, integer[], character, any, logical, any, ...> => list<double[] | class<`matrix`>>;
type `distancefactor` <double, double, null, character, double, double> => double;
type `distcritmulti` <class<`matrix`>, integer[], null, double, character, character, character, logical> => list<double[] | list<integer[]>>;
type `disthclustCBI` <class<`dist`>, double, character, character, double, ...> => list<any>;
type `disthclusttreeCBI` <class<`dist`>, double, character, ...> => list<any>;
type `distnoisemclustCBI` <class<`dist`>, double, null, null, double, null, null, character> => list<any>;
type `distrsimilarity` <class<`matrix`>, double[], logical, character[], double, logical, logical> => list<double[]>;
type `dridgeline` <double[], double, double[], double[], class<`matrix`>, class<`matrix`>, logical, ...> => double[];
type `dudahart2` <class<`data.frame`> | class<`matrix`>, integer[], double> => list<double>;
type `extract.mixturepars` <class<`summary.mclustBIC`>, integer[] | double, logical> => (list<double[] | class<`matrix`> | list<any>> | list<double[] | list<character | integer | class<`matrix`>>> | list<double[] | list<character | class<`matrix`> | double[]>>);
type `findrep` <class<`matrix`>, double[], double[], double, double, integer, integer, double> => list<integer[] | double>;
type `fixmahal` <class<`matrix`> | double[], integer, integer, character, character, null, null, double> => class<`mfpc`>;
type `fixreg` <double[], double[], integer, integer, null, null, double, double> => class<`rfpc`>;
type `flexmixedruns` <class<`matrix`>, logical, logical, double, double, null, double[], double> => list<any>;
type `fpclusters` <class<`mfpc`>, ...> => list<double[]>;
type `fpclusters.mfpc` <class<`mfpc`>, any, any, any, ...> => list<double[]>;
type `fpmi` <class<`matrix`>, integer, any, double[], double, double, character, character> => (list<double[] | class<`matrix`> | character> | list<class<`matrix`> | double[] | character>);
type `hclusttreeCBI` <class<`matrix`>, double, character, logical, ...> => list<any>;
type `itnumber` <double, double, double, double, double, double> => double;
type `jittervar` <class<`matrix`>, integer[], double> => class<`matrix`>;
type `kmeansCBI` <class<`matrix`>, double, null, logical, double, character, ...> => list<any>;
type `kmeansruns` <class<`matrix`>, double | integer[], character, double, double, logical, double, logical> => class<`kmeans`>;
type `lcmixed` <class<`formula`>, any, any, any, any, logical, logical> => class<`FLXMC`>;
type `localshape` <class<`data.frame`>, double, character, double, character> => class<`matrix`>;
type `mahalanodisc` <class<`matrix`>, double[], class<`matrix`>, character> => double[];
type `mahalanofix` <class<`matrix`>, any, integer, double[], double, character> => list<double[] | class<`matrix`>>;
type `mahalanofuz` <class<`matrix`>, any, any, double[], double> => list<double[] | class<`matrix`>>;
type `mahalCBI` <class<`matrix`>, double, ...> => list<any>;
type `mahalconf` <class<`matrix`>, integer, double, class<`matrix`>, character> => logical[];
type `mergenormals` <any, class<`summary.mclustBIC`>, any, any, any, any, any, character> => class<`mergenorm`>;
type `mergenormCBI` <class<`matrix`>, double, null, character, double, null, null, character> => list<any>;
type `mergeparameters` <class<`data.frame`> | class<`matrix`>, double, double, double[], class<`matrix`>, class<`array`>, class<`matrix`>> => list<double[] | class<`matrix`> | class<`array`>>;
type `minsize` <double, double, double, double, double> => double;
type `mixdens` <character, class<`matrix`> | class<`data.frame`>, list<any>> => double[];
type `mixpredictive` <class<`data.frame`>, double, double, double, ...> => list<double[]>;
type `mvdcoord` <class<`matrix`>, integer[], double, character, ...> => list<double[] | class<`matrix`>>;
type `ncoord` <class<`matrix`>, integer[], double, logical, character, logical, double, ...> => list<double[] | class<`matrix`>>;
type `neginc` <class<`matrix`>, double[]> => double;
type `noisemclustCBI` <class<`matrix`>, integer[], null, null, double, null, null, logical> => list<any>;
type `nselectboot` <class<`dist`> | class<`matrix`>, double, logical, class<`function`>, character, integer[], logical, double> => list<^double[] | class<`matrix`>>;
type `pamk` <class<`matrix`> | class<`dist`>, integer[], character, logical, logical, double, logical, logical> => (list<class<`clara`, `partition`> | double[]> | list<class<`pam`, `partition`> | double[]>);
type `piridge` <double[], double[], double[], class<`matrix`>, class<`matrix`>, logical> => double[];
type `piridge.zeroes` <double, double[], double[], class<`matrix`>, class<`matrix`>, double, double, double> => list<double[]>;
type `plot.clboot` <class<`clboot`>, double[], double[], ...> => null;
type `plotcluster` <class<`matrix`>, integer[], double | null, character, logical, logical, double, logical> => null;
type `plot.dbscan` <class<`dbscan`>, class<`matrix`>, ...> => null;
type `plot.mfpc` <class<`mfpc`>, class<`matrix`>, double, logical, character[], null, null, null> => null;
type `plot.valstat` <class<`valstat`>, list<double | list<null | class<`data.frame`>>>, character, null, double[], double, integer[], double> => null;
type `predict.dbscan` <class<`dbscan`>, class<`matrix`>, class<`matrix`>, double, ...> => double[];
type `prediction.strength` <class<`data.frame`> | class<`dist`> | class<`matrix`>, double, double, double, class<`function`>, character, double, double> => class<`predstr`>;
type `print.clboot` <class<`clboot`>, character[], ...> => class<`clboot`>;
type `print.clusterbenchstats` <class<`clusterbenchstats`>, ...> => null;
type `print.valstat` <class<`valstat`>, character[], double, logical, double[], double, list<double[]> | null, ...> => class<`data.frame`>;
type `print.varwisetables` <class<`varwisetables`>, double, ...> => class<`varwisetables`>;
type `randcmatrix` <double, double, double> => class<`matrix`>;
type `randconf` <double, double> => logical[];
type `randomclustersim` <class<`dist`>, any, logical, integer[] | double, double, double, double, double> => list<double | list<null | class<`data.frame`>>>;
type `rFace` <double, double, double, double, double, double> => class<`matrix`>;
type `rfpi` <double[], double[], integer, logical[], double, double, logical> => list<double[]>;
type `ridgeline` <double, double[], double[], class<`matrix`>, class<`matrix`>> => class<`matrix`>;
type `ridgeline.diagnosis` <double[], class<`matrix`>, class<`array`>, double, character | list<integer[]>, logical, double, null | double> => (list<double[] | class<`matrix`>> | list<double[] | class<`matrix`> | null>);
type `simmatrix` <class<`mfpc`> | class<`rfpc`>> => double[];
type `solvecov` <class<`matrix`>, any> => list<class<`matrix`> | logical>;
type `sseg` <double, double> => double;
type `stupidkaven` <class<`dist`>, double> => double[];
type `stupidkcentroids` <class<`dist`>, double> => double[];
type `stupidkfn` <class<`dist`>, double> => double[];
type `stupidknn` <any, double> => any;
type `summary.cquality` <class<`cquality`>, logical, logical, ...> => class<`summary.cquality`>;
type `summary.mergenorm` <class<`mergenorm`>, ...> => class<`summary.mergenorm`>;
type `summary.mfpc` <class<`mfpc`>, ...> => class<`summary.mfpc`>;
type `summary.rfpc` <class<`rfpc`>, ...> => class<`summary.rfpc`>;
type `tclustCBI` <class<`matrix`>, double, double, ...> => list<any>;
type `tdecomp` <class<`matrix`>> => class<`matrix`>;
type `unimodal.ind` <double[]> => logical;
type `weightplots` <class<`matrix`>, integer[], double, character[] | integer[], double[], double, character | double[], double> => class<`matrix`>;
type `wfu` <double[], double, double, double, double> => double[];
type `xtable` <double[], double[], double> => class<`matrix`>;
type `zmisclassification.matrix` <class<`matrix`>, null | double[], null | double[], character | list<integer[]>, logical, character> => class<`matrix`>;
