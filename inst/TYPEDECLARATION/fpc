type `@` <language | ^double[], ^double[], double[]> => double[];
type `adcoord` <^double[], logical[], double> => struct<`ev`:double[], `units`:^double[], `proj`:^double[]>;
type `ancoord` <^double[], logical[], double, double, character, double, ???> => struct<`ev`:double[], `units`:^double[], `proj`:^double[], `nn`:double>;
type `awcoord` <^double[], integer[], double, character, character, logical, double, double, double, ???> => struct<`ev`:double[], `units`:^double[], `proj`:^double[], `wg`:double[]>;
type `batcoord` <^double[], logical[], double, character> => struct<`ev`:double[], `rev`:double[], `units`:^double[], `proj`:^double[]>;
type `batvarcoord` <^double[], integer[], double> => struct<`ev`:double[], `rev`:double[], `units`:^double[], `proj`:^double[], `W`:^double[], `S1`:^double[], `S2`:^double[]>;
type `bhattacharyya.matrix` <^double[], double[], tuple<double[], double[]>, logical> => ^double[];
type `calinhara` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]> | ^double[], integer[], integer> => double;
type `can` <double, double> => double;
type `cat2bin` <^double[], integer[]> => struct<`data`:^double[], `variableinfo`:tuple<struct<`type`:character, `varnum`:double>, struct<`type`:character, `varnum`:double>, struct<`type`:character, `levels`:character[], `ncat`:integer, `varnum`:integer[]>, struct<`type`:character, `levels`:character[], `ncat`:integer, `varnum`:integer[]>>>;
type `cdbw` <^double[], double[], double, double[], logical, logical> => struct<`cdbw`:double, `cohesion`:double, `compactness`:double, `sep`:double>;
type `cgrestandard` <struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, `maxG`:double, `minG`:double, `method`:character[], `name`:character[]>, struct<`km`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nn`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nnruns`:double, `kmruns`:double>, integer[], logical, logical, logical, tuple<>> => struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:double, `minG`:double, `method`:character[], `name`:character[]>;
type `choose2` <double[] | ^integer[]> => double[];
type `claraCBI` <^double[], double, logical, logical, ???> => struct<`result`:struct<`medoids`:^double[], `id.med`:integer[], `clustering`:integer[], `objective`:double[], `isolation`:integer[], `clusinfo`:^double[], `silinfo`:struct<`widths`:^double[], `clus.avg.widths`:double[], `avg.width`:double>, `diss`:double[], `call`:language, `data`:^double[]>, `nc`:double, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character>;
type `classifdist` <double[], double[], character, ? double[], double> => double[];
type `classifnp` <^double[], double[], character, null, null, double> => double[];
type `clucols` <double, null> => character[];
type `clujaccard` <logical[], logical[], ? double> => double;
type `clusexpect` <double, double, double, double> => double;
type `clustatsum` <double[], integer[], language | logical, ? symbol, logical, double, logical, double | ???> => struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>;
type `cluster.magazine` <^double[], integer[], logical, logical, character[], logical[], logical[], tuple<null, struct<`method`:character>, struct<`method`:character>>, logical> => struct<`output`:tuple<tuple<null, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>>, `clustering`:tuple<tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>>, `noise`:tuple<tuple<null, logical, logical>, tuple<null, logical, logical>, tuple<null, logical, logical>>, `othernc`:tuple<>>;
type `cluster.stats` <double[], integer[], integer[], logical, logical, logical, logical, logical, logical, double, logical, logical, logical> => struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:double[], `average.distance`:double[], `median.distance`:double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `average.between`:double, `average.within`:double, `n.between`:integer, `n.within`:integer, `max.diameter`:double, `min.separation`:double, `within.cluster.ss`:double, `clus.avg.silwidths`:double[], `avg.silwidth`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:double, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `sindex`:double, `corrected.rand`:double, `vi`:double>;
type `cluster.varstats` <integer[], struct<`Type`:integer[], `Price`:double[], `MPG.highway`:integer[], `DriveTrain`:integer[]>, struct<`Price`:double[], `MPG.highway`:integer[]>, logical, double[], double[], double[], double, logical, character, double, logical, double> => tuple<^double[], ^double[], ^double[], ^double[]>;
type `clusterbenchstats` <^double[], integer[], logical, logical, character[], character[], logical[], logical[], tuple<null, struct<`method`:character>, struct<`method`:character>>, logical, logical, logical, double, double, double, double, logical, language, logical> => struct<`cm`:struct<`output`:tuple<tuple<null, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>>, `clustering`:tuple<tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>>, `noise`:tuple<tuple<null, logical, logical>, tuple<null, logical, logical>, tuple<null, logical, logical>>, `othernc`:tuple<>>, `stat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>, `sim`:struct<`km`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nn`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nnruns`:double, `kmruns`:double>, `qstat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>, `sstat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>>;
type `clusterboot` <^double[] | struct<>, double, logical, character[], logical, logical, double, double[] | language, language | double, any => any, logical, logical, logical, double, double, ? double, logical, double> => struct<`result`:struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:integer>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character[], `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:^double[], `jittermean`:double[], `jitterbrd`:integer[], `jitterrecover`:integer[], `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:^double[], `noisemean`:double[], `noisebrd`:integer[], `noiserecover`:integer[]> | struct<`result`:struct<`result`:struct<`medoids`:^integer[], `id.med`:integer[], `clustering`:integer[], `objective`:double[], `isolation`:integer[], `clusinfo`:^double[], `silinfo`:struct<`widths`:^double[], `clus.avg.widths`:double[], `avg.width`:double>, `diss`:double[], `call`:language, `data`:^double[]>, `nc`:double, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:double>, `partition`:integer[], `nc`:double, `nccl`:double, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null> | struct<`result`:struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:character[], `method`:character, `call`:language, `dist.method`:null>, `noise`:logical, `nc`:integer, `nccl`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:null, `bootmean`:null, `bootbrd`:null, `bootrecover`:null, `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:^double[], `subsetmean`:double[], `subsetbrd`:integer[], `subsetrecover`:integer[], `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null>;
type `clustermethod` <struct<`d1`:integer[], `d2`:integer[]> | ^double[], double, ? logical | character, logical | character, ??? | double, ??? | character, ???> => struct<`result`:struct<`medoids`:^integer[], `id.med`:integer[], `clustering`:integer[], `objective`:double[], `isolation`:integer[], `clusinfo`:^double[], `silinfo`:struct<`widths`:^double[], `clus.avg.widths`:double[], `avg.width`:double>, `diss`:double[], `call`:language, `data`:^double[]>, `nc`:double, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character> | struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:character[], `method`:character, `call`:language, `dist.method`:null>, `noise`:logical, `nc`:integer, `nccl`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character> | struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character>;
type `cmahal` <double, double, double, double, double, double, double> => double[];
type `con.comp` <^logical[]> => double[];
type `confusion` <^double[], double[], double, double, logical> => double;
type `cov.wml` <^double[], double[], logical, logical> => struct<`cov`:^double[], `center`:double[], `n.obs`:integer, `wt`:double[]>;
type `cqcluster.stats` <double[], double[], ? integer[], logical, logical, logical, logical, logical, logical, double, logical, logical, logical, logical, logical, double, logical, double, character> => struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:double[], `average.distance`:double[], `median.distance`:double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:double, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], ^integer[]>, `pclosetomode`:tuple<integer[], integer[]>, `distto`:tuple<^double[], ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], null, ^integer[]>, `pclosetomode`:tuple<integer[], integer, integer[]>, `distto`:tuple<^double[], null, ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<null, ^integer[], ^integer[]>, `pclosetomode`:tuple<integer, integer[], integer[]>, `distto`:tuple<null, ^double[], ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:double[], `average.distance`:double[], `median.distance`:double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:double, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:double, `vi`:double, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], ^integer[], ^integer[]>, `pclosetomode`:tuple<integer[], integer[], integer[]>, `distto`:tuple<^double[], ^double[], ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:double[]> | struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], null>, `pclosetomode`:tuple<integer[], integer>, `distto`:tuple<^double[], null>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], ^integer[], null>, `pclosetomode`:tuple<integer[], integer[], integer>, `distto`:tuple<^double[], ^double[], null>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]>;
type `cvnn` <double[], tuple<double[], integer[]>, double> => struct<`cvnnindex`:double[], `sep`:double[], `comp`:double[]>;
type `cweight` <double, double> => double;
type `discrcoord` <^double[], integer[], character, ???> => struct<`ev`:double[], `units`:^double[], `proj`:^double[], `W`:^double[]>;
type `discrete.recode` <struct<`Type`:integer[], `Price`:double[], `MPG.highway`:integer[], `DriveTrain`:integer[]>, logical, double[], double[]> => struct<`data`:^double[], `ppdim`:double[], `discretelevels`:tuple<character[], character[]>, `continuous`:integer, `discrete`:integer>;
type `discrproj` <struct<`Price`:double[], `MPG.highway`:integer[]>, integer[], character, double, logical, double, ???> => struct<`ev`:double[], `units`:^double[], `proj`:^double[], `wg`:double[]>;
type `filter` <character[]> => logical[];
type `findrep` <^double[], double[], double[], integer, double, integer, integer, double> => struct<`repc`:integer[], `repx`:integer[], `maxr`:double, `wvar`:double>;
type `FUN` <double[], double, character> => tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>> | double | struct<>;
type `kmeansCBI` <^double[], double, null, logical, double, character, ???> => struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character>;
type `kmeansruns` <^double[], double, character, double, double, logical, double, logical, logical, ???> => struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>;
type `lcmixed` <double, double, language, logical, logical, logical> => language;
type `lweight` <double[], double> => double[];
type `mahalanodisc` <^double[], double[], ^double[], character> => double[];
type `plot.clboot` <struct<`result`:struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:integer>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character[], `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:^double[], `jittermean`:double[], `jitterbrd`:integer[], `jitterrecover`:integer[], `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:^double[], `noisemean`:double[], `noisebrd`:integer[], `noiserecover`:integer[]>, double[], double[], ???> => null;
type `print.clboot` <struct<`result`:struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:integer>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character[], `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:^double[], `jittermean`:double[], `jitterbrd`:integer[], `jitterrecover`:integer[], `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:^double[], `noisemean`:double[], `noisebrd`:integer[], `noiserecover`:integer[]> | struct<`result`:struct<`result`:struct<`medoids`:^integer[], `id.med`:integer[], `clustering`:integer[], `objective`:double[], `isolation`:integer[], `clusinfo`:^double[], `silinfo`:struct<`widths`:^double[], `clus.avg.widths`:double[], `avg.width`:double>, `diss`:double[], `call`:language, `data`:^double[]>, `nc`:double, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:double>, `partition`:integer[], `nc`:double, `nccl`:double, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null> | struct<`result`:struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:character[], `method`:character, `call`:language, `dist.method`:null>, `noise`:logical, `nc`:integer, `nccl`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:null, `bootmean`:null, `bootbrd`:null, `bootrecover`:null, `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:^double[], `subsetmean`:double[], `subsetbrd`:integer[], `subsetrecover`:integer[], `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null>, character[], ???> => struct<`result`:struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:integer>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character[], `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:^double[], `jittermean`:double[], `jitterbrd`:integer[], `jitterrecover`:integer[], `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:^double[], `noisemean`:double[], `noisebrd`:integer[], `noiserecover`:integer[]> | struct<`result`:struct<`result`:struct<`medoids`:^integer[], `id.med`:integer[], `clustering`:integer[], `objective`:double[], `isolation`:integer[], `clusinfo`:^double[], `silinfo`:struct<`widths`:^double[], `clus.avg.widths`:double[], `avg.width`:double>, `diss`:double[], `call`:language, `data`:^double[]>, `nc`:double, `clusterlist`:tuple<logical[], logical[]>, `partition`:integer[], `clustermethod`:character, `nccl`:double>, `partition`:integer[], `nc`:double, `nccl`:double, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:^double[], `bootmean`:double[], `bootbrd`:integer[], `bootrecover`:integer[], `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:null, `subsetmean`:null, `subsetbrd`:null, `subsetrecover`:null, `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null> | struct<`result`:struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:character[], `method`:character, `call`:language, `dist.method`:null>, `noise`:logical, `nc`:integer, `nccl`:integer, `clusterlist`:tuple<logical[], logical[], logical[], logical[], logical[]>, `partition`:integer[], `clustermethod`:character>, `partition`:integer[], `nc`:integer, `nccl`:integer, `clustermethod`:character, `B`:double, `noisemethod`:logical, `bootmethod`:character, `multipleboot`:logical, `dissolution`:double, `recover`:double, `bootresult`:null, `bootmean`:null, `bootbrd`:null, `bootrecover`:null, `jitterresult`:null, `jittermean`:null, `jitterbrd`:null, `jitterrecover`:null, `subsetresult`:^double[], `subsetmean`:double[], `subsetbrd`:integer[], `subsetrecover`:integer[], `bojitresult`:null, `bojitmean`:null, `bojitbrd`:null, `bojitrecover`:null, `noiseresult`:null, `noisemean`:null, `noisebrd`:null, `noiserecover`:null>;
type `print.clusterbenchstats` <struct<`cm`:struct<`output`:tuple<tuple<null, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer, `crit`:double[], `bestk`:integer>, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>, tuple<null, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>, struct<`result`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `noise`:logical, `nc`:integer, `partition`:integer[], `clustermethod`:character>>>, `clustering`:tuple<tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>, tuple<null, integer[], integer[]>>, `noise`:tuple<tuple<null, logical, logical>, tuple<null, logical, logical>, tuple<null, logical, logical>>, `othernc`:tuple<>>, `stat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>, `sim`:struct<`km`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nn`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nnruns`:double, `kmruns`:double>, `qstat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>, `sstat`:struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>>, ???> => null;
type `print.valstat` <struct<``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, ``:tuple<null, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>, struct<`avewithin`:double, `mnnd`:double, `cvnnd`:double, `maxdiameter`:double, `widestgap`:double, `sindex`:double, `minsep`:double, `asw`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `pearsongamma`:double, `withinss`:double, `entropy`:double, `pamc`:double, `dmode`:double>>, `maxG`:integer, `minG`:integer, `method`:character[], `name`:character[], `statistics`:character[]>, character[], double, logical, double[], double, null, ???> => struct<`method`:integer[], `2`:double[], `3`:double[]>;
type `print.varwisetables` <tuple<^double[], ^double[], ^double[], ^double[]>, double, ???> => tuple<^double[], ^double[], ^double[], ^double[]>;
type `qstan` <double[], double[], integer> => double[];
type `randomclustersim` <double[], ? symbol, logical, integer[], double, double, double, double | symbol, logical, logical, language | symbol, logical> => struct<`km`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nn`:tuple<null, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>, struct<`avewithin`:double[], `mnnd`:double[], `cvnnd`:double[], `maxdiameter`:double[], `widestgap`:double[], `sindex`:double[], `minsep`:double[], `asw`:double[], `dindex`:double[], `denscut`:double[], `highdgap`:double[], `pearsongamma`:double[], `withinss`:double[], `entropy`:double[], `pamc`:double[]>>, `nnruns`:double, `kmruns`:double>;
type `rFace` <double, double, double, double, double, double> => ^double[];
type `sdstan` <double[], double[]> => double[];
type `solvecov` <^double[], double> => struct<`inv`:^double[], `coll`:logical>;
type `stupidkcentroids` <double[], integer> => double[];
type `stupidknn` <double[], integer> => double[];
type `summary.cquality` <struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:double[], `average.distance`:double[], `median.distance`:double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:double, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], ^integer[]>, `pclosetomode`:tuple<integer[], integer[]>, `distto`:tuple<^double[], ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], null, ^integer[]>, `pclosetomode`:tuple<integer[], integer, integer[]>, `distto`:tuple<^double[], null, ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:double, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<null, ^integer[], ^integer[]>, `pclosetomode`:tuple<integer, integer[], integer[]>, `distto`:tuple<null, ^double[], ^double[]>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], null>, `pclosetomode`:tuple<integer[], integer>, `distto`:tuple<^double[], null>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]> | struct<`n`:integer, `cluster.number`:integer, `cluster.size`:double[], `min.cluster.size`:double, `noisen`:double, `diameter`:^double[], `average.distance`:^double[], `median.distance`:^double[], `separation`:double[], `average.toother`:double[], `separation.matrix`:^double[], `ave.between.matrix`:^double[], `avebetween`:double, `avewithin`:double, `n.between`:integer, `n.within`:integer, `maxdiameter`:double, `minsep`:double, `withinss`:double, `clus.avg.silwidths`:double[], `asw`:double, `g2`:null, `g3`:null, `pearsongamma`:double, `dunn`:double, `dunn2`:null, `entropy`:double, `wb.ratio`:double, `ch`:double, `cwidegap`:double[], `widestgap`:double, `corrected.rand`:null, `vi`:null, `sindex`:double, `svec`:double[], `psep`:double[], `stan`:double, `nnk`:double, `mnnd`:double, `pamc`:double, `pamcentroids`:double[], `dindex`:double, `denscut`:double, `highdgap`:double, `npenalty`:double[], `dpenalty`:double[], `withindensp`:double[], `densoc`:double[], `pdistto`:tuple<^integer[], ^integer[], null>, `pclosetomode`:tuple<integer[], integer[], integer>, `distto`:tuple<^double[], ^double[], null>, `percwdens`:double[], `percdensoc`:double[], `parsimony`:double, `cvnnd`:double, `cvnndc`:^double[]>, logical, logical, ???> => struct<`avewithin`:double, `nnk`:double, `mnnd`:double, `asw`:double, `widestgap`:double, `sindex`:double, `pearsongamma`:double, `entropy`:double, `pamc`:double, `withinss`:double, `dindex`:double, `denscut`:double, `highdgap`:double, `parsimony`:double, `maxdiameter`:double, `minsep`:double, `cvnnd`:double>;
type `tdecomp` <^double[]> => ^double[];
