type `filter` <character[]> => logical[];
type `fun` <symbol, symbol> => null;
type `FUN` <integer> => integer;
type `LinearInit` <double, double> => ^double[];
type `som` <^double[], double, double, character, null, character, character, character, null, null, double, null> => struct<`data`:^double[], `code`:^double[], `visual`:struct<`x`:double[], `y`:double[], `qerror`:double[]>, `qerror`:double, `init`:character, `alpha`:character, `neigh`:character, `topol`:character, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `xdim`:double, `ydim`:double, `err.radius`:double, `inv.alp.c`:double[], `code.sum`:struct<`x`:double[], `y`:double[], `nobs`:integer[]>>;
type `som.init` <^double[], double, double, character> => ^double[];
type `somsum` <struct<`data`:^double[], `code`:^double[], `visual`:struct<`x`:double[], `y`:double[], `qerror`:double[]>, `qerror`:double, `init`:character, `alpha`:character, `neigh`:character, `topol`:character, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `xdim`:double, `ydim`:double, `err.radius`:double, `inv.alp.c`:double[]>> => struct<`x`:double[], `y`:double[], `nobs`:integer[]>;
type `ciplot` <double[], double[], double[], double, double, double[]> => null;
type `filtering` <struct<`zero`:integer[], `ten`:integer[], `twenty`:integer[], `thirty`:integer[], `fourty`:integer[], `fifty`:integer[], `sixty`:integer[], `seventy`:integer[], `eighty`:integer[], `hundred`:integer[], `one.ten`:integer[], `one.twenty`:integer[], `one.thirty`:integer[], `one.fourty`:integer[], `one.fifty`:integer[], `one.sixty`:integer[]>, double, double, double, double> => ^double[];
type `inrange` <double[], double[]> => logical[];
type `normalize` <^double[], logical> => ^double[];
type `plot.som` <struct<`data`:^double[], `code`:^double[], `visual`:struct<`x`:double[], `y`:double[], `qerror`:double[]>, `qerror`:double, `init`:character, `alpha`:character, `neigh`:character, `topol`:character, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `xdim`:double, `ydim`:double, `err.radius`:double, `inv.alp.c`:double[], `code.sum`:struct<`x`:double[], `y`:double[], `nobs`:integer[]>>, double, double[], logical, double, double, character, character, null> => null;
type `plotcell` <double, integer, ^double[], double[], integer, double, double[], double> => null;
type `qerror` <struct<`data`:^double[], `code`:^double[], `visual`:struct<`x`:double[], `y`:double[], `qerror`:double[]>, `qerror`:double, `init`:character, `alpha`:character, `neigh`:character, `topol`:character, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `xdim`:double, `ydim`:double, `err.radius`:double, `inv.alp.c`:double[], `code.sum`:struct<`x`:double[], `y`:double[], `nobs`:integer[]>>, double> => double;
type `som.par` <struct<`data`:^double[], `code`:^double[], `visual`:struct<`x`:double[], `y`:double[], `qerror`:double[]>, `qerror`:double, `init`:character, `alpha`:character, `neigh`:character, `topol`:character, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `xdim`:double, `ydim`:double, `err.radius`:double, `inv.alp.c`:double[], `code.sum`:struct<`x`:double[], `y`:double[], `nobs`:integer[]>>> => struct<`alpha`:integer, `neigh`:integer, `topol`:integer, `alpha0`:double[], `radius0`:double[], `rlen`:double[], `err.radius`:double, `xdim`:double, `ydim`:double, `inv.alp.c`:double>;
type `somgrids` <double, double, logical, double, logical, double, double[]> => null;
