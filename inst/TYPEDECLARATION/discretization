type `ameva` <class<`matrix`> | class<`table`>> => double;
type `cacc` <class<`matrix`> | class<`table`>> => double;
type `caim` <class<`matrix`> | class<`table`>> => double;
type `chi2` <class<`data.frame`>, double, double> => list<class<`data.frame`> | list<double[]>>;
type `chiM` <class<`data.frame`>, double> => list<class<`data.frame`> | list<double[]>>;
type `chiSq` <class<`matrix`> | class<`table`>> => double;
type `cutIndex` <double[], class<`factor`>> => double[];
type `cutPoints` <double[], class<`factor`>> => double[];
type `disc.Topdown` <class<`data.frame`>, double> => list<class<`array`> | class<`data.frame`>>;
type `ent` <class<`factor`>> => double;
type `extendChi2` <class<`data.frame`>, double> => list<class<`data.frame`> | list<double[]>>;
type `filter` <character[]> => logical[];
type `findBest` <double[], integer[], double[], double[], double> => list<double[]>;
type `gr` <double, double, any> => (double[] | null);
type `incon` <class<`data.frame`>> => double;
type `insert` <double, double[]> => double[];
type `LevCon` <class<`data.frame`>> => double;
type `mdlp` <class<`data.frame`>> => list<class<`data.frame`> | list<double[]>>;
type `mdlStop` <double, class<`factor`>, double> => (double | null);
type `modChi2` <class<`data.frame`>, double> => list<class<`data.frame`> | list<double[]>>;
type `mylog` <class<`table`> | double> => (class<`table`> | double);
type `part` <double, double, integer[] | null, any> => integer[];
type `topdown` <class<`data.frame`>, double> => class<`array`>;
type `value` <double, class<`data.frame`>, double> => list<double[] | class<`data.frame`> | double | class<`data.frame`>>;
type `Xi` <class<`data.frame`>> => double;
