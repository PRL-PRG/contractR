type `.checkEstClassForParamFamily` < > => any => any;
type `.csimpsum` <double[]> => double[];
type `.deleteDim` <double[]> => double[];
type `.deleteItemsMCL` <struct<`x`:double[], `y`:double[], `xlab`:character, `ylab`:character> | struct<`x`:language, `y`:language, `xlab`:character, `ylab`:character, `main`:character>> => struct<`x`:double[], `y`:double[], `xlab`:character, `ylab`:character> | struct<`x`:language, `y`:language, `xlab`:character, `ylab`:character, `main`:character>;
type `.di1` <double[]> => double[];
type `.di2` <double[]> => double[];
type `.inArgs` <character, any => any> => logical;
type `.isEqual` <double, double, double> => logical;
type `.isReplicated` <double[], double> => logical[];
type `.isUnitMatrix` <^double[]> => logical;
type `.List` <tuple<character, character, character> | expression> => tuple<character, character, character> | tuple<expression>;
type `.local` <symbol | struct<`estimate`:double[], `sd`:double[], `vcov`:^double[], `loglik`:double, `n`:integer>, symbol | double | integer[], ??? | character | language | double, double, ??? | double, double, logical, ???> => ? struct<`fct`:any => any, `mat`:^double[]> | tuple<> | ^double[] | struct<`show.details`:character>;
type `.makeLenAndOrder` <? character | double, integer[]> => character[] | double[] | ^logical[];
type `.mpresubs` <character> => expression;
type `.toForMat` <^double[]> => ^character[];
type `[[` <double[]> => double[];
type `@` <double[] | symbol> => ^double[];
type `addAlphTrsp2col` <character | double, double> => character;
type `alp.f` <character[], language | symbol> => character[];
type `asBias` <null, null> => null;
type `asCov` <null, null> => null;
type `asHampel` < > => double;
type `asMethod` <logical> => character;
type `asMSE` <null, null> => null;
type `asSemivar` < > => double;
type `asUnOvShoot` < > => double;
type `asvar` < > => ^double[];
type `asymmetricBias` <double[]> => character;
type `call.estimate` < > => language;
type `checkL2deriv` <???> => struct<`maximum.deviation`:double, `cent`:double[], `consist`:^double[], `condition`:double>;
type `confint` <struct<`estimate`:double[], `sd`:double[], `vcov`:^double[], `loglik`:double, `n`:integer>, ???, double | ???> => ^double[];
type `criterion` < > => double;
type `Delta.0` <double[]> => double[];
type `dimension` < > => integer;
type `distance` <double[], ???> => double;
type `distribution` <null, null> => null;
type `distrModMASK` <null> => null;
type `distrModoptions` <character> => struct<`show.details`:character>;
type `distrModOptions` <character> => struct<`show.details`:character>;
type `E` <???, ??? | logical> => ^double[];
type `estimate` < > => double[];
type `estimate.call` < > => language;
type `EvenSymmetric` < > => double;
type `existsPIC` <???> => logical;
type `f` <double[]> => double[];
type `f1` <double[]> => double[];
type `f2` <double> => double;
type `fct` < > => any => any;
type `fiBias` <null, null> => null;
type `fiCov` <null, null> => null;
type `fiHampel` < > => double;
type `filter` <character[]> => logical[];
type `fiMSE` <null, null> => null;
type `FisherInfo` <???> => ^double[];
type `FisherInfo.fct` <symbol> => ^double[];
type `fiUnOvShoot` < > => double;
type `fixed` <???> => ? double;
type `fixed.estimate` <???> => null;
type `format.perc` <double[], double> => character[];
type `fqx` <double[]> => double[];
type `fun` <symbol | character, symbol> => null;
type `FUN` <character | double> => expression | character | double;
type `FunSymmList` < > => tuple<>;
type `getdistrModOption` <character> => character;
type `getMethod` <symbol, double[]> => ? logical;
type `InfoNorm` <null, null> => null;
type `isKerAinKerB` <^double[], ^double[], double> => logical;
type `L2deriv` <???> => tuple<>;
type `L2derivDistr` < > => tuple<>;
type `length` <???> => integer;
type `locscalename` < > => character[];
type `LogDeriv` <double[] | language> => double[] | any => any;
type `main` < > => double[];
type `makeOKPar` <double[], ???> => double[] | any => any;
type `mceCalc` <double[], any => any> => struct<`estimate`:double[], `criterion`:double, `param`:null, `crit.fct`:any => any, `method`:character, `crit.name`:character, `Infos`:null, `samplesize`:integer, `warns`:character[], `startPar`:double[], `optReturn`:struct<`par`:double[], `value`:double, `counts`:^integer[], `convergence`:integer, `message`:null>>;
type `minuslogl` <double, double> => double;
type `mO` <double[]> => double[];
type `modifyModel` < > => logical | ???;
type `myint` <any => any, ???, logical> => double;
type `name` < > => character;
type `name.estimate` < > => character;
type `negativeBias` < > => character;
type `NonSymmetric` <null, null> => null;
type `NormType` <any => any> => character;
type `nu` < > => double[];
type `nu<-` < > => double[];
type `nuisance` < > => ? double;
type `nuisance.estimate` < > => null;
type `OddSymmetric` < > => double;
type `param` <null, null> => null;
type `phi` <double[]> => double[];
type `plot` <???, ??? | logical> => struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:null, `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression, expression>, `panelLast`:tuple<expression, expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `ngrid`:double, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:logical, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `dplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `pplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `qplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `xlim`:double[], `ylim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mfrow`:double[], `mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[]>, `L2derivPlotTitle`:tuple<struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<null>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:null, `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression, expression, expression>, `panelLast`:tuple<expression, expression, expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `ngrid`:double, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:logical, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `dplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `pplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `qplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `xlim`:double[], `ylim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mfrow`:double[], `mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>, struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[], double[]>, `L2derivPlotTitle`:tuple<struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>, struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<null, null>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:null, `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression, expression>, `panelLast`:tuple<expression, expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:logical, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.hor`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `dplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `pch`:double, `ylim`:double[], `xlim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>, `points`:struct<`x`:double[], `y`:double[], `pch`:double, `cex`:double, `col`:character>>, `pplot`:struct<`plot`:struct<`x`:any => any, `main`:character, `verticals`:logical, `do.points`:logical, `ylim`:double[], `ylab`:character, `xlab`:character, `col.hor`:character, `col.vert`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `points.u`:struct<`x`:double[], `y`:double[], `pch`:double, `cex`:double, `col`:character>, `points.a`:struct<`x`:double[], `y`:double[], `pch`:double, `cex`:double, `col`:character>, `title`:expression, `points`:struct<`x`:double[], `y`:double[], `pch`:double, `cex`:double, `col`:character>>, `qplot`:struct<`plot`:struct<`x`:any => any, `main`:character, `xlim`:double[], `ylim`:double[], `ylab`:character, `xlab`:character, `verticals`:logical, `do.points`:logical, `cex.points`:double, `pch`:double, `col.points`:character, `col.hor`:character, `col.vert`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:expression, `lines`:struct<`x`:double[], `y`:double[], `col`:character>, `points.u`:struct<`x`:double[], `y`:double[], `pch`:double, `cex`:double, `col`:character>, `points.a`:struct<`x`:double, `y`:double, `pch`:double, `cex`:double, `col`:character>, `vlines`:struct<`x`:double[], `y`:double[], `col`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mfrow`:double[], `mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[]>, `L2derivPlotTitle`:tuple<struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<struct<``:double[], ``:double[], `lty`:character, `panel.first`:expression, `panel.last`:expression>>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:character[], `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:null, `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression, expression, expression>, `panelLast`:tuple<expression, expression, expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `ngrid`:double, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:tuple<expression, expression, expression>, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `dplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `pplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `qplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `xlim`:double[], `ylim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:tuple<expression, expression, expression>, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>, struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[], double[]>, `L2derivPlotTitle`:tuple<struct<`main`:tuple<expression>, `line`:null, `cex.main`:double, `col.main`:character>, struct<`main`:tuple<expression>, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<null, null>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:tuple<character, character, character>, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:character[], `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `ngrid`:double, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:tuple<expression, expression>, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression>, `panelLast`:tuple<expression, expression>, `pplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `qplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `xlim`:double[], `ylim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:tuple<expression, expression>, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[]>, `L2derivPlotTitle`:tuple<struct<`main`:tuple<expression>, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<null>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:character[], `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `ngrid`:double, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:logical, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression>, `panelLast`:tuple<expression, expression>, `pplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `ylim`:double[], `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `qplot`:struct<`plot`:struct<`x`:double[], ``:double[], `type`:character, `xlim`:double[], `ylim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:double[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[]>, `L2derivPlotTitle`:tuple<struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<null>> | struct<`call`:language, `dots`:null, `args`:struct<`x`:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `bmar`:double, `tmar`:double, `mfColRow`:logical, `to.draw.arg`:null, `withSubst`:logical>, `to.draw`:integer[], `panelFirst`:tuple<expression, expression, expression, expression>, `panelLast`:tuple<expression, expression, expression, expression>, `distr`:struct<`call`:language, `dots`:pairlist, `args`:struct<`width`:double, `height`:double, `withSweave`:logical, `xlim`:null, `ylim`:null, `verticals`:logical, `do.points`:logical, `main`:logical, `inner`:logical, `sub`:logical, `bmar`:double, `tmar`:double, `cex.main`:double, `cex.inner`:double, `cex.sub`:double, `col.points`:character, `col.hor`:character, `col.vert`:character, `col.main`:character, `col.inner`:character, `col.sub`:character, `cex.points`:double, `pch.u`:double, `pch.a`:double, `mfColRow`:logical, `to.draw.arg`:double[], `withSubst`:logical>, `to.draw`:double[], `panelFirst`:tuple<expression, expression, expression>, `panelLast`:tuple<expression, expression, expression>, `dplot`:struct<`plot`:struct<`x`:integer[], ``:double[], `type`:character, `pch`:double, `ylim`:double[], `xlim`:null, `ylab`:character, `xlab`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:struct<`main`:expression, `line`:null, `cex.main`:double, `col.main`:character>, `points`:struct<`x`:integer[], `y`:double[], `pch`:double, `cex`:double, `col`:character>>, `pplot`:struct<`plot`:struct<`x`:any => any, `main`:character, `verticals`:logical, `do.points`:logical, `ylim`:double[], `ylab`:character, `xlab`:character, `col.hor`:character, `col.vert`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `points.u`:struct<`x`:integer[], `y`:double[], `pch`:double, `cex`:double, `col`:character>, `points.a`:struct<`x`:integer[], `y`:double[], `pch`:double, `cex`:double, `col`:character>, `title`:expression, `points`:struct<`x`:integer[], `y`:double[], `pch`:double, `cex`:double, `col`:character>>, `qplot`:struct<`plot`:struct<`x`:any => any, `main`:character, `xlim`:double[], `ylim`:integer[], `ylab`:character, `xlab`:character, `verticals`:logical, `do.points`:logical, `cex.points`:double, `pch`:double, `col.points`:character, `col.hor`:character, `col.vert`:character, `log`:character, `panel.first`:expression, `panel.last`:expression>, `usr`:double[], `title`:expression, `lines`:struct<`x`:double[], `y`:integer[], `col`:character>, `points.u`:struct<`x`:double[], `y`:integer[], `pch`:double, `cex`:double, `col`:character>, `points.a`:struct<`x`:double, `y`:integer, `pch`:double, `cex`:double, `col`:character>, `vlines`:struct<`x`:double[], `y`:integer[], `col`:character>>, `List`:struct<``:null, `withSweave`:logical, `main`:logical, `inner`:logical, `sub`:logical, `col.inner`:character, `cex.inner`:double, `mfColRow`:logical, `to.draw.arg`:double[], `panel.first`:tuple<expression, expression, expression>, `panel.last`:tuple<expression, expression, expression>>>, `parArgs`:struct<`mfrow`:double[], `mar`:double[], `no.readonly`:logical>, `L2derivPlotArgs`:tuple<struct<`x`:integer[], `y`:double[], `type`:character, `lty`:character, `xlab`:character, `ylab`:expression, `panel.first`:expression, `panel.last`:expression>>, `L2derivPlotUsr`:tuple<double[]>, `L2derivPlotTitle`:tuple<struct<`main`:character, `line`:null, `cex.main`:double, `col.main`:character>>, `L2derivPlotLines`:tuple<struct<``:double[], ``:double[], `lty`:character, `panel.first`:expression, `panel.last`:expression>>>;
type `positiveBias` < > => character;
type `print` <double | character | ???> => struct<`show.details`:character>;
type `profile` < > => ???;
type `psi.fct` <double[]> => double[];
type `QFNorm` <^double[]> => character;
type `qqplot` <double[], ??? | logical> => struct<`call`:language, `dots`:null, `args`:struct<`x`:double[], `y`:null, `n`:integer, `withIdLine`:logical, `withConf`:logical, `withConf.pw`:logical, `withConf.sim`:logical, `plot.it`:logical, `datax`:logical, `xlab`:character, `ylab`:character, `width`:double, `height`:double, `withSweave`:logical, `mfColRow`:logical, `n.CI`:integer, `with.lab`:logical, `lab.pts`:null, `which.lbs`:null, `which.Order`:null, `order.traf`:null, `col.IdL`:character, `lty.IdL`:double, `lwd.IdL`:double, `alpha.CI`:double, `exact.pCI`:logical, `exact.sCI`:logical, `nosym.pCI`:logical, `col.pCI`:character, `lty.pCI`:double, `lwd.pCI`:double, `pch.pCI`:integer, `cex.pCI`:double, `col.sCI`:character, `lty.sCI`:double, `lwd.sCI`:double, `pch.sCI`:integer, `cex.sCI`:double, `added.points.CI`:logical, `cex.pch`:double, `col.pch`:character, `cex.lbs`:double, `col.lbs`:character, `adj.lbs`:double, `alpha.trsp`:null, `jit.fac`:double, `jit.tol`:double, `check.NotInSupport`:logical, `col.NotInSupport`:character, `with.legend`:logical, `legend.bg`:character, `legend.pos`:character, `legend.cex`:double, `legend.pref`:character, `legend.postf`:character, `legend.alpha`:double, `debug`:logical, `withSubst`:logical>, `ret.x`:double[], `ret.y`:double[], `usr1`:double, `usr2`:double, `usr3`:double, `usr4`:double, `qqplotInfo.xy.0`:double[], `qqplotInfo.y.0`:null, `qqplotInfo.datax`:logical, `qqplotInfo.withConf.pw`:logical, `qqplotInfo.withConf.sim`:logical, `qqplotInfo.alpha.CI`:double, `qqplotInfo.col.pCI`:character, `qqplotInfo.lty.pCI`:double, `qqplotInfo.lwd.pCI`:double, `qqplotInfo.pch.pCI`:integer, `qqplotInfo.cex.pCI`:double, `qqplotInfo.col.sCI`:character, `qqplotInfo.lty.sCI`:double, `qqplotInfo.lwd.sCI`:double, `qqplotInfo.pch.sCI`:integer, `qqplotInfo.cex.sCI`:double, `qqplotInfo.n`:integer, `qqplotInfo.exact.sCI`:logical, `qqplotInfo.exact.pCI`:logical, `qqplotInfo.nosym.pCI`:logical, `qqplotInfo.with.legend`:logical, `qqplotInfo.legend.bg`:character, `qqplotInfo.legend.pos`:character, `qqplotInfo.legend.cex`:double, `qqplotInfo.legend.pref`:character, `qqplotInfo.legend.postf`:character, `qqplotInfo.legend.alpha`:double, `qqplotInfo.debug`:logical, `qqplotInfo.args.stats.qqplot`:struct<`x`:double[], `y`:double[], `xlab`:expression, `ylab`:expression, `pch`:double[], `cex`:double[], `col`:character[]>, `qqplotInfo.with.lab`:logical, `qqplotInfo.lbprep`:struct<`x0`:double[], `y0`:double[], `lab`:integer[], `col`:character[], `cex`:double[], `adj`:double[], `ord`:integer[], `ns`:integer[]>, `qqb.crit`:^double[], `qqb.err`:logical[]> | struct<`call`:language, `dots`:pairlist, `args`:struct<`x`:double[], `y`:null, `n`:integer, `withIdLine`:logical, `withConf`:logical, `withConf.pw`:null, `withConf.sim`:null, `plot.it`:logical, `xlab`:character, `ylab`:character>, `ret.x`:double[], `ret.y`:double[], `usr1`:double, `usr2`:double, `usr3`:double, `usr4`:double, `qqplotInfo.xy.0`:double[], `qqplotInfo.y.0`:null, `qqplotInfo.datax`:logical, `qqplotInfo.withConf.pw`:logical, `qqplotInfo.withConf.sim`:logical, `qqplotInfo.alpha.CI`:double, `qqplotInfo.col.pCI`:character, `qqplotInfo.lty.pCI`:double, `qqplotInfo.lwd.pCI`:double, `qqplotInfo.pch.pCI`:integer, `qqplotInfo.cex.pCI`:double, `qqplotInfo.col.sCI`:character, `qqplotInfo.lty.sCI`:double, `qqplotInfo.lwd.sCI`:double, `qqplotInfo.pch.sCI`:integer, `qqplotInfo.cex.sCI`:double, `qqplotInfo.n`:integer, `qqplotInfo.exact.sCI`:logical, `qqplotInfo.exact.pCI`:logical, `qqplotInfo.nosym.pCI`:logical, `qqplotInfo.with.legend`:logical, `qqplotInfo.legend.bg`:character, `qqplotInfo.legend.pos`:character, `qqplotInfo.legend.cex`:double, `qqplotInfo.legend.pref`:character, `qqplotInfo.legend.postf`:character, `qqplotInfo.legend.alpha`:double, `qqplotInfo.debug`:logical, `qqplotInfo.args.stats.qqplot`:struct<`x`:double[], `y`:double[], `xlab`:expression, `ylab`:expression, `pch`:double[], `cex`:double[], `col`:character[]>, `qqplotInfo.with.lab`:logical, `qqplotInfo.lbprep`:struct<`x0`:double[], `y0`:double[], `lab`:integer[], `col`:character[], `cex`:double[], `adj`:double[], `ord`:integer[], `ns`:integer[]>, `qqb.crit`:^double[], `qqb.err`:logical[]> | struct<`call`:language, `dots`:null, `args`:struct<`x`:double[], `y`:null, `n`:integer, `withIdLine`:logical, `withConf`:logical, `withConf.pw`:null, `withConf.sim`:null, `plot.it`:logical, `xlab`:character, `ylab`:character>, `ret.x`:double[], `ret.y`:double[], `usr1`:double, `usr2`:double, `usr3`:double, `usr4`:double, `qqplotInfo.xy.0`:double[], `qqplotInfo.y.0`:null, `qqplotInfo.datax`:logical, `qqplotInfo.withConf.pw`:logical, `qqplotInfo.withConf.sim`:logical, `qqplotInfo.alpha.CI`:double, `qqplotInfo.col.pCI`:character, `qqplotInfo.lty.pCI`:double, `qqplotInfo.lwd.pCI`:double, `qqplotInfo.pch.pCI`:integer, `qqplotInfo.cex.pCI`:double, `qqplotInfo.col.sCI`:character, `qqplotInfo.lty.sCI`:double, `qqplotInfo.lwd.sCI`:double, `qqplotInfo.pch.sCI`:integer, `qqplotInfo.cex.sCI`:double, `qqplotInfo.n`:integer, `qqplotInfo.exact.sCI`:logical, `qqplotInfo.exact.pCI`:logical, `qqplotInfo.nosym.pCI`:logical, `qqplotInfo.with.legend`:logical, `qqplotInfo.legend.bg`:character, `qqplotInfo.legend.pos`:character, `qqplotInfo.legend.cex`:double, `qqplotInfo.legend.pref`:character, `qqplotInfo.legend.postf`:character, `qqplotInfo.legend.alpha`:double, `qqplotInfo.debug`:logical, `qqplotInfo.args.stats.qqplot`:struct<`x`:double[], `y`:double[], `xlab`:expression, `ylab`:expression, `pch`:double[], `cex`:double[], `col`:character[]>, `qqplotInfo.with.lab`:logical, `qqplotInfo.lbprep`:struct<`x0`:double[], `y0`:double[], `lab`:integer[], `col`:character[], `cex`:double[], `adj`:double[], `ord`:integer[], `ns`:integer[]>, `qqb.crit`:^double[], `qqb.err`:logical[]>;
type `QuadFormNorm` <^double[], ^double[]> => double[];
type `r` < > => any => any;
type `returnlevelplot` <double[], ???> => struct<`call`:language, `dots`:null, `args`:struct<`x`:double[], `y`:null, `n`:integer, `withIdLine`:logical, `withConf`:logical, `withConf.pw`:logical, `withConf.sim`:logical, `plot.it`:logical, `datax`:logical, `xlab`:character, `ylab`:character, `width`:double, `height`:double, `withSweave`:logical, `mfColRow`:logical, `n.CI`:integer, `with.lab`:logical, `lab.pts`:null, `which.lbs`:null, `which.Order`:null, `order.traf`:null, `col.IdL`:character, `lty.IdL`:double, `lwd.IdL`:double, `alpha.CI`:double, `exact.pCI`:logical, `exact.sCI`:logical, `nosym.pCI`:logical, `col.pCI`:character, `lty.pCI`:double, `lwd.pCI`:double, `pch.pCI`:integer, `cex.pCI`:double, `col.sCI`:character, `lty.sCI`:double, `lwd.sCI`:double, `pch.sCI`:integer, `cex.sCI`:double, `added.points.CI`:logical, `cex.pch`:double, `col.pch`:character, `cex.lbs`:double, `col.lbs`:character, `adj.lbs`:double, `alpha.trsp`:null, `jit.fac`:double, `jit.tol`:double, `check.NotInSupport`:logical, `col.NotInSupport`:character, `with.legend`:logical, `legend.bg`:character, `legend.pos`:character, `legend.cex`:double, `legend.pref`:character, `legend.postf`:character, `legend.alpha`:double, `debug`:logical, `withSubst`:logical>, `plotArgs`:struct<`x`:double[], `y`:double[], `log`:character, `type`:character, `xlab`:expression, `ylab`:expression, `main`:character, `pch`:double[], `cex`:double[], `col`:character[]>, `pointArgs`:struct<`x`:double[], `y`:double[], `xlab`:expression, `ylab`:expression, `main`:character, `pch`:double[], `cex`:double[], `col`:character[]>, `usr`:double[], `IdLineArgs`:struct<``:double[], ``:double[], `col`:character, `lty`:double, `lwd`:double>, `ret.x`:double[], `ret.y`:double[], `qqb.crit`:^double[], `qqb.err`:logical[]>;
type `samplesize` <double[], ??? | logical> => double;
type `samplesize.estimate` <???> => double;
type `SelfNorm` <null, null> => null;
type `show` < > => ? ^double[] | any => any;
type `sign` < > => double;
type `sign<-` < > => double;
type `startPar` <double[] | symbol, ??? | character | language | logical> => any => any | double[];
type `symmetricBias` < > => character;
type `trafo` <???, ???> => struct<`fct`:any => any, `mat`:^double[]> | ^double[];
type `trafo<-` < > => any => any;
type `trAsCov` <null, null> => null;
type `trFiCov` <null, null> => null;
type `type` < > => character;
type `untransformed.asvar` < > => ^double[];
type `untransformed.estimate` < > => double[];
type `validityMethod` < > => logical;
type `validParameter` <double[]> => logical;
