type `[.cuminc` <struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `Tests`:^double[]>, logical[], null> => struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>>;
type `crr` <double[], integer[], ^double[] | null, null | ^double[], any => any | null, integer[] | null, double, double, null | logical[], any => any, double, double, null, logical> => struct<`coef`:double[], `loglik`:double, `score`:double[], `inf`:^double[], `var`:^double[], `res`:^double[], `uftime`:double[], `bfitj`:double[], `tfs`:^double[], `converged`:logical, `call`:language, `n`:integer, `n.missing`:double, `loglik.null`:double, `invinf`:^double[]>;
type `cuminc` <double[], integer[], null | ^integer[], null | integer[], double, double, null | ^logical[], any => any> => struct<`1 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `1 2`:struct<`time`:double[], `est`:double[], `var`:double[]>> | struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `Tests`:^double[]>;
type `filter` <character[]> => logical[];
type `plot.cuminc` <struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `b 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `b 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `Tests`:^double[]>, character, null, double[], null, double, character, character, double | integer[], integer[] | double, double, null> => null;
type `plot.predict.crr` <^double[], double | integer[], double[], double[], double, double, null> => null;
type `predict.crr` <struct<`coef`:double[], `loglik`:double, `score`:double[], `inf`:^double[], `var`:^double[], `res`:^double[], `uftime`:double[], `bfitj`:double[], `tfs`:^double[], `converged`:logical, `call`:language, `n`:integer, `n.missing`:double, `loglik.null`:double, `invinf`:^double[]>, ^double[], ^double[] | null, null> => ^double[];
type `print.crr` <struct<`coef`:double[], `loglik`:double, `score`:double[], `inf`:^double[], `var`:^double[], `res`:^double[], `uftime`:double[], `bfitj`:double[], `tfs`:^double[], `converged`:logical, `call`:language, `n`:integer, `n.missing`:double, `loglik.null`:double, `invinf`:^double[]>, null> => null;
type `print.cuminc` <struct<`1 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `1 2`:struct<`time`:double[], `est`:double[], `var`:double[]>> | struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `Tests`:^double[]>, double, null, null> => null;
type `print.summary.crr` <struct<`call`:language, `converged`:logical, `n`:integer, `n.missing`:integer, `loglik`:double, `coef`:^double[], `conf.int`:^double[], `logtest`:double[]>, double, null> => null;
type `summary.crr` <struct<`coef`:double[], `loglik`:double, `score`:double[], `inf`:^double[], `var`:^double[], `res`:^double[], `uftime`:double[], `bfitj`:double[], `tfs`:^double[], `converged`:logical, `call`:language, `n`:integer, `n.missing`:double, `loglik.null`:double, `invinf`:^double[]>, double, double, null> => struct<`call`:language, `converged`:logical, `n`:integer, `n.missing`:double, `loglik`:double, `coef`:^double[], `conf.int`:^double[], `logtest`:double[]>;
type `timepoints` <struct<`1 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `1 2`:struct<`time`:double[], `est`:double[], `var`:double[]>> | struct<`a 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 1`:struct<`time`:double[], `est`:double[], `var`:double[]>, `a 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `c 2`:struct<`time`:double[], `est`:double[], `var`:double[]>, `Tests`:^double[]>, double[]> => struct<`est`:^double[], `var`:^double[]>;
