type `::` <character, null, null, double[], double[], null> => struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>;
type `.var` <character, null | character> => struct<`name`:character, `desc`:null> | struct<`name`:character, `desc`:character>;
type `bounds.continuous_var` <struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>> => struct<`breaks`:double[]> | struct<`d_vari`:double[]> | struct<`db_vari`:double[]> | struct<`y`:double[]>;
type `c.var` <struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:null, `support`:integer[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>> => struct<`breaks`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>> | struct<`wool`:struct<`name`:character, `desc`:null, `support`:integer[]>, `tension`:struct<`name`:character, `desc`:null, `support`:integer[]>> | struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>> | struct<`Sepal.Length`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>, `Sepal.Width`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>, `Petal.Length`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>, `Petal.Width`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>, `Species`:struct<`name`:character, `desc`:null, `support`:integer[]>> | struct<`x`:struct<`name`:character, `desc`:null, `support`:integer[]>, `y`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>>;
type `check.continuous_var` <struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, struct<`breaks`:double[]>> => logical;
type `check.factor_var` <struct<`name`:character, `desc`:null, `support`:integer[]> | struct<`name`:character, `desc`:character, `support`:integer[]>, struct<`breaks`:double[], `wool`:integer[], `tension`:integer[]>> => logical;
type `check.vars` <struct<`wool`:struct<`name`:character, `desc`:null, `support`:integer[]>, `tension`:struct<`name`:character, `desc`:null, `support`:integer[]>> | struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>>, struct<`breaks`:double[], `wool`:integer[], `tension`:integer[]>> => logical;
type `factor_var` <character, null | character, character[]> => struct<`name`:character, `desc`:null, `support`:integer[]> | struct<`name`:character, `desc`:character, `support`:integer[]>;
type `filter` <character[]> => logical[];
type `FUN` <struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:null, `support`:integer[]> | double[] | struct<`name`:character, `desc`:character, `support`:integer[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>> => double[];
type `levels.factor_var` <struct<`name`:character, `desc`:null, `support`:integer[]> | struct<`name`:character, `desc`:character, `support`:integer[]>> => character[];
type `mkgrid.vars` <struct<`breaks`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>> | struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>> | struct<`x`:struct<`name`:character, `desc`:null, `support`:integer[]>, `y`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>>, double> => struct<`breaks`:double> | struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:integer[]> | struct<`x`:integer[], `y`:double[]>;
type `variable.names.var` <struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:null, `support`:integer[]> | struct<`name`:character, `desc`:character, `support`:integer[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, null> => character;
type `variable.names.vars` <struct<`wool`:struct<`name`:character, `desc`:null, `support`:integer[]>, `tension`:struct<`name`:character, `desc`:null, `support`:integer[]>> | struct<`breaks`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>> | struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>> | struct<`x`:struct<`name`:character, `desc`:null, `support`:integer[]>, `y`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>>, null> => character[];
type `as.data.frame.var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]> | struct<`name`:character, `desc`:character, `support`:integer[]>, null, logical, integer, null> => struct<`d_vari`:double>;
type `as.data.frame.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>>, null, logical, double, null> => struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:integer[]>;
type `bounds.default` <struct<`name`:character, `desc`:character, `support`:integer[]>> => struct<`f_vari`:null>;
type `bounds.discrete_var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>> => struct<`dd_vari`:double[]> | struct<`i_vari`:integer[]>;
type `bounds.ordered_var` <struct<`name`:character, `desc`:character, `support`:integer[]>> => struct<`o_vari`:integer[]>;
type `bounds.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>>> => struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:null>;
type `check.discrete_var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:integer[]>> => logical;
type `check.ordered_var` <struct<`name`:character, `desc`:character, `support`:integer[]>, struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:integer[]>> => logical;
type `desc.var` <struct<`name`:character, `desc`:character, `support`:integer[]> | struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>> => character;
type `desc.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>>> => character[];
type `is.bounded.continuous_var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>> => logical;
type `is.bounded.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>> | struct<`x`:struct<`name`:character, `desc`:null, `support`:integer[]>, `y`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>>> => logical[];
type `levels.discrete_var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>> => double[];
type `numeric_var` <character, null | character, null | character, double[], double[], null | double[]> => struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]> | struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>;
type `ordered_var` <character, character, character[]> => struct<`name`:character, `desc`:character, `support`:integer[]>;
type `support.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>> | struct<`x`:struct<`name`:character, `desc`:null, `support`:integer[]>, `y`:struct<`name`:character, `desc`:null, `support`:double[], `bounds`:double[], `add`:double[]>>> => struct<`d_vari`:double[], `i_vari`:integer[], `dd_vari`:double[], `db_vari`:double[], `o_vari`:integer[], `f_vari`:integer[]> | struct<`x`:integer[], `y`:double[]>;
type `unit.numeric_var` <struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>> => character;
type `unit.vars` <struct<`d_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `i_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:integer[]>, `dd_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[]>, `db_vari`:struct<`name`:character, `desc`:character, `unit`:character, `support`:double[], `bounds`:double[], `add`:double[]>, `o_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>, `f_vari`:struct<`name`:character, `desc`:character, `support`:integer[]>>> => ^character[];
