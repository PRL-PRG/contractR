type `$` < > => double[] | <any> => (double | null) | <double[]> => double | < > => double | <logical, null> => class<`estimate_pars`> | <logical> => class<`displ`> | <class<`estimate_xmin`> | double> => (class<`estimate_xmin`> | double) | <double> => double | <logical, double | null> => class<`estimate_pars`> | < > => (double | null) | <double[]> => double | <logical, double | null> => class<`estimate_pars`> | <class<`refClassRepresentation`>> => class<`refObjectGenerator`>;
type `check_ctn_data` <double[]> => null;
type `check_discrete_data` <integer[]> => null;
type `compare_distributions` <class<`conpl`>, class<`conexp`>> => class<`compare_distributions`>;
type `conexp_tail_ll` <double[], double, double> => double;
type `con_pl_ll` <double[], double, double> => double;
type `dis_pl_ll` <integer[], double, double> => double;
type `dist_all_cdf` <class<`displ`>, logical, double> => double[] | <class<`displ`>, logical, double> => double[];
type `dist_cdf` <class<`displ`>, double[] | null, logical> => double[] | <class<`conpl`>, double[], logical> => double[] | <class<`conpl`> | class<`displ`>, double[] | null, logical> => double[];
type `dist_data_all_cdf` <class<`displ`>, logical, double> => double[] | <class<`displ`>, logical, double> => double[];
type `dist_data_cdf` <class<`displ`>, logical, double> => double[] | <class<`displ`>, logical, double> => double[];
type `dist_ll` <class<`displ`>> => double | <class<`displ`>> => double;
type `dist_pdf` <class<`conexp`> | class<`conpl`> | class<`displ`>, double[], logical> => double[] | <class<`conpl`>, double[], logical> => double[] | <class<`conexp`>, double[], logical> => double[] | <class<`displ`>, integer[], logical> => double[];
type `dist_rand` <class<`displ`>, double> => double[] | <class<`displ`>, double> => double[];
type `dplcon` <double[], double, double, logical> => double[];
type `dpldis` <double[], double, double, logical> => double[];
type `estimate_pars` <class<`conexp`> | class<`conpl`> | class<`displ`>, null> => class<`estimate_pars`>;
type `estimate_xmin` <class<`conpl`> | class<`displ`>, null, null, double, character> => class<`estimate_xmin`>;
type `filter` <character[]> => logical[];
type `fn` <double> => double | <double> => double | <double> => double;
type `FUN` <double> => double[] | <double> => double[] | <double> => double[] | <double> => double[] | <double> => double | <double> => double;
type `get_data_cdf_probs` <integer[], logical> => double[];
type `get_distance_statistic` <class<`conpl`> | class<`displ`>, double, character> => double;
type `get_gof` <double[], double[], character> => double;
type `get_n` <class<`conpl`> | class<`displ`>> => integer;
type `get_ntail` <class<`conpl`> | class<`displ`>, logical, logical> => integer;
type `get_xmin_est` <class<`matrix`>, double[]> => class<`estimate_xmin`>;
type `lines` <class<`displ`>, ...> => class<`data.frame`>;
type `.local` <class<`displ`>, logical, logical, ...> => class<`data.frame`> | <class<`displ`>, logical, logical, double, ...> => class<`data.frame`>;
type `lseq` <double, integer, double> => double[];
type `plot` <class<`displ`>, any, ...> => class<`data.frame`>;
type `plot.compare_distributions` <class<`compare_distributions`>, ...> => class<`data.frame`>;
type `pplcon` <double[], double, double, logical> => double[];
type `ppldis` <double[], double, double, logical> => double[];
type `rplcon` <double, double, double> => double[];
type `rpldis` <double, double, double, double> => double[];
