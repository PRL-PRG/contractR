type `$` <double, double[], double> => class<`spendfn`> | <double[], class<`gsDesign`>, double | class<`n2dependent`, `numeric`>, ...> => class<`n2dependent`, `numeric`> | <double, double[], double[]> => class<`spendfn`> | <double[], class<`gsDesign`>, ...> => class<`n2independent`, `numeric`> | <double, double[], double> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`>;
type `binomialSPRT` <double, double, double, double, double, double> => class<`binomialSPRT`, `gsBinomialExact`, `gsProbability`>;
type `checkLengths` <..., logical> => any;
type `checkRange` <class<`array`> | double[], double[], logical[], any, double> => any;
type `checkScalar` <double | character, character, ...> => any;
type `checkVector` <double[] | character[] | class<`array`>, character, ..., double | null> => any;
type `condPower` <double[], double, class<`function`>, double[] | null, class<`gsDesign`>, ...> => double[];
type `eEvents` <class<`matrix`> | double[], double | class<`matrix`>, class<`matrix`> | double[], double[], null | double[], double, null | double, double, double> => class<`eEvents`>;
type `eEvents1` <double[], double[], double[], double[], double[] | null, double, double, double, logical> => list<double[] | double[] | null | double | null>;
type `f` <double, double, class<`array`> | double, double[], double[], integer> => double | <double, class<`gsDesign`, `gsSurv`> | class<`gsSize`>, double, logical> => (double | list<double | class<`array`>>) | <double, double, class<`gsDesign`>, double, double, double, double[], double[]> => double | <double, double[], double[]> => double | <double, double, double, double[], class<`array`> | double[], class<`array`> | double[], double, double> => double | <double, double, double, class<`function`>, double | null, class<`gsDesign`>> => double | <double, double, double[], double[], class<`array`>, double, integer> => class<`matrix`> | <double, double | null, null, class<`matrix`>, class<`matrix`>, class<`matrix`>, class<`matrix`>, double, double[], double | null, any, double> => (double | class<`nSurv`>);
type `filter` <character[]> => logical[];
type `fn` <double[], ...> => double[] | <double[], integer[], class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, double, character, ...> => double[] | <double[] | class<`array`>, integer[], class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, character, ...> => (double[] | class<`array`>) | <double[] | class<`array`>, integer[], class<`gsDesign`>, null, ...> => (double[] | class<`array`>) | <double[], integer[], class<`gsDesign`>, any, character, ...> => ^double[];
type `FUN` <character[], character> => logical | <double, double, double, double, logical, any> => double;
type `gsbetadiff1` <double, double, double[], double[], class<`array`>, double, integer> => class<`matrix`>;
type `gsBinomialExact` <double, double[], double[], double[], double[]> => class<`gsBinomialExact`, `gsProbability`>;
type `gsBound` <double[], class<`array`> | double[], class<`array`> | double[], double, double> => list<double[] | class<`array`> | list<class<`array`>> | double[] | list<double[]>>;
type `gsBound1` <double, double[], class<`array`>, class<`array`> | double[], double, double, double> => list<double[] | class<`array`> | double[] | class<`array`> | class<`matrix`>>;
type `gsBoundCP` <class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, character | double, double> => (class<`array`> | class<`matrix`>);
type `gsBoundSummary` <class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, character | null, logical, character | null, double, double, double, character, any, logical, null | double, character[] | null> => class<`data.frame`, `gsBoundSummary`>;
type `gsBValue` <double[] | class<`array`>, integer[], class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, character, ...> => (double[] | class<`array`>);
type `gsCP` <class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, double[] | null, double, double, double> => class<`gsProbability`>;
type `gsCPOS` <double, class<`gsDesign`>, double[], double[]> => double;
type `gsCPz` <double[], integer[], class<`gsDesign`>, double | null, null, ...> => class<`array`>;
type `gsDelta` <double[] | class<`array`>, integer[], class<`gsDesign`>, null, ...> => (double[] | class<`array`>);
type `gsDensity` <class<`gsDesign`>, double[], double, double[], double> => list<double[] | class<`matrix`>>;
type `gsDErrorCheck` <class<`gsDesign`>> => class<`gsDesign`>;
type `gsDesign` <double, double, double, double, double, double, double, double[], character | class<`function`>, any, any, any> => class<`gsDesign`>;
type `gsDProb` <double[], class<`gsDesign`>> => class<`gsDesign`>;
type `gsDType1` <class<`gsDesign`>, double> => class<`gsDesign`>;
type `gsDType2and5` <class<`gsDesign`>> => class<`gsDesign`>;
type `gsDType4` <class<`gsDesign`>> => class<`gsDesign`>;
type `gsDType4a` <class<`gsDesign`>> => class<`gsDesign`>;
type `gsDType4ss` <class<`gsDesign`>> => class<`gsDesign`>;
type `gsHR` <double[], integer[], class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, double, character, ...> => double[];
type `gsI` <double[], double, double, double[], double[], double, double, double> => list<double[] | character | list<double[]>>;
type `gsI1` <double, double[], double[], class<`array`>, double, double, double, integer> => list<double[] | class<`matrix`>>;
type `gsLegendText` <integer> => expression;
type `gsnSurv` <class<`nSurv`>, double> => class<`gsSize`>;
type `gsPI` <class<`gsDesign`>, double, double, double, double, double[], double[]> => double[];
type `gsPlotName` <character | double> => character;
type `gsPlotName2` <double> => character;
type `gsPOS` <class<`gsDesign`>, double[], double[]> => double;
type `gsPosterior` <class<`gsDesign`>, double, double, list<double[]>, double> => list<double[]>;
type `gsPP` <class<`gsDesign`>, double, double, double[], double[], double, logical> => double;
type `gsprob` <double[], double[], class<`array`> | double[], class<`array`> | double[], double, double> => list<double[] | class<`matrix`>>;
type `gsProbability` <double, double[], any, any, any, double, class<`gsDesign`> | null, double> => (class<`gsDesign`> | class<`gsProbability`>);
type `gsRR` <double[], integer[], class<`gsDesign`>, any, character, ...> => ^double[];
type `gsSurv` <double, double, double, double, double, double, double, class<`function`>, double, class<`function`>, double, double> => class<`gsDesign`, `gsSurv`>;
type `gsZ` <class<`gsDesign`>, double[], double, double> => list<double[] | class<`matrix`>>;
type `hrn2z` <double, double, double, double, double> => double;
type `hrz2n` <double, double, double, double> => double;
type `isInteger` <character | double[]> => logical;
type `isVectorAtomic` <character[] | class<`array`> | double[]> => logical;
type `KT` <double, double, double, class<`matrix`>, double, double, class<`matrix`>, class<`matrix`>, class<`matrix`>, double, double[], double | null> => class<`nSurv`>;
type `KTZ` <double, double | null, null, class<`matrix`>, class<`matrix`>, class<`matrix`>, class<`matrix`>, double, double[], double | null, any, double> => (double | class<`nSurv`>);
type `LFPWE` <double, double, double, class<`matrix`>, double, double, class<`matrix`>, class<`matrix`>, class<`matrix`>, double, double, null> => class<`nSurv`>;
type `n2sizediff` <double, double, double, class<`function`>, double | null, class<`gsDesign`>> => double;
type `nameperiod` <double[], double> => character[];
type `nBinomial` <double[], double[], double, double, double, double, double, double, character, null | double> => (class<`array`> | class<`data.frame`> | double);
type `nBinomial1Sample` <double, double, double, double, integer[], double, logical> => (class<`data.frame`> | integer | null);
type `nEvents` <double[], double, double, double, double, double, double[], logical> => (class<`data.frame`> | double[]);
type `nEventsIA` <double, class<`gsDesign`, `gsSurv`> | class<`gsSize`>, double, logical> => (double | list<double | class<`array`>>);
type `nNormal` <double, double, double | null, double, double, double, double, null, double, double> => double;
type `normalGrid` <double, double[], double, double> => list<double[]>;
type `nSurv` <class<`matrix`> | double[], double, double, class<`matrix`> | double, null, class<`matrix`> | double[], double[], double | null, null | double, double | null, double, double> => class<`nSurv`>;
type `nSurvival` <double, double, double, double, double, double, double, double, double, logical, character[], character[]> => class<`nSurvival`>;
type `objective` <double[], double[], double[]> => double;
type `plotASN` <class<`gsDesign`>, null, null, null, null, null, character, logical, ...> => class<`gg`, `ggplot`>;
type `plot.binomialSPRT` <class<`binomialSPRT`, `gsBinomialExact`, `gsProbability`>, double, ...> => class<`gg`, `ggplot`>;
type `plotBval` <class<`gsDesign`>, character, character, ...> => class<`gg`, `ggplot`>;
type `plot.gsBinomialExact` <class<`binomialSPRT`, `gsBinomialExact`, `gsProbability`> | class<`gsBinomialExact`, `gsProbability`>, double, ...> => class<`gg`, `ggplot`>;
type `plotgsCP` <class<`gsDesign`>, character, character, null, any, character, null, double[], double[], double[], character, double> => class<`gg`, `ggplot`>;
type `plot.gsDesign` <class<`gsDesign`>, character | double, logical, ...> => class<`gg`, `ggplot`>;
type `plotgsPower` <class<`gsDesign`> | class<`gsProbability`>, character, character, null, null, null, double, double, double[], null, logical, double> => class<`gg`, `ggplot`>;
type `plot.gsProbability` <class<`gsProbability`>, double, logical, ...> => class<`gg`, `ggplot`>;
type `plotgsZ` <class<`gsDesign`>, character, character, ...> => class<`gg`, `ggplot`>;
type `plotHR` <class<`gsDesign`>, character, character, ...> => class<`gg`, `ggplot`>;
type `plotreleffect` <class<`gsDesign`>, null, character, ...> => class<`gg`, `ggplot`>;
type `plotRR` <class<`gsDesign`>, character, character, ...> => class<`gg`, `ggplot`>;
type `plotsf` <class<`gsDesign`>, character, null, character, null, any, null, double[], double[], double[], any, double> => class<`gg`, `ggplot`>;
type `plot.ssrCP` <class<`ssrCP`>, null, double[], character, double, double, double, ...> => null;
type `Power.ssrCP` <class<`ssrCP`>, double | null, null, double> => class<`data.frame`>;
type `qplotit` <class<`gsDesign`>, null, null, character, any, double[], double[], double[], double[], character, null, character | null> => class<`gg`, `ggplot`>;
type `sfBetaDist` <double, double[], double[]> => class<`spendfn`>;
type `sfCauchy` <double, double[], double[]> => class<`spendfn`>;
type `sfExponential` <double, double[], double> => class<`spendfn`>;
type `sfExtremeValue` <double, double[], double[]> => class<`spendfn`>;
type `sfExtremeValue2` <double, double[], double[]> => class<`spendfn`>;
type `sfGapped` <double, double[], list<double[] | class<`function`>>> => class<`spendfn`>;
type `sfHSD` <double, double[], double> => class<`spendfn`>;
type `sfl` <double, double[], double> => class<`spendfn`> | <double, double[], double> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`> | <double, double[], list<double[] | class<`function`>>> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`>;
type `sfLogistic` <double, double[], double[]> => class<`spendfn`>;
type `sfNormal` <double, double[], double[]> => class<`spendfn`>;
type `sfPower` <double, double[], double> => class<`spendfn`>;
type `sfTDist` <double, double[], double[]> => any;
type `sfTrimmed` <double, double[], list<double[] | class<`function`> | class<`function`> | double[]>> => class<`spendfn`>;
type `sfTruncated` <double, double[], list<double[] | class<`function`>>> => class<`spendfn`>;
type `sfu` <double, double[], double> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`> | <double, double[], double> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`> | <double, double[], double> => class<`spendfn`> | <double, double[], double[]> => class<`spendfn`> | <double, double[], list<double[] | class<`function`> | class<`function`> | double[]>> => class<`spendfn`> | <double, double[], any> => class<`spendfn`> | <double, double[], any> => class<`spendfn`>;
type `simBinomial` <double, double, double, double, double, double, double, double, character> => class<`array`>;
type `ssrCP` <double[], double | null, double, double, double, double[], class<`gsDesign`>, class<`function`>, ...> => class<`ssrCP`>;
type `summary.gsDesign` <class<`gsDesign`> | class<`gsDesign`, `gsSurv`>, logical, character, ...> => character;
type `summary.spendfn` <class<`spendfn`>, ...> => character;
type `testBinomial` <double | integer[], double | integer[], double, double, double, double, double, character, double> => class<`array`>;
type `tEventsIA` <class<`gsDesign`, `gsSurv`> | class<`gsSize`>, double, double> => list<double | class<`array`>>;
type `varBinomial` <integer, double, double, double, character> => double;
type `WT` <double, double, class<`array`> | double, double[], double, integer> => double;
type `WTdiff` <double, double, class<`array`> | double, double[], double[], integer> => double;
type `xprint` <class<`data.frame`, `xtable`>, logical, double[], ...> => character;
type `xtable.gsSurv` <class<`gsDesign`, `gsSurv`>, character, null, null, null, null, logical, character, character, character, ...> => class<`data.frame`, `xtable`>;
type `z2` <double[], class<`gsDesign`>, double | class<`n2dependent`, `numeric`>, ...> => class<`n2dependent`, `numeric`> | <double[], class<`gsDesign`>, ...> => class<`n2independent`, `numeric`> | <double[], class<`gsDesign`>, ...> => class<`n2independent`, `numeric`>;
type `zn2hr` <double, double, double, double, double> => double;
