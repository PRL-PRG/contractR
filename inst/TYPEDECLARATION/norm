type `.code.to.na` <class<`matrix`>, double> => class<`matrix`>;
type `da.norm` <list<class<`matrix`> | double[]>, double[], any, double, logical, logical> => double[];
type `em.norm` <list<class<`matrix`> | double[]>, any, logical, double, double, any> => double[];
type `filter` <character[]> => logical[];
type `getparam.norm` <list<class<`matrix`> | double[]>, double[], logical> => list<double[] | class<`matrix`>>;
type `imp.norm` <list<class<`matrix`> | double[]>, double[], class<`matrix`>> => class<`matrix`>;
type `loglik.norm` <list<class<`matrix`> | double[]>, double[]> => double;
type `logpost.norm` <list<class<`matrix`> | double[]>, double[], list<double[] | class<`matrix`>>> => double;
type `makeparam.norm` <list<class<`matrix`> | double[]>, list<double[] | class<`matrix`>>> => double[];
type `mda.norm` <list<class<`matrix`> | double[]>, double[], double, logical> => double[];
type `.na.to.snglcode` <class<`matrix`>, double> => class<`matrix`>;
type `ninvwish` <list<class<`matrix`> | double[]>, list<double[] | class<`matrix`>>> => double[];
type `prelim.norm` <class<`matrix`>> => list<class<`matrix`> | double[]>;
type `rngseed` <double> => null;
