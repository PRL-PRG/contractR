type `.code.to.na` <^double[], double> => ^double[];
type `.na.to.snglcode` <^double[], double> => ^double[];
type `da.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[], ???, double, logical, logical> => double[];
type `em.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[] | ???, logical, double, double, ??? | tuple<double, double, double[], ^double[]>> => double[];
type `filter` <character[]> => logical[];
type `getparam.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[], logical> => struct<`mu`:double[], `sdv`:double[], `r`:^double[]> | struct<`mu`:double[], `sigma`:^double[]>;
type `imp.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[], ^double[]> => ^double[];
type `loglik.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[]> => double;
type `logpost.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[], tuple<double, double, double[], ^double[]>> => double;
type `makeparam.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, struct<`mu`:double[], `sdv`:double[], `r`:^double[]>> => double[];
type `mda.norm` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, double[], double, logical> => double[];
type `ninvwish` <struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>, tuple<double, double, double[], ^double[]>> => double[];
type `prelim.norm` <^double[]> => struct<`x`:^double[], `n`:integer, `p`:integer, `r`:^integer[], `nmis`:integer[], `ro`:integer[], `mdpst`:integer[], `nmdp`:integer[], `npatt`:integer, `xbar`:double[], `sdv`:double[], `d`:integer, `psi`:^integer[], `sj`:integer[], `nmon`:integer[], `last`:integer[], `layer`:integer[], `nlayer`:integer>;
type `rngseed` <double> => null;
