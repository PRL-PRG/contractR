type `.subset2` <null | character, null | symbol | character, null, null | character> => environment;
type `$` <character> => environment | character;
type `all_true` <tuple<logical>> => logical;
type `check_field.DescriptionPackage` <struct<`key`:character, `value`:character>, logical, logical, null> => logical;
type `check_field.DescriptionPackageList` <struct<`key`:character, `value`:character>, logical, null> => logical;
type `chk` <character, logical> => logical;
type `chks` <logical, symbol, symbol> => logical;
type `create_fields` <character[], character[]> => struct<`Package`:struct<`key`:character, `value`:character>, `Title`:struct<`key`:character, `value`:character>, `Version`:struct<`key`:character, `value`:character>, `Authors@R`:struct<`key`:character, `value`:character>, `Maintainer`:struct<`key`:character, `value`:character>, `Description`:struct<`key`:character, `value`:character>, `License`:struct<`key`:character, `value`:character>, `LazyData`:struct<`key`:character, `value`:character>, `URL`:struct<`key`:character, `value`:character>, `BugReports`:struct<`key`:character, `value`:character>, `Encoding`:struct<`key`:character, `value`:character>> | struct<`VignetteBuilder`:struct<`key`:character, `value`:character>>;
type `desc` <null | character, null, null, null | character> => environment;
type `filter` <character[]> => logical[];
type `find_field_class` <character> => character;
type `FUN` <character> => logical;
type `has_no_na` <character> => logical;
type `idesc_create` <environment, environment, null | character, null | symbol | character, null, null | character> => environment;
type `idesc_create_cmd` <environment, environment, character> => environment;
type `idesc_create_file` <environment, environment, character> => environment;
type `idesc_create_package` <environment, environment, character> => environment;
type `idesc_create_text` <environment, environment, character[]> => environment;
type `idesc_del` <environment, environment, character> => environment;
type `idesc_get` <symbol, environment, character> => character;
type `idesc_set` <environment, environment, character> => environment;
type `is_constructor_cmd` <character> => logical;
type `is_dir` <character> => logical;
type `is_existing_file` <character> => logical;
type `is_gz_file` <character> => logical;
type `is_package_archive` <character> => logical;
type `is_package_list` <character> => logical;
type `is_path` <character> => logical;
type `is_string` <character> => logical;
type `is_zip_file` <character> => logical;
type `read_dcf` <integer> => struct<`dcf`:struct<`Package`:struct<`key`:character, `value`:character>, `Title`:struct<`key`:character, `value`:character>, `Version`:struct<`key`:character, `value`:character>, `Authors@R`:struct<`key`:character, `value`:character>, `Maintainer`:struct<`key`:character, `value`:character>, `Description`:struct<`key`:character, `value`:character>, `License`:struct<`key`:character, `value`:character>, `LazyData`:struct<`key`:character, `value`:character>, `URL`:struct<`key`:character, `value`:character>, `BugReports`:struct<`key`:character, `value`:character>, `Encoding`:struct<`key`:character, `value`:character>>, `notws`:character[]>;
type `str_trim` <character> => character;
