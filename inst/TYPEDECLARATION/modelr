type `add_predictions` <class<`data.frame`>, class<`lm`>, character, null> => class<`data.frame`>;
type `add_predictors` <class<`formula`>, ..., character> => class<`formula`>;
type `add_residuals` <class<`data.frame`, `tbl`, `tbl_df`>, class<`lm`>, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `as.data.frame.resample` <class<`resample`>, ...> => class<`data.frame`>;
type `bootstrap` <class<`data.frame`>, double, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `crossv_kfold` <class<`data.frame`>, double, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `crossv_mc` <class<`data.frame`>, double, double, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `data_grid` <class<`data.frame`>, ..., class<`lm`> | null> => class<`data.frame`, `tbl`, `tbl_df`>;
type `.f` <class<`data.frame`>, class<`lm`>, character, null> => class<`data.frame`> | <class<`data.frame`, `tbl`, `tbl_df`>, class<`lm`>, character> => class<`data.frame`, `tbl`, `tbl_df`> | <class<`formula`>> => null | <class<`lm`>, class<`resample`> | class<`data.frame`>> => double | <class<`formula`>, class<`formula`>> => class<`formula`> | <class<`data.frame`>, integer[]> => class<`resample`> | <class<`formula`>> => class<`formula`> | <character, class<`formula`>, class<`formula`>> => null | <integer[]> => list<class<`resample`>> | <character, class<`formula`>, class<`formula`>> => null | <class<`call`> | double | class<`(`> | class<`name`> | class<`formula`>> => character[] | <class<`formula`>> => (class<`glm`, `lm`> | class<`lm`>);
type `filter` <character[]> => logical[];
type `find_binding_env` <character, environment> => null;
type `find_symbols` <class<`call`> | double | class<`(`> | class<`name`> | class<`formula`>> => character[];
type `find_symbols_call` <class<`call`> | class<`formula`> | class<`(`>> => character[];
type `fit_with` <class<`data.frame`>, class<`function`>, list<class<`formula`>>, ...> => list<class<`glm`, `lm`> | class<`lm`>>;
type `fn` <class<`formula`>, class<`formula`>, character> => class<`formula`>;
type `formulas` <class<`formula`>, ...> => list<class<`formula`>>;
type `FUN` <double[], ...> => double;
type `gather_predictions` <class<`data.frame`>, ..., character, character, null> => class<`data.frame`>;
type `gather_residuals` <class<`data.frame`, `tbl`, `tbl_df`>, ..., character, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `has_name` <double[]> => logical[];
type `id` <double> => character[];
type `is_formula` <class<`formula`>> => logical;
type `mae` <class<`lm`>, class<`data.frame`>> => double;
type `mape` <class<`lm`>, class<`data.frame`>> => double;
type `merge_envs` <class<`formula`>, class<`formula`>> => environment;
type `model_matrix` <class<`data.frame`>, class<`formula`>, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `mse` <class<`lm`>, class<`data.frame`>> => double;
type `predict2` <class<`lm`>, class<`data.frame`>, null> => double[];
type `predictor_vars` <class<`lm`>> => character[];
type `predictor_vars.default` <class<`lm`>, any> => character[];
type `qae` <class<`lm`>, class<`data.frame`>, double[]> => double[];
type `resample` <class<`data.frame`>, integer[]> => class<`resample`>;
type `resample_bootstrap` <class<`data.frame`>> => class<`resample`>;
type `resample_partition` <class<`data.frame`>, double[]> => list<class<`resample`>>;
type `residuals` <class<`lm`>, class<`data.frame`, `tbl`, `tbl_df`> | class<`resample`> | class<`data.frame`>> => double[];
type `response` <class<`lm`>, class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`resample`>> => double[];
type `response_var` <class<`lm`>> => class<`name`>;
type `response_var.default` <class<`lm`>, any> => class<`name`>;
type `rmse` <class<`lm`>, class<`resample`> | class<`data.frame`>> => double;
type `rsae` <class<`lm`>, class<`data.frame`>> => double;
type `rsquare` <class<`lm`>, class<`data.frame`>> => double;
type `seq_range` <double[], double, any, null, null, logical> => double[];
type `spread_predictions` <class<`data.frame`>, ..., null> => class<`data.frame`>;
type `spread_residuals` <class<`data.frame`, `tbl`, `tbl_df`>, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `typical.numeric` <double[], ...> => double;
type `validate_formulas` <class<`formula`>, list<class<`formula`>>> => list<class<`formula`>>;
