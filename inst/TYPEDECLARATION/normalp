type `dnormp` <double[], double, double, double, logical> => double[];
type `estimatep` <double[], double, double, character[]> => double;
type `filter` <character[]> => logical[];
type `fn` <double[]> => double;
type `graphnp` <double[], double, double, character> => struct<`rect`:struct<`w`:double, `h`:double, `left`:double, `top`:double>, `text`:struct<`x`:double[], `y`:double[]>>;
type `kurtosis` <? double[], double, character[]> => double[];
type `lmp.default` <language, tuple<> | struct<`x1`:double[]>, null> => struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `x`:double[]>, `knp`:logical, `p`:double, `iter`:double, `rs`:double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `x1`:double[]>, `knp`:logical, `p`:double, `iter`:double, `rs`:double[]>;
type `paramp.default` <double[], ? double> => struct<`mean`:double, `mp`:double, `sd`:double, `sp`:double, `p`:double, `iter`:double>;
type `plot.lmp` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `x`:integer[], `z`:double[]>, `knp`:logical, `p`:double, `iter`:double, `rs`:double[]>, ???> => struct<`ask`:logical>;
type `plot.simul.lmp` <struct<`dat`:^double[], `table`:^double[], `p`:double, `par`:double[], `frm`:language, `iter`:double, `lp`:logical>, ???> => struct<`ask`:logical>;
type `plot.simul.mp` <struct<`dat`:^double[], `table`:^double[], `iter`:double>, ???> => struct<`ask`:logical>;
type `pnormp` <double[], double, double, double, logical, logical> => double[];
type `qnormp` <double[], double, double, double, logical, logical> => double[];
type `qqlinep` <double[], double, ???> => null;
type `qqnormp.default` <double[], ???, double, character, character, character, ???> => struct<`x`:double[], `y`:double[]>;
type `rnormp` <double, double, double, double, character[]> => double[];
type `simul.lmp` <double, double, double, double[], double, double, double, logical> => struct<`dat`:^double[], `table`:^double[], `p`:double, `par`:double[], `frm`:language, `iter`:double, `lp`:logical>;
type `simul.mp` <double, double, double, double, double> => struct<`dat`:^double[], `table`:^double[], `iter`:double>;
type `summary.lmp` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `x1`:double[]>, `knp`:logical, `p`:double, `iter`:double, `rs`:double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `x`:double[]>, `knp`:logical, `p`:double, `iter`:double, `rs`:double[]>, ???> => struct<`call`:language, `terms`:language, `p`:double, `residuals`:double[], `coefficients`:double[], `sigma`:double, `rdf`:double, `iter`:double>;
type `summary.simul.lmp` <struct<`dat`:^double[], `table`:^double[], `p`:double, `par`:double[], `frm`:language, `iter`:double, `lp`:logical>, ???> => struct<`dat`:^double[], `table`:^double[], `p`:double, `par`:double[], `frm`:language, `iter`:double, `lp`:logical, `szca`:integer>;
