type `::` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ..., logical, any, logical, any, any, logical> => class<`anova.lme`, `data.frame`>;
type `%||%` <character | null, any> => (character | class<`function`>);
type `ACF` <class<`gls`> | class<`gls`, `gnls`> | class<`lme`>, any, ...> => class<`ACF`, `data.frame`>;
type `ACF.gls` <class<`gls`> | class<`gls`, `gnls`>, any, character[], class<`formula`>, class<`function`>, ...> => class<`ACF`, `data.frame`>;
type `ACF.lme` <class<`lme`>, double, character[], ...> => class<`ACF`, `data.frame`>;
type `allCoef` <..., class<`function`>> => double[];
type `allVarsRec` <class<`call`> | class<`formula`> | class<`formula`, `terms`> | class<`listForm`> | double | null | list<any>> => (character[] | null);
type `anova.gls` <class<`gls`> | class<`gls`, `gnls`>, ..., logical, any, null, any, any, logical> => class<`anova.lme`, `data.frame`>;
type `anova.lme` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ..., logical, any, logical, any, any, logical> => class<`anova.lme`, `data.frame`>;
type `as.data.frame.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, null, logical, ...> => class<`data.frame`>;
type `as.matrix.corStruct` <class<`corAR1`, `corStruct`>, ...> => list<class<`matrix`>>;
type `as.matrix.pdMat` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`reStruct`>, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `as.matrix.reStruct` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`reStruct`>, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `asOneFormula` <..., character[] | list<character>> => class<`formula`>;
type `asTable` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`table`>;
type `asTable.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`table`>;
type `augPred` <class<`lme`> | class<`lme`, `nlme`>, null, any, any, double, ...> => class<`augPred`, `data.frame`>;
type `augPred.lme` <class<`lme`> | class<`lme`, `nlme`>, null, double, double, double, double[] | null, ...> => class<`augPred`, `data.frame`>;
type `balancedGrouped` <class<`formula`>, class<`table`>, null | list<character>, null | list<character>> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>);
type `c_deparse` <...> => character;
type `coef<-` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ..., double[]> => (class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>);
type `coef<-.corAR1` <class<`corAR1`, `corStruct`>, ..., double> => class<`corAR1`, `corStruct`>;
type `coef.corAR1` <class<`corAR1`, `corStruct`>, logical, ...> => double;
type `coef<-.corARMA` <class<`corARMA`, `corStruct`>, ..., double[]> => class<`corARMA`, `corStruct`>;
type `coef.corARMA` <class<`corARMA`, `corStruct`>, logical, ...> => double[];
type `coef<-.corCAR1` <class<`corCAR1`, `corStruct`>, ..., double> => class<`corCAR1`, `corStruct`>;
type `coef.corCAR1` <class<`corCAR1`, `corStruct`>, logical, ...> => double;
type `coef<-.corCompSymm` <class<`corCompSymm`, `corStruct`>, ..., double> => class<`corCompSymm`, `corStruct`>;
type `coef.corCompSymm` <class<`corCompSymm`, `corStruct`>, logical, ...> => double;
type `coef.corLin` <class<`corLin`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, logical, ...> => double[];
type `coef<-.corNatural` <class<`corNatural`, `corStruct`>, ..., double[]> => class<`corNatural`, `corStruct`>;
type `coef.corNatural` <class<`corNatural`, `corStruct`>, logical, ...> => double[];
type `coef<-.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, ..., double[]> => (class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>);
type `coef.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, logical, ...> => double[];
type `coef.corSpher` <class<`corLin`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, logical, ...> => double[];
type `coef<-.corSymm` <class<`corStruct`, `corSymm`>, ..., double[]> => class<`corStruct`, `corSymm`>;
type `coef.corSymm` <class<`corStruct`, `corSymm`>, logical, ...> => double[];
type `coef.gls` <class<`gls`>, logical, ...> => double[];
type `coef.gnls` <class<`gls`, `gnls`>, ...> => double[];
type `coef.lme` <class<`lme`>, logical, integer, any, any, any, logical, null, ...> => class<`coef.lme`, `data.frame`, `ranef.lme`>;
type `coef.lmList` <class<`lmList`, `nlsList`> | class<`lmList`>, logical, any, any, any, any, ...> => class<`coef.lmList`, `data.frame`, `ranef.lmList`>;
type `coef<-.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, ..., double[]> => (class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>);
type `coef.modelStruct` <class<`glsStruct`, `modelStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`pdBlocked`, `pdMat`> | class<`reStruct`>, logical, ...> => (double[] | null);
type `coef<-.pdBlocked` <class<`pdBlocked`, `pdMat`>, ..., double[]> => class<`pdBlocked`, `pdMat`>;
type `coef.pdBlocked` <class<`glsStruct`, `modelStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`pdBlocked`, `pdMat`> | class<`reStruct`>, logical, ...> => (double[] | null);
type `coef.pdCompSymm` <class<`pdCompSymm`, `pdMat`>, logical, ...> => double[];
type `coef.pdDiag` <class<`pdDiag`, `pdMat`>, logical, ...> => double[];
type `coef.pdIdent` <class<`pdIdent`, `pdMat`>, logical, ...> => double;
type `coef<-.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>, ..., double[]> => (class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>);
type `coef.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`pdIdent`, `pdMat`>, logical, ...> => double[];
type `coef.pdNatural` <class<`pdMat`, `pdNatural`>, logical, ...> => double[];
type `coef.pdSymm` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, logical, ...> => double[];
type `coef<-.reStruct` <class<`reStruct`>, ..., double[]> => class<`reStruct`>;
type `coef.reStruct` <class<`glsStruct`, `modelStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`pdBlocked`, `pdMat`> | class<`reStruct`>, logical, ...> => (double[] | null);
type `coef.summary.nlsList` <class<`summary.lmList`, `summary.nlsList`>, ...> => class<`array`>;
type `coef<-.varIdent` <class<`varFunc`, `varIdent`>, ..., double[]> => class<`varFunc`, `varIdent`>;
type `coef.varIdent` <class<`varFunc`, `varIdent`>, logical, logical, ...> => double[];
type `coef<-.varPower` <class<`varFunc`, `varPower`>, ..., double> => class<`varFunc`, `varPower`>;
type `coef.varPower` <class<`varFunc`, `varPower`>, any, logical, ...> => double[];
type `collapse` <class<`data.frame`, `groupedData`, `nmGroupedData`>, ...> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `collapse.groupedData` <class<`data.frame`, `groupedData`, `nmGroupedData`>, character | double, character | double, null, null | class<`formula`>, class<`formula`> | null, any, null, ...> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `compareFits` <class<`coef.lmList`, `data.frame`, `ranef.lmList`>, class<`coef.lme`, `data.frame`, `ranef.lme`>, integer[]> => class<`compareFits`>;
type `comparePred` <class<`lme`>, class<`lme`>, null, any, any, double, null, ...> => class<`augPred`, `augPred`, `comparePred`, `data.frame`>;
type `comparePred.lme` <class<`lme`>, class<`lme`>, null, any, any, double, null, ...> => class<`augPred`, `augPred`, `comparePred`, `data.frame`>;
type `confint.nlsList` <class<`lmList`, `nlsList`>, ...> => list<class<`matrix`> | ^logical[] | class<`matrix`>>;
type `corAR1` <double, class<`formula`>, logical> => class<`corAR1`, `corStruct`>;
type `corARMA` <double[], class<`formula`>, double, double, logical> => class<`corARMA`, `corStruct`>;
type `corCAR1` <double, class<`formula`>, logical> => class<`corCAR1`, `corStruct`>;
type `corCompSymm` <double, class<`formula`>, logical> => class<`corCompSymm`, `corStruct`>;
type `corExp` <double[], class<`formula`>, logical, character[], logical> => class<`corExp`, `corSpatial`, `corStruct`>;
type `corFactor` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`>, ...> => double[];
type `corFactor.corAR1` <class<`corAR1`, `corStruct`>, ...> => double[];
type `corFactor.corARMA` <class<`corARMA`, `corStruct`>, ...> => double[];
type `corFactor.corCAR1` <class<`corCAR1`, `corStruct`>, ...> => double[];
type `corFactor.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, ...> => double[];
type `corFactor.corStruct` <class<`corCompSymm`, `corStruct`>, ...> => double[];
type `corFactor.corSymm` <class<`corStruct`, `corSymm`>, ...> => double[];
type `corGaus` <double[], class<`formula`>, logical, character[], logical> => class<`corGaus`, `corSpatial`, `corStruct`>;
type `corLin` <double[], class<`formula`>, logical, character[], logical> => class<`corLin`, `corSpatial`, `corStruct`>;
type `corMatrix` <class<`corAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`> | class<`reStruct`> | class<`corARMA`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `corMatrix.corAR1` <class<`corAR1`, `corStruct`>, integer[] | list<integer[]>, logical, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `corMatrix.corARMA` <class<`corARMA`, `corStruct`>, list<integer[]>, logical, ...> => list<class<`matrix`>>;
type `corMatrix.corCompSymm` <class<`corCompSymm`, `corStruct`>, list<integer[]>, logical, ...> => list<class<`matrix`>>;
type `corMatrix.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`>, double[], logical, ...> => class<`matrix`>;
type `corMatrix.corSymm` <class<`corStruct`, `corSymm`>, list<double[]>, logical, ...> => list<class<`matrix`>>;
type `corMatrix.pdCompSymm` <class<`pdCompSymm`, `pdMat`>, ...> => class<`matrix`>;
type `corMatrix.pdMat` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => class<`matrix`>;
type `corMatrix.reStruct` <class<`reStruct`>, ...> => list<class<`matrix`>>;
type `corNatural` <double[], class<`formula`>, logical> => class<`corNatural`, `corStruct`>;
type `corRatio` <double[], class<`formula`>, logical, character[], logical> => class<`corRatio`, `corSpatial`, `corStruct`>;
type `corSpatial` <double[], class<`formula`>, logical, character, character, logical> => class<`corGaus`, `corSpatial`, `corStruct`>;
type `corSpher` <double[], class<`formula`>, logical, character[], logical> => class<`corSpatial`, `corSpher`, `corStruct`>;
type `corSymm` <double[], class<`formula`>, logical> => class<`corStruct`, `corSymm`>;
type `covariate<-` <class<`varFunc`, `varPower`>, double[]> => class<`varFunc`, `varPower`>;
type `covariate<-.varFunc` <class<`varFunc`, `varPower`>, double[]> => class<`varFunc`, `varPower`>;
type `deviance.gls` <class<`gls`> | class<`lme`>, ...> => class<`logLik`>;
type `deviance.lme` <class<`gls`> | class<`lme`>, ...> => class<`logLik`>;
type `Dim` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`matrix`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, ...> => (double[] | list<double | class<`table`> | integer[] | double | class<`table`> | class<`table`> | double[]>);
type `Dim.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, any, ...> => list<class<`table`> | double[] | double | class<`table`>>;
type `Dim.corStruct` <any, any, ...> => list<double | class<`table`> | integer[] | double | class<`table`>>;
type `Dim.default` <class<`matrix`>, ...> => integer[];
type `Dim.pdCompSymm` <class<`pdCompSymm`, `pdMat`> | class<`pdIdent`, `pdMat`>, ...> => integer[];
type `Dim.pdDiag` <class<`pdDiag`, `pdMat`>, ...> => integer[];
type `Dim.pdIdent` <class<`pdCompSymm`, `pdMat`> | class<`pdIdent`, `pdMat`>, ...> => integer[];
type `Dim.pdMat` <class<`pdBlocked`, `pdMat`>, ...> => integer[];
type `Dim.pdNatural` <class<`pdMat`, `pdNatural`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => double[];
type `Dim.pdSymm` <class<`pdMat`, `pdNatural`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => double[];
type `extractAIC.gls` <class<`gls`> | class<`lme`>, any, double, ...> => double[];
type `extractAIC.lme` <class<`gls`> | class<`lme`>, any, double, ...> => double[];
type `fdHess` <double[], class<`function`>, ..., double, double> => list<double[] | class<`matrix`> | double | class<`matrix`>>;
type `fitted.gls` <class<`gls`> | class<`gls`, `gnls`>, ...> => ^double[];
type `fitted.glsStruct` <class<`glsStruct`, `modelStruct`>, list<double[] | class<`matrix`> | class<`logLik`> | double[] | class<`matrix`> | class<`matrix`> | double[]>, ...> => double[];
type `fitted.gnls` <class<`gls`> | class<`gls`, `gnls`>, ...> => ^double[];
type `fitted.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, ...> => double[];
type `fitted.lme` <class<`lme`> | class<`lme`, `nlme`>, integer[] | double, any, ...> => (class<`matrix`> | ^double[]);
type `fitted.lmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>, integer[], list<class<`matrix`> | double | list<double[] | list<double[]>> | class<`matrix`> | list<double[] | list<double[]>> | class<`matrix`> | list<double[] | list<double>>>, list<any>, ...> => (class<`matrix`> | double[]);
type `fitted.lmList` <class<`lmList`>, null, logical, ...> => double[];
type `fixed.effects` <class<`lmList`> | class<`lme`> | class<`lme`, `nlme`>, ...> => double[];
type `fixef` <class<`lmList`> | class<`lme`> | class<`lme`, `nlme`>, ...> => double[];
type `fixef.lme` <class<`lme`> | class<`lme`, `nlme`>, ...> => double[];
type `fixef.lmList` <class<`lmList`>, ...> => double[];
type `formula.corStruct` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varExp`, `varFunc`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `formula.gls` <class<`gls`>, ...> => (class<`formula`> | class<`formula`, `terms`>);
type `formula.gnls` <class<`gls`, `gnls`> | class<`lme`, `nlme`>, ...> => class<`formula`>;
type `formula.groupedData` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varExp`, `varFunc`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `formula.lme` <class<`lme`>, ...> => (class<`formula`> | class<`formula`, `terms`>);
type `formula.lmList` <class<`lmList`>, ...> => class<`formula`>;
type `formula.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, ...> => list<any>;
type `formula.nlme` <class<`gls`, `gnls`> | class<`lme`, `nlme`>, ...> => class<`formula`>;
type `formula.pdBlocked` <class<`pdBlocked`, `pdMat`>, logical, ...> => (class<`formula`> | null | list<class<`formula`>>);
type `formula.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, any, ...> => (class<`formula`> | class<`listForm`> | null);
type `formula.reStruct` <class<`reStruct`>, logical, ...> => list<class<`formula`> | class<`listForm`> | list<class<`formula`>>>;
type `formula.varFunc` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varExp`, `varFunc`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `FUN` <class<`call`> | class<`formula`> | class<`formula`, `terms`> | class<`listForm`> | double | null | list<any>> => (character[] | null) | <...> => character | <class<`corAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`> | class<`reStruct`> | class<`corARMA`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, ...> => (class<`matrix`> | list<class<`matrix`>>) | <class<`call`> | class<`name`> | class<`formula`>, any> => list<class<`formula`>> | <class<`pdDiag`, `pdMat`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>> => (class<`matrix`> | double[]) | <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`lme`> | class<`lme`, `nlme`>, double, ...> => (class<`matrix`> | class<`VarCorr.lme`>) | <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>, any, ...> => (class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>) | <class<`pdMat`, `pdSymm`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, logical> => (class<`matrix`> | list<class<`matrix`>>) | <class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | class<`corAR1`, `corStruct`> | class<`reStruct`>, ...> => double[] | <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>> => logical | <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>> => logical | <class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`formula`> | class<`listForm`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, ...> => (character[] | null | list<character[]>);
type `gapply` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, class<`function`>, class<`formula`>, any, class<`factor`, `ordered`>, ...> => integer[];
type `getCovariate` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varFunc`, `varPower`> | class<`corAR1`, `corStruct`> | class<`varExp`, `varFunc`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`>, any, any> => (class<`factor`> | double[] | null | list<double[]>);
type `getCovariate.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`>, any, any> => (double[] | list<double[]>);
type `getCovariate.corStruct` <class<`corAR1`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`>, any, any> => (integer[] | list<double[]>);
type `getCovariate.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, class<`formula`>, any> => (class<`factor`> | double[]);
type `getCovariateFormula` <class<`call`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`gls`> | class<`gls`, `gnls`> | class<`lme`, `nlme`> | class<`lmList`> | class<`varFunc`, `varPower`>> => class<`formula`>;
type `getCovariate.varFunc` <class<`varFunc`, `varPower`> | class<`varExp`, `varFunc`>, any, any> => (double[] | null);
type `getData` <class<`gls`> | class<`lme`> | class<`gls`, `gnls`> | class<`lmList`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.gls` <class<`gls`> | class<`lme`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.gnls` <class<`gls`, `gnls`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.lme` <class<`gls`> | class<`lme`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.lmList` <class<`lmList`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getFixDF` <class<`matrix`>, class<`data.frame`>, integer[], integer[] | list<double[]>, any> => list<double[]>;
type `getGroups` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`data.frame`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`lme`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`gls`> | class<`lmList`> | class<`lmList`, `nlsList`> | class<`lme`, `nlme`> | class<`gls`, `gnls`>, any, any, any, character> => (character[] | class<`data.frame`> | class<`factor`> | class<`factor`, `ordered`> | null);
type `getGroups.corStruct` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`>, any, any, any, any> => class<`factor`, `ordered`>;
type `getGroups.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`>, class<`formula`> | list<class<`formula`>>, any, any, character> => (class<`data.frame`> | class<`factor`> | class<`factor`, `ordered`>);
type `getGroupsFormula` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`lmList`> | class<`lmList`, `nlsList`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`varExp`, `varFunc`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, logical, any> => (class<`formula`> | null | list<class<`formula`>>);
type `getGroupsFormula.default` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`varExp`, `varFunc`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, logical, any> => (class<`formula`> | null | list<class<`formula`>>);
type `getGroupsFormula.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, logical, any> => (class<`formula`> | list<class<`formula`>>);
type `getGroupsFormula.reStruct` <class<`reStruct`>, logical, any> => (class<`formula`> | null);
type `getGroups.gls` <class<`gls`> | class<`gls`, `gnls`>, any, any, any, any> => (class<`factor`, `ordered`> | null);
type `getGroups.lme` <class<`lme`> | class<`lme`, `nlme`>, any, integer[] | double, any, any> => (class<`data.frame`> | class<`factor`, `ordered`>);
type `getGroups.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, any, any, any, any> => class<`factor`, `ordered`>;
type `getGroups.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, any, any, any, any> => (character[] | null);
type `getParsGnls` <list<class<`matrix`> | logical | logical>, list<integer[] | double | double>, double[], integer> => class<`matrix`>;
type `getParsNlme` <list<list<class<`matrix`> | list<logical> | logical | list<logical> | class<`matrix`> | list<logical> | logical | list<logical>>>, list<integer[] | double | integer[] | double>, any, any, any, double[], any, any, double, integer> => class<`matrix`>;
type `getResponse` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`lme`, `nlme`> | class<`lme`>, any> => ^double[];
type `getResponse.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`formula`>> => ^double[];
type `getResponseFormula` <class<`call`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`gls`> | class<`gls`, `gnls`> | class<`lme`> | class<`lme`, `nlme`> | class<`lmList`>> => class<`formula`>;
type `getResponse.lme` <class<`lme`, `nlme`> | class<`lme`>, any> => double[];
type `getVarCov` <class<`lme`> | class<`gls`>, ...> => (class<`VarCov`, `conditional`> | class<`VarCov`, `marginal`> | class<`VarCov`, `random.effects`>);
type `getVarCov.gls` <class<`gls`>, double, ...> => class<`VarCov`, `marginal`>;
type `getVarCov.lme` <class<`lme`>, any, character[], ...> => (class<`VarCov`, `conditional`> | class<`VarCov`, `marginal`> | class<`VarCov`, `random.effects`>);
type `gls` <class<`formula`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment, class<`corAR1`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | null | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, null | class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`>, any, character[], class<`function`>, any, logical> => any;
type `glsApVar` <class<`glsStruct`, `modelStruct`>, any, any, any, any, any> => (class<`matrix`> | null);
type `glsControl` <double, double, double, double, logical, logical, logical, logical, double, character[], character, double, logical, double | null> => list<double | character>;
type `glsEstimate` <class<`glsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer>>, list<logical>> => list<class<`logLik`> | double[] | class<`matrix`> | double[] | class<`matrix`> | class<`matrix`> | double[]>;
type `glsStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | null, class<`varFunc`, `varPower`> | null | class<`varFunc`, `varIdent`>> => class<`glsStruct`, `modelStruct`>;
type `gnls` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, class<`corAR1`, `corStruct`> | null, class<`varFunc`, `varPower`> | null, any, class<`function`>, any, any, logical> => class<`gls`, `gnls`>;
type `gnlsApVar` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, any, any, any, any, logical> => (class<`matrix`> | null);
type `gnlsControl` <double, double, double, double, double, double, double, logical, logical, logical, double, character[], character, double, double | null> => list<double | character>;
type `gnlsStruct` <class<`corAR1`, `corStruct`> | null, class<`varFunc`, `varPower`> | null> => class<`glsStruct`, `gnlsStruct`, `modelStruct`>;
type `groupedData` <class<`formula`>, any, logical | list<logical>, any, any, null, any, any> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>);
type `[.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`>, any, any, any> => (class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`factor`> | class<`factor`, `ordered`>);
type `gsummary` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, any, logical, any, any, class<`factor`> | class<`factor`, `ordered`> | character[], logical, ...> => class<`data.frame`>;
type `Initialize` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>, any, ...> => (class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>);
type `Initialize.corAR1` <class<`corAR1`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corAR1`, `corStruct`>;
type `Initialize.corARMA` <class<`corARMA`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corARMA`, `corStruct`>;
type `Initialize.corCAR1` <class<`corCAR1`, `corStruct`>, class<`data.frame`>, ...> => class<`corCAR1`, `corStruct`>;
type `Initialize.corCompSymm` <class<`corCompSymm`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corCompSymm`, `corStruct`>;
type `Initialize.corLin` <class<`corLin`, `corSpatial`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corLin`, `corSpatial`, `corStruct`>;
type `Initialize.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => (class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`>);
type `Initialize.corSpher` <class<`corSpatial`, `corSpher`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corSpatial`, `corSpher`, `corStruct`>;
type `Initialize.corStruct` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => (class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>);
type `Initialize.corSymm` <class<`corStruct`, `corSymm`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corStruct`, `corSymm`>;
type `Initialize.glsStruct` <class<`glsStruct`, `modelStruct`>, any, any, ...> => class<`glsStruct`, `modelStruct`>;
type `Initialize.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, any, ...> => class<`glsStruct`, `gnlsStruct`, `modelStruct`>;
type `Initialize.lmeStruct` <class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, any, any, list<class<`matrix`> | double | list<double[] | list<double[]>>>, list<double | character>, ...> => (class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>);
type `Initialize.reStruct` <class<`reStruct`>, any, list<class<`matrix`> | double | list<double[] | list<double[]>>>, list<double | character>, ...> => class<`reStruct`>;
type `Initialize.varExp` <class<`varExp`, `varFunc`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`varExp`, `varFunc`>;
type `Initialize.varFunc` <class<`varExp`, `varFunc`> | class<`varFunc`, `varPower`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`>, ...> => (class<`varExp`, `varFunc`> | class<`varFunc`, `varPower`>);
type `Initialize.varIdent` <class<`varFunc`, `varIdent`>, any, ...> => class<`varFunc`, `varIdent`>;
type `Initialize.varPower` <class<`varFunc`, `varPower`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`>, ...> => class<`varFunc`, `varPower`>;
type `intervals` <class<`gls`> | class<`gls`, `gnls`> | class<`lme`> | class<`lmList`> | class<`lmList`, `nlsList`>, double, ...> => (class<`intervals.gls`> | class<`intervals.lme`> | class<`intervals.lmList`>);
type `intervals.gls` <class<`gls`> | class<`gls`, `gnls`>, double, character[], ...> => class<`intervals.gls`>;
type `intervals.lme` <class<`lme`>, double, character[], ...> => class<`intervals.lme`>;
type `intervals.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, double, logical, ...> => class<`intervals.lmList`>;
type `isBalanced` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, logical, any> => logical;
type `isBalanced.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, logical, any> => logical;
type `isInitialized` <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>> => logical;
type `isInitialized.pdBlocked` <class<`pdBlocked`, `pdMat`>> => logical;
type `isInitialized.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>> => logical;
type `isInitialized.reStruct` <class<`reStruct`>> => logical;
type `LDEsysMat` <double[], class<`matrix`>> => class<`matrix`>;
type `lme` <class<`formula`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`lmList`>, any, any, null, null | class<`varFunc`, `varIdent`>, any, any, any, any, null, logical> => any;
type `lmeApVar` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, double, list<class<`matrix`> | double | list<double[] | list<double[]>>>, double, double, any> => (character | class<`matrix`>);
type `lmeControl` <double, double, double, double, double, double, logical, logical, logical, logical, double, double, character[], character, logical, double | null, logical, ...> => list<double | character>;
type `lme.formula` <class<`formula`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, class<`formula`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | class<`reStruct`> | list<class<`formula`> | class<`pdDiag`, `pdMat`>>, null | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, null | class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`>, any, character[], class<`function`>, any, null, logical> => any;
type `lme.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, null, null, any, any, any, any, null, logical> => class<`lme`>;
type `lme.lmList` <class<`lmList`>, any, any, null, null, any, any, any, any, null, logical> => class<`lme`>;
type `lmeStruct` <class<`reStruct`>, null | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, null | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>> => class<`lmeStruct`, `modelStruct`>;
type `lmList` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`>, any, any, any, any, logical, logical> => class<`lmList`>;
type `lmList.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, class<`function`>, logical, logical> => class<`lmList`>;
type `lmList.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, logical, logical> => class<`lmList`>;
type `logDet` <class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | class<`corAR1`, `corStruct`> | class<`reStruct`>, ...> => double[];
type `logDet.corStruct` <class<`corAR1`, `corStruct`>, any, ...> => double;
type `logDet.pdDiag` <class<`pdDiag`, `pdMat`>, ...> => double;
type `logDet.pdSymm` <class<`pdMat`, `pdSymm`>, ...> => double;
type `logDet.reStruct` <class<`reStruct`>, ...> => double[];
type `logLik.corStruct` <class<`corAR1`, `corStruct`>, any, ...> => double;
type `logLik.gls` <class<`gls`>, any, ...> => class<`logLik`>;
type `logLik.glsStruct` <class<`glsStruct`, `modelStruct`>, double[], list<class<`matrix`> | double | list<integer>>, ...> => double;
type `logLik.gnls` <class<`gls`, `gnls`>, logical, ...> => class<`logLik`>;
type `logLik.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, double[], list<class<`matrix`> | double | list<integer>>, ...> => class<`logLik`>;
type `logLik.lme` <class<`lme`> | class<`lme`, `nlme`>, any, ...> => class<`logLik`>;
type `logLik.lmeStruct` <class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, double[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => (class<`logLik`> | double);
type `logLik.lmeStructInt` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`>, double[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => double;
type `logLik.lmList` <class<`lmList`>, logical, logical, ...> => class<`logLik`>;
type `logLik.reStruct` <class<`reStruct`>, list<any>, ...> => double;
type `logLik.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`varExp`, `varFunc`>, any, ...> => (class<`logLik`> | null);
type `matrix<-` <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>, class<`matrix`> | double | list<class<`matrix`> | double>> => (class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>);
type `matrix<-.pdBlocked` <class<`pdBlocked`, `pdMat`>, class<`matrix`>> => class<`pdBlocked`, `pdMat`>;
type `matrix<-.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, class<`matrix`> | double> => (class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>);
type `matrix<-.reStruct` <class<`reStruct`>, class<`matrix`> | list<class<`matrix`> | double>> => class<`reStruct`>;
type `MEdecomp` <list<class<`matrix`> | double | list<double[] | list<double[]>>>> => list<class<`matrix`> | double | list<double[] | list<double[]>>>;
type `MEdims` <class<`data.frame`>, double[]> => list<double[] | list<double[]> | double[] | list<double>>;
type `MEEM` <class<`reStruct`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>, double> => class<`reStruct`>;
type `MEestimate` <class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, class<`data.frame`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>> => list<any>;
type `model.matrix.reStruct` <class<`reStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, null, ...> => class<`matrix`>;
type `Names` <class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`formula`> | class<`listForm`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, ...> => (character[] | null | list<character[]>);
type `Names<-` <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>, ..., character[] | list<character[]>> => (class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>);
type `Names.formula` <class<`formula`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | environment | integer | null | list<any>, any, ...> => (character[] | null);
type `Names.listForm` <class<`listForm`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment | integer | null, any, ...> => (character[] | null);
type `Names<-.pdBlocked` <class<`pdBlocked`, `pdMat`>, ..., character[]> => class<`pdBlocked`, `pdMat`>;
type `Names.pdBlocked` <class<`pdBlocked`, `pdMat`>, logical, ...> => (character[] | null | list<character[]>);
type `Names<-.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ..., character[]> => (class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>);
type `Names.pdMat` <class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>, ...> => character[];
type `Names<-.reStruct` <class<`reStruct`>, ..., list<character[]>> => class<`reStruct`>;
type `Names.reStruct` <class<`reStruct`>, ...> => list<character[]>;
type `needUpdate` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varExp`, `varFunc`>> => logical;
type `needUpdate.corStruct` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `needUpdate.default` <class<`varExp`, `varFunc`> | class<`varFunc`, `varPower`>> => logical;
type `needUpdate.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>> => logical;
type `needUpdate.reStruct` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `needUpdate.varIdent` <class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `nfGroupedData` <class<`formula`>, class<`data.frame`>, logical, class<`function`>, null, null | class<`formula`>, list<character>, list<character>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `nlme` <class<`formula`> | class<`lmList`, `nlsList`>, any, any, any, any, any, null, null, any, any, any, any, any, logical> => class<`lme`, `nlme`>;
type `nlmeControl` <double, double, double, double, double, double, double, double, logical, logical, logical, logical, logical, double, double, character[], logical, double | null, ...> => list<double | character>;
type `nlme.formula` <class<`formula`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`formula`> | list<class<`formula`>>, any, any, any, null | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`>, null, any, character[], any, any, any, logical> => class<`lme`, `nlme`>;
type `nlme.nlsList` <class<`lmList`, `nlsList`>, any, any, any, any, any, null, null, any, character[], any, any, list<any>, logical> => class<`lme`, `nlme`>;
type `nlmeStruct` <class<`reStruct`>, null | class<`corAR1`, `corStruct`> | class<`corARMA`, `corStruct`>, null | class<`varFunc`, `varPower`>> => class<`lmeStruct`, `modelStruct`, `nlmeStruct`>;
type `nlsList` <class<`formula`> | class<`selfStart`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, any, logical, null> => class<`lmList`, `nlsList`>;
type `nlsList.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, null | double[], any, any, any, class<`function`>, logical, null> => class<`lmList`, `nlsList`>;
type `nlsList.selfStart` <class<`selfStart`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, any, logical, null> => class<`lmList`, `nlsList`>;
type `nobs.gls` <class<`gls`> | class<`lme`>, ...> => integer;
type `nobs.lme` <class<`gls`> | class<`lme`>, ...> => integer;
type `nonlinModel` <class<`formula`>, environment, character[]> => class<`function`>;
type `pairs.compareFits` <class<`compareFits`>, any, logical, ...> => class<`trellis`>;
type `pairs.lme` <class<`lme`>, class<`formula`>, any, double | null, null, logical, ...> => class<`trellis`>;
type `pairs.lmList` <class<`lmList`>, class<`formula`>, any, double | null, null, logical, ...> => class<`trellis`>;
type `pdBlocked` <list<any>, null, null | list<character[]>, any, character> => class<`pdBlocked`, `pdMat`>;
type `pdCompSymm` <class<`formula`> | class<`matrix`>, null | class<`formula`>, null | character[], any> => class<`pdCompSymm`, `pdMat`>;
type `pdConstruct` <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>, any, any, any, any, ...> => (class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>);
type `pdConstruct.pdBlocked` <class<`pdBlocked`, `pdMat`>, class<`pdBlocked`, `pdMat`> | double[] | list<any>, null | list<class<`formula`>>, null | list<character[]>, any, character[], ...> => class<`pdBlocked`, `pdMat`>;
type `pdConstruct.pdCompSymm` <class<`pdCompSymm`, `pdMat`>, any, any, any, any, ...> => class<`pdCompSymm`, `pdMat`>;
type `pdConstruct.pdDiag` <class<`pdDiag`, `pdMat`>, any, any, any, any, ...> => class<`pdDiag`, `pdMat`>;
type `pdConstruct.pdIdent` <class<`pdIdent`, `pdMat`>, any, any, any, any, ...> => class<`pdIdent`, `pdMat`>;
type `pdConstruct.pdLogChol` <class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, class<`formula`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | double[] | class<`matrix`> | list<class<`formula`>>, null | class<`formula`> | class<`listForm`>, null | character[], any, ...> => class<`pdLogChol`, `pdMat`, `pdSymm`>;
type `pdConstruct.pdMat` <any, class<`matrix`> | class<`formula`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | double[] | class<`pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | character[] | list<class<`formula`>>, null | class<`formula`> | class<`listForm`>, character[] | null, any, ...> => (class<`matrix`> | class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>);
type `pdConstruct.pdNatural` <class<`pdMat`, `pdNatural`>, class<`matrix`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, null | class<`formula`> | class<`listForm`>, null | character[], any, ...> => class<`pdMat`, `pdNatural`>;
type `pdConstruct.pdSymm` <class<`pdMat`, `pdSymm`>, any, any, any, any, ...> => class<`pdMat`, `pdSymm`>;
type `pdDiag` <class<`formula`> | class<`matrix`>, null | class<`formula`>, null | character[], any> => class<`pdDiag`, `pdMat`>;
type `pdFactor` <class<`pdDiag`, `pdMat`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>> => (class<`matrix`> | double[]);
type `pdFactor.pdBlocked` <class<`pdBlocked`, `pdMat`>> => class<`matrix`>;
type `pdFactor.pdCompSymm` <class<`pdCompSymm`, `pdMat`>> => double[];
type `pdFactor.pdDiag` <class<`pdDiag`, `pdMat`>> => class<`matrix`>;
type `pdFactor.pdLogChol` <class<`pdLogChol`, `pdMat`, `pdSymm`>> => double[];
type `pdFactor.pdNatural` <class<`pdMat`, `pdNatural`>> => double[];
type `pdFactor.pdSymm` <class<`pdMat`, `pdSymm`>> => double[];
type `pdFactor.reStruct` <class<`reStruct`>> => double[];
type `pdIdent` <class<`formula`> | class<`matrix`>, null, null | character[], any> => class<`pdIdent`, `pdMat`>;
type `pdLogChol` <integer[] | class<`matrix`>, null, null | character[], any> => class<`pdLogChol`, `pdMat`, `pdSymm`>;
type `pdMat` <class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`matrix`> | class<`pdIdent`, `pdMat`> | double[] | class<`formula`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | character[] | class<`pdMat`, `pdSymm`> | list<class<`formula`>>, null | class<`formula`>, null | character[], any, any> => (class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>);
type `[<-.pdMat` <class<`pdMat`, `pdSymm`>, integer[], integer[], class<`matrix`>> => class<`pdMat`, `pdSymm`>;
type `[.pdMat` <class<`pdMat`, `pdSymm`>, double, any, logical> => class<`matrix`>;
type `pdMatrix` <class<`pdMat`, `pdSymm`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, logical> => (class<`matrix`> | list<class<`matrix`>>);
type `pdMatrix.pdBlocked` <class<`pdBlocked`, `pdMat`>, logical> => class<`matrix`>;
type `pdMatrix.pdCompSymm` <class<`pdCompSymm`, `pdMat`>, logical> => class<`matrix`>;
type `pdMatrix.pdDiag` <class<`pdDiag`, `pdMat`>, logical> => class<`matrix`>;
type `pdMatrix.pdIdent` <class<`pdIdent`, `pdMat`>, logical> => class<`matrix`>;
type `pdMatrix.pdMat` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, logical> => class<`matrix`>;
type `pdMatrix.pdNatural` <class<`pdMat`, `pdNatural`>, logical> => class<`matrix`>;
type `pdMatrix.pdSymm` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, logical> => class<`matrix`>;
type `pdMatrix.reStruct` <class<`reStruct`>, logical> => list<class<`matrix`>>;
type `pdNatural` <class<`matrix`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, null, null, any> => class<`pdMat`, `pdNatural`>;
type `pdSymm` <double[] | class<`formula`> | class<`matrix`>, null | class<`formula`>, null | character[], any> => class<`pdMat`, `pdSymm`>;
type `plot.ACF` <class<`ACF`, `data.frame`>, double, character, character, logical, ...> => class<`trellis`>;
type `plot.augPred` <class<`augPred`, `data.frame`>, logical, logical, ...> => class<`trellis`>;
type `plot.compareFits` <class<`compareFits`>, any, logical, null, ...> => class<`trellis`>;
type `plot.gls` <class<`gls`> | class<`gls`, `gnls`>, class<`formula`>, any, null, null, any, any, ...> => class<`trellis`>;
type `plot.intervals.lmList` <class<`intervals.lmList`>, character, character, class<`function`>, ...> => class<`trellis`>;
type `plot.lme` <class<`gls`> | class<`gls`, `gnls`> | class<`lme`>, class<`formula`>, any, null, null, any, any, ...> => class<`trellis`>;
type `plot.lmList` <class<`lmList`>, class<`formula`>, any, null | double, null, any, ...> => class<`trellis`>;
type `plot.nffGroupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`>, null, logical | null, null, character, character, class<`function`>, class<`function`>, logical, any, ...> => class<`trellis`>;
type `plot.nfnGroupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, null | logical, null | class<`formula`>, null | class<`formula`>, character, character, class<`function`>, character, class<`function`>, logical, logical, ...> => class<`trellis`>;
type `plot.nmGroupedData` <class<`data.frame`, `groupedData`, `nmGroupedData`>, character | integer, character, null, null | class<`formula`>, class<`formula`> | null, any, null, logical, logical, ...> => class<`trellis`>;
type `plot.ranef.lme` <class<`data.frame`, `ranef.lmList`> | class<`data.frame`, `ranef.lme`>, class<`formula`> | null, logical, any, any, any, null | character, null | character, null, ...> => class<`trellis`>;
type `plot.ranef.lmList` <class<`data.frame`, `ranef.lmList`>, class<`formula`> | null, logical, any, ...> => class<`trellis`>;
type `plot.Variogram` <class<`Variogram`, `data.frame`>, any, any, null, double, character, character, character, any, logical, ...> => class<`trellis`>;
type `pooledSD` <class<`lmList`> | class<`lmList`, `nlsList`>> => double;
type `predict.gls` <class<`gls`>, class<`data.frame`>, class<`function`>, ...> => double[];
type `predict.gnls` <class<`gls`, `gnls`>, any, any, null, ...> => double[];
type `predict.lme` <class<`lme`>, any, double[], logical, any, ...> => (class<`data.frame`> | double[]);
type `predict.lmList` <class<`lmList`>, any, null, logical, logical, logical, ...> => class<`data.frame`>;
type `predict.nlme` <class<`lme`, `nlme`>, any, integer[] | double, logical, any, null, ...> => (class<`data.frame`> | ^double[]);
type `print.compareFits` <class<`compareFits`>, ...> => class<`compareFits`>;
type `print.summary.pdMat` <class<`summary.pdMat`>, double, double, null, logical, ...> => class<`matrix`>;
type `print.varFunc` <class<`varFunc`, `varPower`>, ...> => class<`varFunc`, `varPower`>;
type `qqnorm.gls` <class<`gls`>, class<`formula`>, double[], null, null, logical, ...> => class<`trellis`>;
type `qqnorm.lme` <class<`lme`>, class<`formula`>, double[] | null, null, null, logical, ...> => class<`trellis`>;
type `random.effects` <class<`lme`> | class<`lmList`> | class<`lme`, `nlme`>, ...> => (class<`data.frame`, `ranef.lme`> | class<`data.frame`, `ranef.lmList`>);
type `ranef` <class<`lme`> | class<`lmList`> | class<`lme`, `nlme`>, ...> => (class<`data.frame`, `ranef.lme`> | class<`data.frame`, `ranef.lmList`>);
type `ranef.lme` <class<`lme`> | class<`lme`, `nlme`>, logical, integer, any, any, any, logical, logical, null, ...> => class<`data.frame`, `ranef.lme`>;
type `ranef.lmList` <class<`lmList`>, logical, null, null, any, logical, logical, ...> => class<`data.frame`, `ranef.lmList`>;
type `recalc` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `modelStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`reStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`corARMA`, `corStruct`> | class<`corCAR1`, `corStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`>, any, ...> => list<any>;
type `recalc.corAR1` <class<`corAR1`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corARMA` <class<`corARMA`, `corStruct`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<class<`matrix`> | double | list<double[] | list<double[]>>>;
type `recalc.corCAR1` <class<`corCAR1`, `corStruct`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<class<`matrix`> | double | list<double[] | list<double[]>>>;
type `recalc.corCompSymm` <class<`corCompSymm`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corNatural` <class<`corNatural`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corSymm` <class<`corStruct`, `corSymm`>, list<any>, ...> => list<any>;
type `recalc.modelStruct` <class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `recalc.reStruct` <class<`reStruct`>, list<any>, ...> => list<any>;
type `recalc.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `recalc.varIdent` <class<`varFunc`, `varIdent`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `residuals.gls` <class<`gls`> | class<`gls`, `gnls`>, character[], ...> => ^double[];
type `residuals.gnls` <class<`gls`> | class<`gls`, `gnls`>, character[], ...> => ^double[];
type `residuals.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, ...> => double[];
type `residuals.lme` <class<`lme`> | class<`lme`, `nlme`>, integer[], character[], logical, ...> => (class<`matrix`> | ^double[] | list<double[]>);
type `residuals.lmList` <class<`lmList`, `nlsList`> | class<`lmList`>, character[], null, logical, ...> => ^double[];
type `residuals.nlmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, integer[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => class<`matrix`>;
type `reStruct` <class<`formula`> | class<`reStruct`> | class<`pdBlocked`, `pdMat`> | class<`pdCompSymm`, `pdMat`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | list<any>, character, logical, null | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment | class<`data.frame`, `groupedData`, `nmGroupedData`>> => class<`reStruct`>;
type `[.reStruct` <class<`reStruct`>, ...> => class<`reStruct`>;
type `sigma.gls` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ...> => double;
type `sigma.lme` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ...> => double;
type `simulate.lme` <class<`lme`> | list<class<`formula`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>>, double, double, any, character[], double[], any, ...> => class<`simulate.lme`>;
type `solve.pdBlocked` <class<`pdBlocked`, `pdMat`>, any, ...> => class<`pdBlocked`, `pdMat`>;
type `solve.pdDiag` <class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>, any, ...> => (class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>);
type `solve.pdIdent` <class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>, any, ...> => (class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>);
type `solve.pdLogChol` <class<`pdLogChol`, `pdMat`, `pdSymm`>, any, ...> => class<`pdLogChol`, `pdMat`, `pdSymm`>;
type `solve.pdMat` <class<`pdCompSymm`, `pdMat`>, any, ...> => class<`pdCompSymm`, `pdMat`>;
type `solve.pdNatural` <class<`pdMat`, `pdNatural`>, any, ...> => class<`pdMat`, `pdNatural`>;
type `solve.pdSymm` <class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>, any, ...> => (class<`pdDiag`, `pdMat`> | class<`pdIdent`, `pdMat`> | class<`pdMat`, `pdSymm`>);
type `solve.reStruct` <class<`reStruct`>, any, ...> => class<`reStruct`>;
type `splitFormula` <class<`call`> | class<`name`> | class<`formula`>, any> => list<class<`formula`>>;
type `summary.corAR1` <class<`corAR1`, `corStruct`>, character, ...> => class<`summary.corStruct`>;
type `summary.corStruct` <class<`corAR1`, `corStruct`>, character, ...> => class<`summary.corStruct`>;
type `summary.gls` <class<`gls`, `gnls`> | class<`gls`>, logical, ...> => (class<`gls`, `gnls`, `summary.gls`> | class<`gls`, `summary.gls`>);
type `summary.lme` <class<`lme`, `nlme`> | class<`lme`>, logical, logical, ...> => (class<`lme`, `nlme`, `summary.lme`> | class<`lme`, `summary.lme`>);
type `summary.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, logical, ...> => class<`summary.lmList`>;
type `summary.modelStruct` <class<`lmeStruct`, `modelStruct`>, ...> => class<`summary.modelStruct`>;
type `summary.nlsList` <class<`lmList`, `nlsList`>, ...> => class<`summary.lmList`, `summary.nlsList`>;
type `summary.pdCompSymm` <class<`pdCompSymm`, `pdMat`>, character, ...> => class<`summary.pdMat`>;
type `summary.pdLogChol` <class<`pdLogChol`, `pdMat`, `pdSymm`>, character, ...> => class<`summary.pdMat`>;
type `summary.pdMat` <class<`pdMat`, `pdSymm`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdCompSymm`, `pdMat`>, character, logical, ...> => class<`summary.pdMat`>;
type `summary.pdSymm` <class<`pdMat`, `pdSymm`>, character, ...> => class<`summary.pdMat`>;
type `summary.reStruct` <class<`reStruct`>, ...> => class<`reStruct`>;
type `summary.varFunc` <class<`varFunc`, `varPower`>, character, ...> => class<`summary.varFunc`>;
type `summary.varPower` <class<`varFunc`, `varPower`>, character, ...> => class<`summary.varFunc`>;
type `svd.d` <class<`matrix`>> => double[];
type `terms.gls` <class<`gls`>, ...> => class<`formula`, `terms`>;
type `update.corStruct` <class<`corAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, any, ...> => (class<`corAR1`, `corStruct`> | class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>);
type `update.gls` <class<`gls`>, any, ..., logical> => (class<`call`> | class<`gls`>);
type `update.gnls` <class<`gls`, `gnls`>, any, ..., logical> => class<`gls`, `gnls`>;
type `update.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, any, any, any, any, ...> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `update.lme` <class<`lme`>, any, ..., logical> => (class<`call`> | class<`lme`>);
type `update.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>, class<`data.frame`>, ...> => (class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>);
type `update.nlme` <class<`lme`, `nlme`>, any, ..., logical> => class<`lme`, `nlme`>;
type `update.reStruct` <class<`reStruct`>, any, ...> => class<`reStruct`>;
type `update.varFunc` <class<`varFunc`, `varPower`>, list<any>, ...> => class<`varFunc`, `varPower`>;
type `update.varPower` <class<`varFunc`, `varPower`>, list<any>, ...> => class<`varFunc`, `varPower`>;
type `varComb` <...> => class<`varComb`, `varFunc`>;
type `varConstPower` <double, double, class<`formula`>, null> => class<`varConstPower`, `varFunc`>;
type `VarCorr` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`lme`> | class<`lme`, `nlme`>, double, ...> => (class<`matrix`> | class<`VarCorr.lme`>);
type `VarCorr.lme` <class<`lme`> | class<`lme`, `nlme`>, double, double, ...> => class<`VarCorr.lme`>;
type `VarCorr.pdMat` <class<`pdLogChol`, `pdMat`, `pdSymm`>, double, any, ...> => class<`matrix`>;
type `varExp` <double[], class<`formula`>, null> => class<`varExp`, `varFunc`>;
type `varFixed` <class<`formula`>> => class<`varFixed`, `varFunc`>;
type `varFunc` <class<`formula`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | null> => (class<`varFixed`, `varFunc`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | null);
type `varIdent` <double[], class<`formula`>, double | null> => class<`varFunc`, `varIdent`>;
type `Variogram` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`> | double[] | class<`gls`> | class<`lme`>, any, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corExp` <class<`corExp`, `corSpatial`, `corStruct`>, null, double, double, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corGaus` <class<`corGaus`, `corSpatial`, `corStruct`>, null, double, double, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corLin` <class<`corLin`, `corSpatial`, `corStruct`>, null, double, double, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corRatio` <class<`corRatio`, `corSpatial`, `corStruct`>, null, double, double, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corSpatial` <class<`corExp`, `corSpatial`, `corStruct`> | class<`corGaus`, `corSpatial`, `corStruct`> | class<`corLin`, `corSpatial`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corSpatial`, `corSpher`, `corStruct`>, null, double, double, class<`function`>, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.corSpher` <class<`corSpatial`, `corSpher`, `corStruct`>, null, double, double, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.default` <double[], class<`dist`>, ...> => class<`Variogram`, `data.frame`>;
type `Variogram.gls` <class<`gls`>, any, class<`formula`>, character[], any, class<`function`>, any, double, character[], double, any, logical, character[], ...> => class<`Variogram`, `data.frame`>;
type `Variogram.lme` <class<`lme`>, any, class<`formula`>, character[], any, class<`function`>, any, double, character[], double, any, logical, character[], ...> => class<`Variogram`, `data.frame`>;
type `varPower` <double[], class<`formula`>, null> => class<`varFunc`, `varPower`>;
type `varWeights` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`> | class<`varExp`, `varFunc`>> => (double[] | null);
type `varWeights.glsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`>> => double[];
type `varWeights.lmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>> => double[];
type `varWeights.varFunc` <class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`> | class<`varExp`, `varFunc`>> => (double[] | null);
