type `::` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ..., logical, any, logical, any, any, logical> => class<`anova.lme`, `data.frame`> | <class<`formula`>, class<`data.frame`>, logical, class<`function`>, null | class<`formula`>, null, null | list<character>, null | list<character>> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>) | <class<`formula`>, class<`data.frame`>, list<logical>, class<`function`>, null, null, list<character>, list<character>> => class<`data.frame`, `groupedData`, `nmGroupedData`>;
type `ACF` <class<`gls`> | class<`lme`>, any, ...> => class<`ACF`, `data.frame`>;
type `ACF.gls` <class<`gls`>, any, character[], class<`formula`>, class<`function`>, ...> => class<`ACF`, `data.frame`>;
type `ACF.lme` <class<`lme`>, double, character[], ...> => class<`ACF`, `data.frame`>;
type `allCoef` <..., class<`function`>> => double[];
type `allVarsRec` <class<`formula`> | class<`formula`, `terms`> | class<`listForm`> | null | list<any>> => (character[] | null);
type `anova.gls` <class<`gls`>, ..., logical, any, null, any, any, logical> => class<`anova.lme`, `data.frame`>;
type `anova.lme` <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>, ..., logical, any, logical, any, any, logical> => class<`anova.lme`, `data.frame`>;
type `as.data.frame.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, null, logical, ...> => class<`data.frame`>;
type `as.matrix.corStruct` <class<`corAR1`, `corStruct`>, ...> => list<class<`matrix`>>;
type `as.matrix.pdMat` <class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `as.matrix.reStruct` <class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>, ...> => (class<`matrix`> | list<class<`matrix`>>);
type `asOneFormula` <..., character[] | list<character>> => class<`formula`>;
type `asTable` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`table`>;
type `asTable.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`table`>;
type `augPred` <class<`lme`>, null, any, any, double, ...> => class<`augPred`, `data.frame`>;
type `augPred.lme` <class<`lme`>, null, double, double, double, double[], ...> => class<`augPred`, `data.frame`>;
type `balancedGrouped` <class<`formula`>, class<`table`>, null | list<character>, null | list<character>> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>);
type `c_deparse` <...> => character;
type `checkForList` <null | list<logical>, any, logical> => (null | list<logical>);
type `coef<-` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ..., double[]> => (class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>);
type `coef<-.corAR1` <class<`corAR1`, `corStruct`>, ..., double> => class<`corAR1`, `corStruct`>;
type `coef.corAR1` <class<`corAR1`, `corStruct`>, logical, ...> => double;
type `coef.corARMA` <class<`corARMA`, `corStruct`>, logical, ...> => double[];
type `coef<-.corCompSymm` <class<`corCompSymm`, `corStruct`>, ..., double> => class<`corCompSymm`, `corStruct`>;
type `coef.corCompSymm` <class<`corCompSymm`, `corStruct`>, logical, ...> => double;
type `coef<-.corNatural` <class<`corNatural`, `corStruct`>, ..., double[]> => class<`corNatural`, `corStruct`>;
type `coef.corNatural` <class<`corNatural`, `corStruct`>, logical, ...> => double[];
type `coef<-.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, ..., double[]> => class<`corRatio`, `corSpatial`, `corStruct`>;
type `coef.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, logical, ...> => double[];
type `coef<-.corSymm` <class<`corStruct`, `corSymm`>, ..., double[]> => class<`corStruct`, `corSymm`>;
type `coef.corSymm` <class<`corStruct`, `corSymm`>, logical, ...> => double[];
type `coef.gls` <class<`gls`>, logical, ...> => double[];
type `coef.gnls` <class<`gls`, `gnls`>, ...> => double[];
type `coef.lme` <class<`lme`>, logical, integer, any, any, any, logical, null, ...> => class<`coef.lme`, `data.frame`, `ranef.lme`>;
type `coef.lmList` <class<`lmList`, `nlsList`> | class<`lmList`>, logical, null, null, any, logical, ...> => class<`coef.lmList`, `data.frame`, `ranef.lmList`>;
type `coef<-.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>, ..., double[]> => (class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>);
type `coef.modelStruct` <class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`reStruct`>, logical, ...> => (double[] | null);
type `coef.pdDiag` <class<`pdDiag`, `pdMat`>, logical, ...> => double[];
type `coef<-.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`>, ..., double[]> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`>);
type `coef.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>, logical, ...> => double[];
type `coef.pdNatural` <class<`pdMat`, `pdNatural`>, logical, ...> => double[];
type `coef.pdSymm` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, logical, ...> => double[];
type `coef<-.reStruct` <class<`reStruct`>, ..., double[]> => class<`reStruct`>;
type `coef.reStruct` <class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`reStruct`>, logical, ...> => (double[] | null);
type `coef<-.varIdent` <class<`varFunc`, `varIdent`>, ..., double[]> => class<`varFunc`, `varIdent`>;
type `coef.varIdent` <class<`varFunc`, `varIdent`>, logical, logical, ...> => double[];
type `coef<-.varPower` <class<`varFunc`, `varPower`>, ..., double> => class<`varFunc`, `varPower`>;
type `coef.varPower` <class<`varFunc`, `varPower`>, any, logical, ...> => double;
type `collapse` <class<`data.frame`, `groupedData`, `nmGroupedData`>, ...> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `collapse.groupedData` <class<`data.frame`, `groupedData`, `nmGroupedData`>, double, double, null, null, null, class<`function`>, null, ...> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `corAR1` <double, class<`formula`>, logical> => class<`corAR1`, `corStruct`>;
type `corARMA` <double[], class<`formula`>, double, double, logical> => class<`corARMA`, `corStruct`>;
type `corCompSymm` <double, class<`formula`>, logical> => class<`corCompSymm`, `corStruct`>;
type `corFactor` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`>, ...> => double[];
type `corFactor.corAR1` <class<`corAR1`, `corStruct`>, ...> => double[];
type `corFactor.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, ...> => double[];
type `corFactor.corStruct` <class<`corCompSymm`, `corStruct`>, ...> => double[];
type `corFactor.corSymm` <class<`corStruct`, `corSymm`>, ...> => double[];
type `corMatrix` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`>, ...> => list<class<`matrix`>>;
type `corMatrix.corAR1` <class<`corAR1`, `corStruct`>, list<integer[]>, logical, ...> => list<class<`matrix`>>;
type `corMatrix.corCompSymm` <class<`corCompSymm`, `corStruct`>, list<integer[]>, logical, ...> => list<class<`matrix`>>;
type `corRatio` <double[], class<`formula`>, logical, character[], logical> => class<`corRatio`, `corSpatial`, `corStruct`>;
type `corSymm` <double[], class<`formula`>, logical> => class<`corStruct`, `corSymm`>;
type `covariate<-` <class<`varFunc`, `varPower`>, double[]> => class<`varFunc`, `varPower`>;
type `covariate<-.varFunc` <class<`varFunc`, `varPower`>, double[]> => class<`varFunc`, `varPower`>;
type `Dim` <class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corRatio`, `corSpatial`, `corStruct`>, ...> => (double[] | list<double | class<`table`> | integer[] | double | class<`table`>>);
type `Dim.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, any, ...> => list<double | class<`table`>>;
type `Dim.corStruct` <any, any, ...> => list<double | class<`table`> | double | class<`table`> | integer[]>;
type `Dim.pdDiag` <class<`pdDiag`, `pdMat`>, ...> => integer[];
type `Dim.pdNatural` <class<`pdMat`, `pdNatural`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => double[];
type `Dim.pdSymm` <class<`pdMat`, `pdNatural`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => double[];
type `fdHess` <double[], class<`function`>, ..., double, double> => list<double[] | class<`matrix`>>;
type `filter` <character[]> => logical[];
type `fitted.glsStruct` <class<`glsStruct`, `modelStruct`>, list<double[] | class<`matrix`> | class<`logLik`> | double[] | class<`matrix`>>, ...> => double[];
type `fitted.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, ...> => double[];
type `fitted.lme` <class<`lme`>, integer, logical, ...> => double[];
type `fitted.lmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>, integer[], list<class<`matrix`> | double | list<double[] | list<double[]>> | class<`matrix`> | list<double[] | list<double[]>>>, list<any>, ...> => (class<`matrix`> | double[]);
type `fixef` <class<`lme`>, ...> => double[];
type `fixef.lme` <class<`lme`>, ...> => double[];
type `form2list` <class<`formula`>, class<`data.frame`>, any> => class<`data.frame`>;
type `formula.corStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `formula.gls` <class<`gls`>, ...> => class<`formula`>;
type `formula.groupedData` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `formula.lme` <class<`lme`>, ...> => class<`formula`>;
type `formula.modelStruct` <class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`>, ...> => list<any>;
type `formula.nlme` <class<`lme`, `nlme`>, ...> => class<`formula`>;
type `formula.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, any, ...> => (class<`formula`> | class<`listForm`>);
type `formula.reStruct` <class<`reStruct`>, logical, ...> => list<class<`formula`> | class<`listForm`>>;
type `formula.varFunc` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, ...> => class<`formula`>;
type `fun` <any, character> => null;
type `FUN` <class<`formula`> | class<`formula`, `terms`> | class<`listForm`> | null | list<any>> => (character[] | null) | <...> => character | <double | integer[]> => (double | integer[]) | <class<`pdLogChol`, `pdMat`, `pdSymm`>, null> => class<`pdLogChol`, `pdMat`, `pdSymm`> | <class<`name`> | class<`call`> | class<`formula`>, any> => list<class<`formula`>> | <double | integer[]> => integer | <double | integer[], logical[]> => logical | <class<`pdDiag`, `pdMat`> | class<`formula`> | class<`pdMat`, `pdSymm`> | list<class<`formula`>>, any, null | environment | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>) | <class<`nls`>> => double[] | <class<`formula`>> => character | <class<`formula`>, class<`data.frame`>, any> => class<`data.frame`> | <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>> => (class<`matrix`> | double[]) | <double[], double> => class<`matrix`> | <class<`factor`> | class<`AsIs`> | double[]> => (class<`matrix`> | null) | <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, any, ...> => (class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>) | <class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | list<class<`formula`>>> => character | <double[], class<`glsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer>>, list<integer>, integer> => (class<`logLik`> | double) | <double[]> => class<`matrix`> | <class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`>> => (class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`>) | <class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, logical> => (class<`matrix`> | list<class<`matrix`>>) | <double[]> => double | <class<`formula`>> => character | <class<`formula`>> => list<class<`formula`>> | <class<`data.frame`>> => class<`data.frame`> | <class<`matrix`>> => double[] | <class<`matrix`>> => double[] | <logical[]> => integer[] | <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>> => class<`formula`> | <class<`call`>> => character | <double[], class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>, list<double[] | list<double[]>>, double, double[]> => (class<`logLik`> | double) | <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>> => class<`call`> | <class<`formula`>> => character | <double[]> => double[] | <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>> => integer | <class<`formula`>> => (character | null) | <class<`listForm`>, character> => logical | <class<`matrix`>> => double[] | <double[]> => double | <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>> => integer | <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>> => character | <class<`formula`>> => character | <class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`>> => integer | <class<`matrix`>> => double[] | <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`lm`> | <class<`factor`> | class<`factor`, `ordered`> | double[], integer[]> => logical | <double[], class<`glsStruct`, `gnlsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer>>, integer> => class<`logLik`> | <class<`factor`> | class<`AsIs`> | double[]> => (class<`matrix`> | null) | <class<`formula`>> => logical | <class<`factor`> | class<`factor`, `ordered`>> => (class<`factor`> | class<`factor`, `ordered`>) | <double[], integer> => class<`matrix`> | <class<`nls`>> => double[] | <double[], double> => logical | <double[]> => null | <class<`formula`>> => list<class<`formula`>> | <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>> => logical | <character> => class<`formula`> | <class<`factor`, `ordered`>> => integer[] | <class<`formula`>> => logical | <class<`formula`>, any> => (class<`factor`> | class<`factor`, `ordered`>) | <double[]> => class<`matrix`> | <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>> => logical | <double[], integer[]> => integer | <character[]> => character | <double[]> => double[] | <class<`summary.nls`>> => character[] | <class<`nls`>> => class<`summary.nls`> | <class<`formula`>> => logical | <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>> => class<`nls`> | <class<`gls`> | class<`lme`> | class<`lme`, `nlme`>> => character | <class<`matrix`>> => integer | <class<`formula`>> => logical;
type `getCovariate` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`varFunc`, `varPower`> | class<`corAR1`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corCompSymm`, `corStruct`>, any, any> => (class<`factor`> | double[] | null | list<double[]>);
type `getCovariate.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, any, any> => double[];
type `getCovariate.corStruct` <class<`corAR1`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`corCompSymm`, `corStruct`>, any, any> => list<double[]>;
type `getCovariate.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, class<`formula`>, any> => (class<`factor`> | double[]);
type `getCovariateFormula` <class<`call`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`varFunc`, `varPower`>> => class<`formula`>;
type `getCovariate.varFunc` <class<`varFunc`, `varPower`>, any, any> => (double[] | null);
type `getData` <class<`gls`> | class<`lme`> | class<`lmList`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.gls` <class<`gls`> | class<`lme`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.lme` <class<`gls`> | class<`lme`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getData.lmList` <class<`lmList`>> => class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>;
type `getFixDF` <class<`matrix`>, class<`data.frame`>, integer[], integer[] | list<double>, any> => list<double[]>;
type `getGroups` <class<`varFunc`, `varIdent`> | class<`data.frame`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`lmList`> | class<`lmList`, `nlsList`> | class<`lme`> | class<`gls`> | class<`varFunc`, `varPower`>, any, any, any, character> => (character[] | class<`data.frame`> | class<`factor`> | class<`factor`, `ordered`> | null);
type `getGroups.corStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, any, any, any, any> => class<`factor`, `ordered`>;
type `getGroups.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`formula`> | list<class<`formula`>>, any, any, character> => (class<`data.frame`> | class<`factor`> | class<`factor`, `ordered`>);
type `getGroupsFormula` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`lmList`> | class<`lmList`, `nlsList`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`varFunc`, `varPower`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`>, logical, any> => (class<`formula`> | null | list<class<`formula`>>);
type `getGroupsFormula.default` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`varFunc`, `varIdent`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`varFunc`, `varPower`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`>, logical, any> => (class<`formula`> | null | list<class<`formula`>>);
type `getGroupsFormula.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, logical, any> => (class<`formula`> | list<class<`formula`>>);
type `getGroupsFormula.reStruct` <class<`reStruct`>, logical, any> => (class<`formula`> | null);
type `getGroups.gls` <class<`gls`>, any, any, any, any> => null;
type `getGroups.lme` <class<`lme`>, any, double, any, any> => class<`factor`, `ordered`>;
type `getGroups.lmList` <class<`lmList`> | class<`lmList`, `nlsList`>, any, any, any, any> => class<`factor`, `ordered`>;
type `getGroups.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, any, any, any, any> => (character[] | null);
type `getParsGnls` <list<logical>, list<double>, double[], integer> => class<`matrix`>;
type `getParsNlme` <list<list<logical | list<logical>>>, list<double>, any, any, any, double[], any, any, integer, integer> => class<`matrix`>;
type `getResponse` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`lme`>, any> => double[];
type `getResponse.data.frame` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`formula`>> => double[];
type `getResponseFormula` <class<`call`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`formula`> | class<`gls`> | class<`lme`> | class<`lme`, `nlme`>> => class<`formula`>;
type `getResponse.lme` <class<`lme`>, any> => double[];
type `gls` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`corRatio`, `corSpatial`, `corStruct`> | null | class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, null | class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`>, any, character[], class<`function`>, any, logical> => class<`gls`>;
type `glsApVar` <class<`glsStruct`, `modelStruct`>, any, any, any, any, any> => (class<`matrix`> | null);
type `glsControl` <integer, integer, double, double, logical, logical, logical, logical, double, character[], character, double> => list<double | character>;
type `glsEstimate` <class<`glsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer>>, list<logical>> => list<class<`logLik`> | double[] | class<`matrix`> | double[] | class<`matrix`>>;
type `glsStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | null, class<`varFunc`, `varPower`> | null | class<`varFunc`, `varIdent`>> => class<`glsStruct`, `modelStruct`>;
type `gnls` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, null, class<`varFunc`, `varPower`>, any, class<`function`>, any, any, logical> => class<`gls`, `gnls`>;
type `gnlsApVar` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, double, list<any>, double, double, logical> => class<`matrix`>;
type `gnlsControl` <double, double, double, double, double, double, double, logical, logical, logical, double, character[]> => list<double | character>;
type `gnlsStruct` <null, class<`varFunc`, `varPower`>> => class<`glsStruct`, `gnlsStruct`, `modelStruct`>;
type `groupedData` <class<`formula`>, any, logical | list<logical>, any, any, null, any, any> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>);
type `[.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, any, any, any> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`> | class<`factor`>);
type `gsummary` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`data.frame`, `groupedData`, `nmGroupedData`>, any, logical, any, any, class<`factor`, `ordered`> | character[], logical, ...> => class<`data.frame`>;
type `Initialize` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, any, ...> => (class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>);
type `Initialize.corAR1` <class<`corAR1`, `corStruct`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => class<`corAR1`, `corStruct`>;
type `Initialize.corCompSymm` <class<`corCompSymm`, `corStruct`>, class<`data.frame`>, ...> => class<`corCompSymm`, `corStruct`>;
type `Initialize.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, class<`data.frame`>, ...> => class<`corRatio`, `corSpatial`, `corStruct`>;
type `Initialize.corStruct` <class<`corRatio`, `corSpatial`, `corStruct`> | class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>, class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, ...> => (class<`corRatio`, `corSpatial`, `corStruct`> | class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corStruct`, `corSymm`>);
type `Initialize.corSymm` <class<`corStruct`, `corSymm`>, class<`data.frame`>, ...> => class<`corStruct`, `corSymm`>;
type `Initialize.glsStruct` <class<`glsStruct`, `modelStruct`>, any, any, ...> => class<`glsStruct`, `modelStruct`>;
type `Initialize.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, class<`data.frame`>, ...> => class<`glsStruct`, `gnlsStruct`, `modelStruct`>;
type `Initialize.lmeStruct` <class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`, `nlmeStruct`>, any, any, list<class<`matrix`> | double | list<double[] | list<double[]>>>, list<double | character>, ...> => (class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>);
type `Initialize.reStruct` <class<`reStruct`>, any, list<class<`matrix`> | double | list<double[] | list<double[]>>>, list<double | character>, ...> => class<`reStruct`>;
type `Initialize.varFunc` <class<`varFunc`, `varPower`>, class<`data.frame`>, ...> => class<`varFunc`, `varPower`>;
type `Initialize.varIdent` <class<`varFunc`, `varIdent`>, class<`data.frame`>, ...> => class<`varFunc`, `varIdent`>;
type `Initialize.varPower` <class<`varFunc`, `varPower`>, class<`data.frame`>, ...> => class<`varFunc`, `varPower`>;
type `isInitialized` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>> => logical;
type `isInitialized.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>> => logical;
type `isInitialized.reStruct` <class<`reStruct`>> => logical;
type `lme` <class<`formula`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, null, null | class<`varFunc`, `varIdent`>, any, any, any, any, null, logical> => class<`lme`>;
type `lmeApVar` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>, double, list<class<`matrix`> | double | list<double[] | list<double[]>>>, double, double, any> => (character | class<`matrix`>);
type `lmeControl` <double, double, double, double, double, double, logical, logical, logical, logical, double, double> => list<double | character>;
type `lme.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, class<`formula`> | class<`pdDiag`, `pdMat`>, null, class<`varFunc`, `varPower`> | null | class<`varFunc`, `varIdent`>, any, character[], class<`function`>, any, null, logical> => class<`lme`>;
type `lme.groupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, null, null, any, any, any, any, null, logical> => class<`lme`>;
type `lmeStruct` <class<`reStruct`>, null | class<`corAR1`, `corStruct`>, null | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>> => class<`lmeStruct`, `modelStruct`>;
type `lmList` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, logical, logical> => class<`lmList`>;
type `lmList.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, class<`function`>, logical, logical> => class<`lmList`>;
type `logLik.gls` <class<`gls`>, logical, ...> => class<`logLik`>;
type `logLik.glsStruct` <class<`glsStruct`, `modelStruct`>, double[], list<class<`matrix`> | double | list<integer>>, ...> => double;
type `logLik.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, double, list<class<`matrix`> | double | list<integer>>, ...> => class<`logLik`>;
type `logLik.lme` <class<`lme`> | class<`lme`, `nlme`>, logical, ...> => class<`logLik`>;
type `logLik.lmeStruct` <class<`lmeStruct`, `modelStruct`>, double[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => class<`logLik`>;
type `logLik.lmeStructInt` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`>, double[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => double;
type `logLik.reStruct` <class<`reStruct`>, list<any>, ...> => double;
type `logLik.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, any, ...> => (class<`logLik`> | null);
type `matrix<-` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>, class<`matrix`>> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>);
type `matrix<-.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, class<`matrix`>> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>);
type `matrix<-.reStruct` <class<`reStruct`>, class<`matrix`>> => class<`reStruct`>;
type `MEdecomp` <list<class<`matrix`> | double | list<double[] | list<double[]>>>> => list<class<`matrix`> | double | list<double[] | list<double[]>>>;
type `MEdims` <class<`data.frame`>, double[]> => list<double[] | list<double[]>>;
type `MEEM` <class<`reStruct`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>, double> => class<`reStruct`>;
type `MEestimate` <class<`lmeStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`>, class<`data.frame`>, list<class<`matrix`> | double | list<double[] | list<double[]>>>> => list<any>;
type `model.matrix.reStruct` <class<`reStruct`>, class<`data.frame`>, null, ...> => class<`matrix`>;
type `Names` <class<`formula`> | class<`listForm`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => (character[] | null);
type `Names<-` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>, ..., character[] | list<character[]>> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`reStruct`>);
type `Names.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment | integer | null, any, ...> => (character[] | null);
type `Names.listForm` <class<`listForm`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment | integer | null, any, ...> => (character[] | null);
type `Names<-.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, ..., character[]> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>);
type `Names.pdMat` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>, ...> => character[];
type `Names<-.reStruct` <class<`reStruct`>, ..., list<character[]>> => class<`reStruct`>;
type `needUpdate` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>> => logical;
type `needUpdate.corStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `needUpdate.default` <class<`varFunc`, `varPower`>> => logical;
type `needUpdate.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>> => logical;
type `needUpdate.reStruct` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `needUpdate.varIdent` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`reStruct`> | class<`varFunc`, `varIdent`>> => logical;
type `nfGroupedData` <class<`formula`>, class<`data.frame`>, logical, class<`function`>, null | class<`formula`>, null, null | list<character>, null | list<character>> => (class<`data.frame`, `groupedData`, `nfGroupedData`, `nffGroupedData`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>);
type `nlme` <class<`lmList`, `nlsList`>, any, any, any, any, any, null, null, any, any, any, any> => class<`lme`, `nlme`>;
type `nlmeControl` <double, double, double, double, double, double, double, double, logical, logical, logical, logical> => list<double | character>;
type `nlme.nlsList` <class<`lmList`, `nlsList`>, any, any, any, any, any, null, null, any, character[], any, any> => class<`lme`, `nlme`>;
type `nlmeStruct` <class<`reStruct`>, null, null> => class<`lmeStruct`, `modelStruct`, `nlmeStruct`>;
type `nlsList` <class<`formula`> | class<`selfStart`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, any, logical, null> => class<`lmList`, `nlsList`>;
type `nlsList.formula` <class<`formula`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, null, any, any, any, class<`function`>, logical, null> => class<`lmList`, `nlsList`>;
type `nlsList.selfStart` <class<`selfStart`>, class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any, any, any, any, any, logical, null> => class<`lmList`, `nlsList`>;
type `nonlinModel` <class<`formula`>, environment, character[]> => class<`function`>;
type `objective` <double[]> => double | <double[]> => double | <double> => class<`logLik`> | <double[]> => (class<`logLik`> | double);
type `offsets` <double, double[], list<double[]>, logical> => list<double[]>;
type `pdConstruct` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>, any, any, any, any, ...> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`>);
type `pdConstruct.pdDiag` <class<`pdDiag`, `pdMat`>, any, any, any, any, ...> => class<`pdDiag`, `pdMat`>;
type `pdConstruct.pdLogChol` <class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, class<`formula`> | class<`matrix`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | list<class<`formula`>>, null | class<`listForm`> | class<`formula`>, null | character[], null | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | integer, ...> => class<`pdLogChol`, `pdMat`, `pdSymm`>;
type `pdConstruct.pdMat` <any, class<`matrix`> | class<`formula`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | double[] | class<`pdMat`, `pdSymm`> | list<class<`formula`>>, class<`formula`> | class<`listForm`> | null, character[] | null, any, ...> => (class<`matrix`> | class<`pdLogChol`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`>);
type `pdConstruct.pdNatural` <class<`pdMat`, `pdNatural`>, class<`matrix`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, class<`formula`> | class<`listForm`> | null, character[] | null, environment, ...> => class<`pdMat`, `pdNatural`>;
type `pdConstruct.pdSymm` <class<`pdMat`, `pdSymm`>, class<`matrix`> | class<`pdMat`, `pdSymm`>, null | class<`formula`>, null | character[], any, ...> => class<`pdMat`, `pdSymm`>;
type `pdDiag` <class<`formula`> | class<`matrix`>, null | class<`formula`>, null, environment> => class<`pdDiag`, `pdMat`>;
type `pdFactor` <class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`pdMat`, `pdSymm`> | class<`reStruct`>> => (class<`matrix`> | double[]);
type `pdFactor.pdDiag` <class<`pdDiag`, `pdMat`>> => class<`matrix`>;
type `pdFactor.pdLogChol` <class<`pdLogChol`, `pdMat`, `pdSymm`>> => double[];
type `pdFactor.pdNatural` <class<`pdMat`, `pdNatural`>> => double[];
type `pdFactor.pdSymm` <class<`pdMat`, `pdSymm`>> => double[];
type `pdFactor.reStruct` <class<`reStruct`>> => double[];
type `pdMat` <class<`pdDiag`, `pdMat`> | class<`formula`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`> | list<class<`formula`>>, null, null, null | environment | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, any> => (class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdSymm`>);
type `pdMatrix` <class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`> | class<`pdLogChol`, `pdMat`, `pdSymm`> | class<`pdMat`, `pdNatural`> | class<`reStruct`>, logical> => (class<`matrix`> | list<class<`matrix`>>);
type `pdMatrix.pdDiag` <class<`pdDiag`, `pdMat`>, logical> => class<`matrix`>;
type `pdMatrix.pdMat` <class<`pdMat`, `pdSymm`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, logical> => class<`matrix`>;
type `pdMatrix.pdNatural` <class<`pdMat`, `pdNatural`>, logical> => class<`matrix`>;
type `pdMatrix.pdSymm` <class<`pdMat`, `pdSymm`> | class<`pdLogChol`, `pdMat`, `pdSymm`>, logical> => class<`matrix`>;
type `pdMatrix.reStruct` <class<`reStruct`>, logical> => list<class<`matrix`>>;
type `pdNatural` <class<`pdLogChol`, `pdMat`, `pdSymm`>, null, null, environment> => class<`pdMat`, `pdNatural`>;
type `pdSymm` <class<`matrix`>, null | class<`formula`>, null, any> => class<`pdMat`, `pdSymm`>;
type `plot.ACF` <class<`ACF`, `data.frame`>, double, character, character, logical, ...> => class<`trellis`>;
type `plot.nfnGroupedData` <class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>, null, null, null, character, character, class<`function`>, character, class<`function`>, logical, logical, ...> => class<`trellis`>;
type `pooledSD` <class<`lmList`, `nlsList`>> => double;
type `pop` <double[]> => double[];
type `predict.lme` <class<`lme`>, class<`data.frame`>, double[], logical, class<`function`>, ...> => class<`data.frame`>;
type `ranef` <class<`lme`>, ...> => class<`data.frame`, `ranef.lme`>;
type `ranef.lme` <class<`lme`>, logical, integer, any, any, any, logical, logical, null, ...> => class<`data.frame`, `ranef.lme`>;
type `recalc` <class<`corAR1`, `corStruct`> | class<`corCompSymm`, `corStruct`> | class<`corNatural`, `corStruct`> | class<`corStruct`, `corSymm`> | class<`glsStruct`, `modelStruct`> | class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | class<`corRatio`, `corSpatial`, `corStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`reStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`>, any, ...> => list<any>;
type `recalc.corAR1` <class<`corAR1`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corCompSymm` <class<`corCompSymm`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corNatural` <class<`corNatural`, `corStruct`>, list<any>, ...> => list<any>;
type `recalc.corSpatial` <class<`corRatio`, `corSpatial`, `corStruct`>, list<class<`matrix`> | double | list<integer>>, ...> => list<class<`matrix`> | double | list<integer>>;
type `recalc.corSymm` <class<`corStruct`, `corSymm`>, list<any>, ...> => list<any>;
type `recalc.modelStruct` <class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`glsStruct`, `gnlsStruct`, `modelStruct`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `recalc.reStruct` <class<`reStruct`>, list<any>, ...> => list<any>;
type `recalc.varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `recalc.varIdent` <class<`varFunc`, `varIdent`>, list<class<`matrix`> | double | list<integer> | class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => list<any>;
type `residuals.gls` <class<`gls`>, character, ...> => double[];
type `residuals.gnlsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`>, ...> => double[];
type `residuals.lme` <class<`lme`>, integer, character[], logical, ...> => (double[] | list<double[]>);
type `residuals.lmList` <class<`lmList`, `nlsList`>, character[], null, logical, ...> => double[];
type `residuals.nlmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`>, integer[], list<class<`matrix`> | double | list<double[] | list<double[]>>>, ...> => class<`matrix`>;
type `reStruct` <class<`formula`> | class<`reStruct`> | class<`pdDiag`, `pdMat`> | class<`pdMat`, `pdSymm`> | list<class<`formula`> | class<`pdMat`, `pdSymm`> | class<`pdDiag`, `pdMat`>>, character, logical, null | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | environment> => class<`reStruct`>;
type `[.reStruct` <class<`reStruct`>, ...> => class<`reStruct`>;
type `solve.pdDiag` <class<`pdDiag`, `pdMat`>, any, ...> => class<`pdDiag`, `pdMat`>;
type `solve.pdLogChol` <class<`pdLogChol`, `pdMat`, `pdSymm`>, any, ...> => class<`pdLogChol`, `pdMat`, `pdSymm`>;
type `solve.pdNatural` <class<`pdMat`, `pdNatural`>, any, ...> => class<`pdMat`, `pdNatural`>;
type `solve.reStruct` <class<`reStruct`>, any, ...> => class<`reStruct`>;
type `splitFormula` <class<`name`> | class<`call`> | class<`formula`>, any> => list<class<`formula`>>;
type `summary.lmList` <class<`lmList`, `nlsList`>, logical, ...> => class<`summary.lmList`>;
type `summary.nlsList` <class<`lmList`, `nlsList`>, ...> => class<`summary.lmList`, `summary.nlsList`>;
type `svd.d` <class<`matrix`>> => double[];
type `to.2d.array` <class<`listof`> | null, double | integer[] | null> => (class<`matrix`> | null);
type `to.3d.array` <class<`listof`>, class<`matrix`>> => class<`array`>;
type `update.corStruct` <class<`corAR1`, `corStruct`>, any, ...> => class<`corAR1`, `corStruct`>;
type `update.gls` <class<`gls`>, any, ..., logical> => class<`gls`>;
type `update.lme` <class<`lme`>, any, ..., logical> => class<`lme`>;
type `update.modelStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>, class<`data.frame`>, ...> => (class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `modelStruct`>);
type `update.nlme` <class<`lme`, `nlme`>, any, ..., logical> => class<`lme`, `nlme`>;
type `update.reStruct` <class<`reStruct`>, any, ...> => class<`reStruct`>;
type `update.varFunc` <class<`varFunc`, `varPower`>, list<any>, ...> => class<`varFunc`, `varPower`>;
type `update.varPower` <class<`varFunc`, `varPower`>, list<any>, ...> => class<`varFunc`, `varPower`>;
type `varFunc` <class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | null> => (class<`varFunc`, `varIdent`> | class<`varFunc`, `varPower`> | null);
type `varIdent` <double[], class<`formula`>, null> => class<`varFunc`, `varIdent`>;
type `varPower` <double[], class<`formula`>, null> => class<`varFunc`, `varPower`>;
type `varWeights` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`> | class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`>> => (double[] | null);
type `varWeights.glsStruct` <class<`glsStruct`, `gnlsStruct`, `modelStruct`> | class<`glsStruct`, `modelStruct`>> => double[];
type `varWeights.lmeStruct` <class<`lmeStruct`, `lmeStructInt`, `modelStruct`> | class<`lmeStruct`, `lmeStructInt`, `modelStruct`, `nlmeStruct`> | class<`lmeStruct`, `modelStruct`>> => double[];
type `varWeights.varFunc` <class<`varFunc`, `varPower`> | class<`varFunc`, `varIdent`>> => (double[] | null);
