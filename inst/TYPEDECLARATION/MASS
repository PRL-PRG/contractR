type `dens` <double[], double[], null | double> => double[];
type `filter` <character[]> => logical[];
type `fitdistr` <double[], any => any | character, struct<`shape`:double, `rate`:double> | struct<`loc`:double, `scale`:double> | null | struct<`m`:double, `s`:double>, null | double> => struct<`estimate`:double[], `sd`:double[], `vcov`:^double[], `loglik`:double, `n`:integer>;
type `fn` <double[], double[]> => double;
type `::` <^double[] | struct<>, double[], ^double[] | null, double | null | character[], null | character | double[], logical | null> => null | ^double[] | struct<`center`:double[], `cov`:^double[], `msg`:character, `crit`:double, `best`:integer[], `n.obs`:integer> | struct<`x`:double[], `y`:double[], `z`:^double[]>;
type `corresp.matrix` <^integer[], double, null> => struct<`cor`:double[], `rscore`:^double[], `cscore`:^double[], `Freq`:^integer[]>;
type `lm.ridge` <symbol | language, symbol, null, null, double[], logical, logical, logical, null, null> => struct<`coef`:^double[], `scales`:double[], `Inter`:integer, `lambda`:double[], `ym`:double, `xm`:double[], `GCV`:double[], `kHKB`:double, `kLW`:double>;
type `eqscplot` <^double[], double[] | null, double, double, null, logical | character> => null;
type `coef.fitdistr` <struct<`estimate`:double[], `sd`:double[], `vcov`:^double[], `loglik`:double, `n`:integer>, null> => double[];
type `vcov.fitdistr` <null, null> => ^double[];
type `profile.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`counts`:double[], `outcome`:integer[], `treatment`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`outcome`:character, `treatment`:character>, `xlevels`:struct<`outcome`:character[], `treatment`:character[]>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`cbind(event# nonev)`:^double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`event`:double[], `nonev`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`hyp.tbl`:^double[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double, `residuals`:double, `fitted.values`:double, `effects`:double, `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double, `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double, `prior.weights`:double, `df.residual`:integer, `df.null`:integer, `y`:double, `converged`:logical, `boundary`:logical, `model`:struct<`x`:^double[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double, `residuals`:double, `fitted.values`:double, `effects`:double, `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double, `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double, `prior.weights`:double, `df.residual`:integer, `df.null`:integer, `y`:double, `converged`:logical, `boundary`:logical, `model`:struct<`y`:double, `(weights)`:double>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`y`:double, `weights`:double>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`cbind(y# n - y)`:^double[], `dose`:double[], `(weights)`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`y`:double[], `dose`:double[], `n`:double[], `w`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`cbind(y# n - y)`:^integer[], `P`:integer[], `A`:integer[], `V`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`y`:integer[], `n`:integer[], `P`:integer[], `A`:integer[], `V`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`P`:character, `A`:character, `V`:character>, `xlevels`:struct<`P`:character[], `A`:character[], `V`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`SF`:^double[], `sex`:integer[], `ldose`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`sex`:character>, `xlevels`:struct<`sex`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, integer[], double, double, double, logical, null> => struct<`(Intercept)`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`ldose`:struct<`z`:double[], `par.vals`:^double[]>>;
type `mvrnorm` <double, double[], ^double[], double, logical, logical> => ^double[];
type `ginv` <^double[], double> => ^double[];
type `cov.rob` <^double[] | struct<>, logical, double | symbol, character[], double | character, null> => struct<`center`:double[], `cov`:^double[], `n.obs`:integer>;
type `predict.qda` <struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:double[], `ldet`:double[], `lev`:character[], `N`:integer, `call`:language>, ^double[], double[], character[], null> => struct<`class`:integer[], `posterior`:^double[]>;
type `qda.default` <^double[], integer[], double[], character[], logical, double, null> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:double[], `ldet`:double[], `lev`:character[], `N`:integer, `call`:language>;
type `qda.matrix` <^double[], integer[], null, null, null> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:double[], `ldet`:double[], `lev`:character[], `N`:integer, `call`:language>;
type `.rat` <^double[], double | symbol, double> => struct<`rat`:^double[], `x`:^double[]>;
type `as.character.fractions` <double, null> => character;
type `fractions` <^double[], double, double, null> => ^double[];
type `lda.default` <^double[], double[], double[], double, character[], logical, double, null> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language>;
type `lda.formula` <language, symbol | null | language | struct<>, double[] | null, symbol | null, null> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language, `terms`:language, `xlevels`:tuple<>> | struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double, `N`:integer, `call`:language, `terms`:language, `xlevels`:struct<`V1`:character[]>>;
type `predict.lda` <struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language>, struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]> | null | ^double[], double[], null, character[], null> => struct<`class`:integer[], `posterior`:^double[], `x`:^double[]>;
type `lda.matrix` <^double[], integer[], null | double[], null, null> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language>;
type `lda.data.frame` <struct<`BSP91JW`:double[], `EWAJW`:double[], `LSTKJW`:double[]>, integer[]> => struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language>;
type `model.frame.lda` <struct<`prior`:double[], `counts`:integer[], `means`:^double[], `scaling`:^double[], `lev`:character[], `svd`:double[], `N`:integer, `call`:language, `terms`:language, `xlevels`:tuple<>>, null> => struct<`PHASEN`:integer[], `BSP91JW`:double[], `CP91JW`:double[], `DEFRATE`:double[], `EWAJW`:double[], `EXIMRATE`:double[], `GM1JW`:double[], `IAU91JW`:double[], `IB91JW`:double[], `LSTKJW`:double[], `PBSPJW`:double[], `PCPJW`:double[], `ZINSK`:double[], `ZINSLR`:double[]>;
type `:::` <struct<`A`:struct<`tau`:double[], `par.vals`:^double[]>, `lrc`:struct<`tau`:double[], `par.vals`:^double[]>>, null> => null;
type `$` <double[], double, double> => double[];
type `addterm.default` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[], `zeta`:logical>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`PROD`:character, `GENDER`:character, `SOUPTYPE`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `scale`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`SURENESS`:integer[], `PROD`:integer[], `GENDER`:integer[], `SOUPTYPE`:integer[], `COLD`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `S.contrasts`:struct<`COLD`:character>, `start`:null, `S.terms`:language, `S.xlevels`:struct<`COLD`:character[]>, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`PROD`:character[], `GENDER`:character[], `SOUPTYPE`:character[]>, `y`:integer[], `y.levels`:character[], `zeta`:double>, character[] | language, double, character[], double, logical, double, null> => struct<`Df`:^double[], `AIC`:double[]>;
type `addterm.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:integer[], `converged`:logical, `boundary`:logical, `model`:struct<`Freq`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `Sat`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `Freq`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character, `Sat`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[], `Sat`:character[]>>, character[] | language, double, character[], double, logical, double, null> => struct<`Df`:^double[], `Deviance`:double[], `AIC`:double[]>;
type `addterm.lm` <struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>> | struct<`coefficients`:double, `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer, `qr`:struct<`qr`:^double[], `qraux`:double, `pivot`:integer, `tol`:double, `rank`:integer>, `df.residual`:integer, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[]>>, character[] | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>>, double, character[], double, logical, language | null> => struct<`Df`:^double[], `Sum of Sq`:^double[], `RSS`:double[], `AIC`:double[]>;
type `anova.loglm` <struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>, struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>, character[]> => ^double[];
type `anova.negbin` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>, null | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>, character> => struct<`Df`:^integer[], `Deviance`:^double[], `Resid. Df`:integer[], `Resid. Dev`:double[], `Pr(>Chi)`:^double[]>;
type `anova.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>>, struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>>, character[]> => struct<`Model`:integer[], `Resid. df`:integer[], `Resid. Dev`:double[], `Test`:integer[], `   Df`:^integer[], `LR stat.`:^double[], `Pr(Chi)`:^double[]>;
type `area` <any => any, double, double, null, double, double, double, double> => double;
type `bandwidth.nrd` <double[]> => double;
type `bcv` <double[], double, double, double> => double;
type `biplot.bdr` <^double[], ^double[], null, double[], null, null, null, null, null> => null;
type `biplot.correspondence` <struct<`cor`:double[], `rscore`:^double[], `cscore`:^double[], `Freq`:^integer[]>, character[], null> => null;
type `boxcox.default` <struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`Days + 1`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `y`:double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`Volume`:double[], `log(Height)`:double[], `log(Girth)`:double[]>, `y`:double[]>, double[], logical, logical, double, expression, character, struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>> => struct<`x`:double[], `y`:double[]>;
type `boxcox.formula` <language, double[], logical, language, language, language, character, struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>> => struct<`x`:double[], `y`:double[]>;
type `chi` <double[], double> => double[];
type `confint.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`SF`:^double[], `sex`:integer[], `ldose`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`sex`:character>, `xlevels`:struct<`sex`:character[]>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`cbind(event# nonev)`:^double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`event`:double[], `nonev`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double, `residuals`:double, `fitted.values`:double, `effects`:double, `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double, `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double, `prior.weights`:double, `df.residual`:integer, `df.null`:integer, `y`:double, `converged`:logical, `boundary`:logical, `model`:struct<`y`:double, `(weights)`:double>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`y`:double, `weights`:double>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:null> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, null | character, double, logical, null> => ^double[];
type `confint.nls` <struct<`m`:struct<`resid`:any => any, `fitted`:any => any, `formula`:any => any, `deviance`:any => any, `lhs`:any => any, `gradient`:any => any, `conv`:any => any, `incr`:any => any, `setVarying`:any => any, `setPars`:any => any, `getPars`:any => any, `getAllPars`:any => any, `getEnv`:any => any, `trace`:any => any, `Rmat`:any => any, `predict`:any => any>, `convInfo`:struct<`isConv`:logical, `finIter`:integer, `finTol`:double, `stopCode`:integer, `stopMessage`:character>, `data`:symbol, `call`:language, `dataClasses`:character, `control`:struct<`maxiter`:double, `tol`:double, `minFactor`:double, `printEval`:logical, `warnOnly`:logical>> | struct<`m`:struct<`resid`:any => any, `fitted`:any => any, `formula`:any => any, `deviance`:any => any, `lhs`:any => any, `gradient`:any => any, `conv`:any => any, `incr`:any => any, `setVarying`:any => any, `setPars`:any => any, `getPars`:any => any, `getAllPars`:any => any, `getEnv`:any => any, `trace`:any => any, `Rmat`:any => any, `predict`:any => any>, `convInfo`:struct<`isConv`:logical, `finIter`:integer, `finTol`:double, `stopCode`:integer, `stopMessage`:character>, `data`:symbol, `call`:language, `control`:struct<`ftol`:double, `ptol`:double, `gtol`:double, `diag`:tuple<>, `epsfcn`:double, `factor`:double, `maxfev`:integer[], `maxiter`:double, `nprint`:double>>, character | symbol | null, double, null> => ^double[];
type `confint.polr` <struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>>, null, double, logical, null> => double[];
type `confint.profile.glm` <struct<`(Intercept)`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`ldose`:struct<`z`:double[], `par.vals`:^double[]>>, integer[], double, symbol> => ^double[];
type `confint.profile.nls` <struct<`d0`:struct<`tau`:double[], `par.vals`:^double[]>> | struct<`Asym`:struct<`tau`:double[], `par.vals`:^double[]>, `xmid`:struct<`tau`:double[], `par.vals`:^double[]>, `scal`:struct<`tau`:double[], `par.vals`:^double[]>>, character[], double, null> => ^double[];
type `confint.profile.polr` <struct<`InflMedium`:struct<`z`:double[], `par.vals`:^double[]>, `InflHigh`:struct<`z`:double[], `par.vals`:^double[]>, `TypeApartment`:struct<`z`:double[], `par.vals`:^double[]>, `TypeAtrium`:struct<`z`:double[], `par.vals`:^double[]>, `TypeTerrace`:struct<`z`:double[], `par.vals`:^double[]>, `ContHigh`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`carrieryes`:struct<`z`:double[], `par.vals`:^double[]>>, integer[], double, null | symbol> => ^double[];
type `contr.sdif` <double, logical, logical> => ^double[];
type `corresp.data.frame` <struct<`F`:integer[], `R`:integer[], `M`:integer[], `D`:integer[], `B`:integer[]>, double | null> => struct<`cor`:double[], `rscore`:^double[], `cscore`:^double[], `Freq`:^integer[]>;
type `corresp.formula` <language, struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>, null> => struct<`cor`:double, `rscore`:double[], `cscore`:double[], `Freq`:^integer[]>;
type `cov.trob` <struct<`Air.Flow`:double[], `Water.Temp`:double[], `Acid.Conc.`:double[], `stack.loss`:double[]>, double[], logical, logical, double, double, double> => struct<`cov`:^double[], `center`:double[], `n.obs`:integer, `call`:language, `iter`:integer>;
type `cut.string` <character[]> => character[];
type `densfun` <double[], double, double, double, logical> => double[];
type `denumerate.formula` <language | double | symbol> => language | symbol;
type `dfun` <double[], double, double, logical> => double[];
type `dose.p` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`SF`:^double[], `sex`:integer[], `ldose`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:environment, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`sex`:character>, `xlevels`:struct<`sex`:character[]>>, double[], double[]> => double[];
type `dropterm.default` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `formula`:language> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[], `zeta`:logical>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`PROD`:character, `GENDER`:character, `SOUPTYPE`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `scale`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`SURENESS`:integer[], `PROD`:integer[], `GENDER`:integer[], `SOUPTYPE`:integer[], `COLD`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `S.contrasts`:struct<`COLD`:character>, `start`:null, `S.terms`:language, `S.xlevels`:struct<`COLD`:character[]>, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`PROD`:character[], `GENDER`:character[], `SOUPTYPE`:character[]>, `y`:integer[], `y.levels`:character[], `zeta`:double> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical, `zeta`:logical>, `alpha`:double[], `beta`:double, `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`prod`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `scale`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`sureness`:integer[], `prod`:integer[], `(weights)`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `S.contrasts`:struct<`prod`:character>, `start`:null, `S.terms`:language, `S.xlevels`:struct<`prod`:character[]>, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`prod`:character[]>, `y`:integer[], `y.levels`:character[], `zeta`:double> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `y`:integer[], `y.levels`:character[]>, character[] | null, double, character[], double, logical, double, null> => struct<`Df`:^double[], `AIC`:double[]>;
type `dropterm.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`cbind(y# n - y)`:^integer[], `P`:integer[], `A`:integer[], `V`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`y`:integer[], `n`:integer[], `P`:integer[], `A`:integer[], `V`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`P`:character, `A`:character, `V`:character>, `xlevels`:struct<`P`:character[], `A`:character[], `V`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:integer[], `converged`:logical, `boundary`:logical, `model`:struct<`Freq`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `Sat`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `Freq`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character, `Sat`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[], `Sat`:character[]>>, character[] | null, double, character[], double, logical, double, null> => struct<`Df`:^double[], `Deviance`:double[], `AIC`:double[]>;
type `dropterm.lm` <struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmax`:character, `cach`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmax`:character[], `cach`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmax`:integer[], `cach`:integer[], `chmax`:integer[]>>, character[], double, character[], double, logical, language | null> => struct<`Df`:^double[], `Sum of Sq`:^double[], `RSS`:double[], `AIC`:double[]>;
type `dropterm.negbin` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `formula`:language>, character[]> => struct<`Df`:^double[], `AIC`:double[]>;
type `expand.range` <double[]> => double[];
type `extractAIC.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Type`:character, `Cont`:character>, `xlevels`:struct<`Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>>, symbol, double, null> => double[];
type `f` <double, integer[], double, double, integer, double> => double;
type `fSD` <double, integer[], double, double, integer, double> => double;
type `Fstat` <struct<`Df`:^double[], `Sum of Sq`:^double[], `RSS`:double[], `AIC`:double[]>, double, integer> => struct<`Fs`:^double[], `P`:^double[]>;
type `FUN` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2..v3`:character[], `.v1..v2..v4`:character[], `.v1..v3..v4`:character[], `.v2..v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[], `hs.phs.fol`:double[], `hs.phs.sex`:double[], `hs.fol.sex`:double[], `phs.fol.sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | double[] | character[], integer[], character[]> => null | ^double[] | language | character;
type `gamma.dispersion` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `varfun`:character>, `linear.predictors`:double[], `deviance`:double, `aic`:null, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`Days + 0.1`:double[], `Age`:integer[], `Eth`:integer[], `Sex`:integer[], `Lrn`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Age`:character, `Eth`:character, `Sex`:character, `Lrn`:character>, `xlevels`:struct<`Age`:character[], `Eth`:character[], `Sex`:character[], `Lrn`:character[]>>, null> => double;
type `gamma.shape.glm` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `varfun`:character>, `linear.predictors`:double[], `deviance`:double, `aic`:null, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`Days + 0.1`:double[], `Age`:integer[], `Eth`:integer[], `Sex`:integer[], `Lrn`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Age`:character, `Eth`:character, `Sex`:character, `Lrn`:character>, `xlevels`:struct<`Age`:character[], `Eth`:character[], `Sex`:character[], `Lrn`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`lot1`:double[], `log(u)`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`u`:double[], `lot1`:double[], `lot2`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, double, double, logical, null> => struct<`alpha`:double, `SE`:double>;
type `glm.convert` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>> => struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `link`:symbol>;
type `glm.nb` <language, symbol | null, null | symbol, null, null, null | double[], null | language, null, struct<`epsilon`:double, `maxit`:double, `trace`:logical>, character, logical, logical, logical, null, null, double | null, symbol> => struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:double[], `lag1`:double[], `lag2`:double[], `lag3`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:double[], `lag1`:double[], `lag2`:double[], `lag3`:double[], `(etastart)`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:integer[], `x`:integer[], `(weights)`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:integer[], `x`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`numbers`:double[], `(weights)`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`n`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Age`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Age`:character>, `xlevels`:struct<`Age`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>;
type `gr` <double[]> => double[];
type `huber` <double[], double, double> => struct<`mu`:double, `s`:double>;
type `hubers` <double[], double, double | null, null, language | double, double> => struct<`mu`:double, `s`:double>;
type `info` <symbol, double, double[], double[], double[]> => double;
type `irls.delta` <double[], double[]> => double;
type `isoMDS` <double[], ^double[], double, double, logical, double, double> => struct<`points`:^double[], `stress`:double>;
type `jacobian` <double[]> => ^double[];
type `kde2d` <double[], double[], double[] | null, double, double[]> => struct<`x`:double[], `y`:double[], `z`:^double[]>;
type `lmwork` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>> => struct<`stddev`:double, `stdres`:double[], `studres`:double[]>;
type `logit` <double[]> => double[];
type `loglik` <symbol, double, double[], double[], double[]> => double;
type `loglm` <language, struct<> | ^integer[], null, null, logical | null> => struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2..v3`:character[], `.v1..v2..v4`:character[], `.v1..v3..v4`:character[], `.v2..v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[], `hs.phs.fol`:double[], `hs.phs.sex`:double[], `hs.fol.sex`:double[], `phs.fol.sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`District`:character, `Group`:character, `Age`:character>, `param`:struct<`(Intercept)`:double, `District`:double[], `Group`:double[], `Age`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Eth.Sex`:character[], `Eth.Age`:character[], `Eth.Lrn`:character[], `Sex.Age`:character[], `Sex.Lrn`:character[], `Age.Lrn`:character[]>, `param`:struct<`(Intercept)`:double, `Eth`:double[], `Sex`:double[], `Age`:double[], `Lrn`:double[], `Eth.Sex`:^double[], `Eth.Age`:^double[], `Sex.Age`:^double[], `Eth.Lrn`:^double[], `Sex.Lrn`:^double[], `Age.Lrn`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Infl:Sat`:character[], `Type:Sat`:character[], `Cont:Sat`:character[], `Infl:Type:Cont`:character[]>, `param`:struct<`(Intercept)`:double, `Infl`:double[], `Type`:double[], `Cont`:double[], `Sat`:double[], `Infl.Type`:^double[], `Infl.Cont`:^double[], `Type.Cont`:^double[], `Infl.Sat`:^double[], `Type.Sat`:^double[], `Cont.Sat`:^double[], `Infl.Type.Cont`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Type`:character, `Origin`:character>, `param`:struct<`(Intercept)`:double, `Type`:double[], `Origin`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>;
type `loglm1.data.frame` <symbol, struct<`Claims`:integer[], `District`:integer[], `Group`:integer[], `Age`:integer[], `offset(log(Holders))`:double[]>, language> => struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`District`:character, `Group`:character, `Age`:character>, `param`:struct<`(Intercept)`:double, `District`:double[], `Group`:double[], `Age`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Eth.Sex`:character[], `Eth.Age`:character[], `Eth.Lrn`:character[], `Sex.Age`:character[], `Sex.Lrn`:character[], `Age.Lrn`:character[]>, `param`:struct<`(Intercept)`:double, `Eth`:double[], `Sex`:double[], `Age`:double[], `Lrn`:double[], `Eth.Sex`:^double[], `Eth.Age`:^double[], `Sex.Age`:^double[], `Eth.Lrn`:^double[], `Sex.Lrn`:^double[], `Age.Lrn`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Infl:Sat`:character[], `Type:Sat`:character[], `Cont:Sat`:character[], `Infl:Type:Cont`:character[]>, `param`:struct<`(Intercept)`:double, `Infl`:double[], `Type`:double[], `Cont`:double[], `Sat`:double[], `Infl.Type`:^double[], `Infl.Cont`:^double[], `Type.Cont`:^double[], `Infl.Sat`:^double[], `Type.Sat`:^double[], `Cont.Sat`:^double[], `Infl.Type.Cont`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>;
type `loglm1.default` <symbol, double[] | ^integer[], double[], logical, logical, logical, double, double, logical, language> => struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`District`:character, `Group`:character, `Age`:character>, `param`:struct<`(Intercept)`:double, `District`:double[], `Group`:double[], `Age`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Eth.Sex`:character[], `Eth.Age`:character[], `Eth.Lrn`:character[], `Sex.Age`:character[], `Sex.Lrn`:character[], `Age.Lrn`:character[]>, `param`:struct<`(Intercept)`:double, `Eth`:double[], `Sex`:double[], `Age`:double[], `Lrn`:double[], `Eth.Sex`:^double[], `Eth.Age`:^double[], `Sex.Age`:^double[], `Eth.Lrn`:^double[], `Sex.Lrn`:^double[], `Age.Lrn`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Infl:Sat`:character[], `Type:Sat`:character[], `Cont:Sat`:character[], `Infl:Type:Cont`:character[]>, `param`:struct<`(Intercept)`:double, `Infl`:double[], `Type`:double[], `Cont`:double[], `Sat`:double[], `Infl.Type`:^double[], `Infl.Cont`:^double[], `Type.Cont`:^double[], `Infl.Sat`:^double[], `Type.Sat`:^double[], `Cont.Sat`:^double[], `Infl.Type.Cont`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2..v3`:character[], `.v1..v2..v4`:character[], `.v1..v3..v4`:character[], `.v2..v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[], `hs.phs.fol`:double[], `hs.phs.sex`:double[], `hs.fol.sex`:double[], `phs.fol.sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Type`:character, `Origin`:character>, `param`:struct<`(Intercept)`:double, `Type`:double[], `Origin`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>;
type `loglm1.xtabs` <symbol, ^integer[], logical | language> => struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2..v3`:character[], `.v1..v2..v4`:character[], `.v1..v3..v4`:character[], `.v2..v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[], `hs.phs.fol`:double[], `hs.phs.sex`:double[], `hs.fol.sex`:double[], `phs.fol.sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`Type`:character, `Origin`:character>, `param`:struct<`(Intercept)`:double, `Type`:double[], `Origin`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>;
type `logtrans.default` <struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Age`:character, `Sex`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Age`:character[], `Sex`:character[], `Eth`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`Days`:integer[], `Age`:integer[], `Sex`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `y`:double[]>, symbol, double[], logical, logical, character, character> => struct<`x`:double[], `y`:double[]>;
type `logtrans.formula` <language, struct<`Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[], `Days`:integer[]>, double[]> => struct<`x`:double[], `y`:double[]>;
type `lqs.control` <null, character | integer, logical> => struct<`psamp`:null, `nsamp`:character, `adjust`:logical> | struct<`psamp`:null, `nsamp`:integer, `adjust`:logical>;
type `lqs.default` <^double[], double[], logical, character[], null, struct<`psamp`:null, `nsamp`:character, `adjust`:logical> | struct<`psamp`:null, `nsamp`:integer, `adjust`:logical>, double, null, null | character | integer> => struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[]>;
type `lqs.formula` <language, symbol, null | character, character[], null | language, null, logical, logical, logical, null | struct<`trt`:character>> => struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`stack.loss`:double[], `Air.Flow`:double[], `Water.Temp`:double[], `Acid.Conc.`:double[]>> | struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `contrasts`:struct<`trt`:character>, `xlevels`:struct<`trt`:character[]>, `model`:struct<`resp`:double[], `trt`:integer[]>> | struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`logwtmm`:double[], `logscale`:double[]>> | struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`y.branch`:double[], `x.branch`:double[]>>;
type `margs` <symbol> => integer;
type `mca` <struct<`Mois`:integer[], `Manag`:integer[], `Use`:integer[], `Manure`:integer[]>, double, logical> => struct<`rs`:^double[], `cs`:^double[], `fs`:^double[], `d`:double[], `p`:integer, `call`:language>;
type `model.frame.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[], `RAdurationSD`:double[], `RageSD`:double[], `edudiffSD`:double[], `wealthdiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `na.action`:integer[], `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `grp`:integer[]>, `contrasts`:struct<`grp`:character>, `xlevels`:struct<`grp`:character[]>>, null | null> => struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>;
type `mydeviance` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `formula`:language> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmax`:character, `cach`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmax`:character[], `cach`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmax`:integer[], `cach`:integer[], `chmax`:integer[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]>, null> => double;
type `negative.binomial` <double, character | symbol> => struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>;
type `nobs.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Type`:character, `Cont`:character>, `xlevels`:struct<`Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>>, logical> => double;
type `Ops.fractions` <^double[], double> => ^double[];
type `pairs.profile` <struct<`(Intercept)`:struct<`z`:double[], `par.vals`:^double[]>, `PS`:struct<`z`:double[], `par.vals`:^double[]>, `AI`:struct<`z`:double[], `par.vals`:^double[]>, `VS`:struct<`z`:double[], `par.vals`:^double[]>, `PS:AI`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`(Intercept)`:struct<`z`:double[], `par.vals`:^double[]>, `sexM`:struct<`z`:double[], `par.vals`:^double[]>, `ldose`:struct<`z`:double[], `par.vals`:^double[]>, `sexM:ldose`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`A`:struct<`tau`:double[], `par.vals`:^double[]>, `lrc`:struct<`tau`:double[], `par.vals`:^double[]>> | struct<`Const`:struct<`tau`:double[], `par.vals`:^double[]>, `A`:struct<`tau`:double[], `par.vals`:^double[]>, `B`:struct<`tau`:double[], `par.vals`:^double[]>> | struct<`InflMedium`:struct<`z`:double[], `par.vals`:^double[]>, `InflHigh`:struct<`z`:double[], `par.vals`:^double[]>, `TypeApartment`:struct<`z`:double[], `par.vals`:^double[]>, `TypeAtrium`:struct<`z`:double[], `par.vals`:^double[]>, `TypeTerrace`:struct<`z`:double[], `par.vals`:^double[]>, `ContHigh`:struct<`z`:double[], `par.vals`:^double[]>>, integer[], null> => double[];
type `parcoord` <^double[], double[], double, logical, null> => null;
type `pfun` <^double[], double, double, logical> => ^double[];
type `plot.correspondence` <struct<`cor`:double, `rscore`:double[], `cscore`:double[], `Freq`:^integer[]>, double, null> => null;
type `plot.mca` <struct<`rs`:^double[], `cs`:^double[], `fs`:^double[], `d`:double[], `p`:integer, `call`:language>, logical, null, double, null> => struct<`rs`:^double[], `cs`:^double[], `fs`:^double[], `d`:double[], `p`:integer, `call`:language>;
type `plot.profile` <struct<`(Intercept)`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`InflMedium`:struct<`z`:double[], `par.vals`:^double[]>, `InflHigh`:struct<`z`:double[], `par.vals`:^double[]>, `TypeApartment`:struct<`z`:double[], `par.vals`:^double[]>, `TypeAtrium`:struct<`z`:double[], `par.vals`:^double[]>, `TypeTerrace`:struct<`z`:double[], `par.vals`:^double[]>, `ContHigh`:struct<`z`:double[], `par.vals`:^double[]>>, null> => null;
type `plot.ridgelm` <struct<`coef`:^double[], `scales`:double[], `Inter`:integer, `lambda`:double[], `ym`:double, `xm`:double[], `GCV`:double[], `kHKB`:double, `kLW`:double>, null> => null;
type `polr` <language, symbol | null, symbol | null, null | double[], null, null, null, null, logical, logical, character[] | double[] | list<double[]> | null | environment> => struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Type`:character, `Cont`:character>, `xlevels`:struct<`Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `group`:integer[], `(weights)`:double[]>, `contrasts`:struct<`group`:character>, `xlevels`:struct<`group`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[]>, `xlevels`:tuple<>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `Redu`:integer[]>, `contrasts`:struct<`Redu`:character>, `xlevels`:struct<`Redu`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `Rhappy`:integer[]>, `contrasts`:struct<`Rhappy`:character>, `xlevels`:struct<`Rhappy`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `grp`:integer[]>, `contrasts`:struct<`grp`:character>, `xlevels`:struct<`grp`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[]>, `xlevels`:tuple<>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `x`:double[]>, `xlevels`:tuple<>>;
type `polr.fit` <^double[], integer[], double[], double[], double[], character, null | logical> => struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `res`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>>;
type `predict.lqs` <struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `contrasts`:struct<`trt`:character>, `xlevels`:struct<`trt`:character[]>, `model`:struct<`resp`:double[], `trt`:integer[]>> | struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double, `coefficents`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`stack.loss`:double[], `Air.Flow`:double[], `Water.Temp`:double[], `Acid.Conc.`:double[]>>, struct<`trt`:integer[], `resp`:double[]>, any => any, null> => double[];
type `predict.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `x`:double[]>, `xlevels`:tuple<>>, struct<`Infl`:integer[], `Type`:integer[], `Cont`:integer[]> | null, character[], null> => ^double[];
type `profile.polr` <struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>>, integer[], double, double, double, logical, null> => struct<`carrieryes`:struct<`z`:double[], `par.vals`:^double[]>> | struct<`InflMedium`:struct<`z`:double[], `par.vals`:^double[]>, `InflHigh`:struct<`z`:double[], `par.vals`:^double[]>, `TypeApartment`:struct<`z`:double[], `par.vals`:^double[]>, `TypeAtrium`:struct<`z`:double[], `par.vals`:^double[]>, `TypeTerrace`:struct<`z`:double[], `par.vals`:^double[]>, `ContHigh`:struct<`z`:double[], `par.vals`:^double[]>>;
type `psi` <double[], double> => double[];
type `rational` <^double[], double, double, null> => ^double[];
type `renumerate.formula` <language | symbol> => language | symbol;
type `rlm.default` <^double[], ^double[], double[] | null, null, double[] | language, character | double[], any => any | symbol, character[] | language, double, character[], character[], double, double, character, null> => struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language> | struct<`coefficients`:double[], `residuals`:^double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:null, `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:null, `conv`:double[], `converged`:logical, `x`:^integer[], `call`:language> | struct<`coefficients`:double[], `residuals`:^double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:null, `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:null, `conv`:double, `converged`:logical, `x`:^integer[], `call`:language>;
type `rlm.formula` <language, symbol, null | symbol | language, any => any | null | character | double, null, null, character[], character[], logical, logical, logical, null> => struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`stack.loss`:double[], `Air.Flow`:double[], `Water.Temp`:double[], `Acid.Conc.`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`ispeed`:double[], `grad`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`calls`:double[], `year`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`time`:double[], `dist`:double[], `climb`:integer[], `(weights)`:double[]>>;
type `rms.curv` <struct<`m`:struct<`resid`:any => any, `fitted`:any => any, `formula`:any => any, `deviance`:any => any, `lhs`:any => any, `gradient`:any => any, `conv`:any => any, `incr`:any => any, `setVarying`:any => any, `setPars`:any => any, `getPars`:any => any, `getAllPars`:any => any, `getEnv`:any => any, `trace`:any => any, `Rmat`:any => any, `predict`:any => any>, `convInfo`:struct<`isConv`:logical, `finIter`:integer, `finTol`:double, `stopCode`:integer, `stopMessage`:character>, `data`:symbol, `call`:language, `dataClasses`:character, `control`:struct<`maxiter`:double, `tol`:double, `minFactor`:double, `printEval`:logical, `warnOnly`:logical>>> => struct<`pe`:double, `ic`:double, `ct`:double, `ci`:double, `C`:double[]>;
type `rnegbin` <double[], double[], double> => integer[];
type `safe_pchisq` <double[], double[], logical> => double[];
type `safe_pf` <double[], double[], integer> => double[];
type `sammon` <double[], ^double[], double, double, logical, double, double> => struct<`points`:^double[], `stress`:double, `call`:language>;
type `scale.simp` <^double[], double[], integer, integer> => ^double[];
type `score` <symbol, double, double[], double[], double[]> => double;
type `SDh` <integer[], double, integer, double> => double;
type `select.ridgelm` <struct<`coef`:^double[], `scales`:double[], `Inter`:integer, `lambda`:double[], `ym`:double, `xm`:double[], `GCV`:double[], `kHKB`:double, `kLW`:double>> => null;
type `Shepard` <double[], ^double[], double> => struct<`x`:double[], `y`:double[], `yf`:double[]>;
type `simulate.negbin` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Sex`:integer[], `Age`:integer[], `Eth`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Sex`:character, `Age`:character, `Eth`:character, `Lrn`:character>, `xlevels`:struct<`Sex`:character[], `Age`:character[], `Eth`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>, double, null, null> => struct<`sim_1`:integer[], `sim_2`:integer[], `sim_3`:integer[], `sim_4`:integer[], `sim_5`:integer[]>;
type `step.results` <tuple<struct<`deviance`:double, `df.resid`:double, `change`:character, `AIC`:double>, struct<`deviance`:double, `df.resid`:double, `change`:character, `AIC`:double>>, struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmax`:character, `cach`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmax`:character[], `cach`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmax`:integer[], `cach`:integer[], `chmax`:integer[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]>, struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `formula`:language> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `formula`:language> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmin`:character, `mmax`:character, `cach`:character, `chmin`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmin`:character[], `mmax`:character[], `cach`:character[], `chmin`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmin`:integer[], `mmax`:integer[], `cach`:integer[], `chmin`:integer[], `chmax`:integer[]>, `formula`:language> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `formula`:language> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[], `RAdurationSD`:double[], `RageSD`:double[], `edudiffSD`:double[], `wealthdiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>, `formula`:language> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]>, logical> => struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmax`:character, `cach`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmax`:character[], `cach`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmax`:integer[], `cach`:integer[], `chmax`:integer[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[], `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>>;
type `stepAIC` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[], `ftv`:character[]>> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmin`:character, `mmax`:character, `cach`:character, `chmin`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmin`:character[], `mmax`:character[], `cach`:character[], `chmin`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmin`:integer[], `mmax`:integer[], `cach`:integer[], `chmin`:integer[], `chmax`:integer[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[], `RAdurationSD`:double[], `RageSD`:double[], `edudiffSD`:double[], `wealthdiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[]>, language | struct<`upper`:language, `lower`:language> | null, double, double[] | character[] | language, double, null, double[] | character[] | symbol, logical, double, null> => struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`smoke`:character, `ptd`:character, `ht`:character, `ui`:character, `ftv`:character>, `xlevels`:struct<`ptd`:character[], `ftv`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:^double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `call`:language, `terms`:language, `model`:struct<`log(Days + 2.5)`:double[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Sex`:integer[], `Age`:integer[], `Lrn`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Sex`:character, `Age`:character, `Lrn`:character>, `xlevels`:struct<`Eth`:character[], `Sex`:character[], `Age`:character[], `Lrn`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`low`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`low`:integer[], `age`:integer[], `lwt`:integer[], `race`:integer[], `smoke`:logical[], `ptd`:integer[], `ht`:logical[], `ui`:logical[], `ftv`:integer[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`race`:character, `smoke`:character, `ptd`:character, `ht`:character, `ui`:character>, `xlevels`:struct<`race`:character[], `ptd`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`syct`:character, `mmax`:character, `cach`:character, `chmax`:character>, `xlevels`:struct<`syct`:character[], `mmax`:character[], `cach`:character[], `chmax`:character[]>, `call`:language, `terms`:language, `model`:struct<`log10(perf)`:double[], `syct`:integer[], `mmax`:integer[], `cach`:integer[], `chmax`:integer[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `RageSD`:double[], `edudiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>, `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`aliased`:struct<`alpha`:logical[], `beta`:logical[]>, `alpha`:double[], `beta`:double[], `call`:language, `coefficients`:double[], `cond.H`:double, `contrasts`:struct<`temp`:character, `contact`:character>, `control`:struct<`method`:character, `sign.location`:character, `sign.nominal`:character, `convergence`:character, `trace`:integer, `maxIter`:integer, `gradTol`:double, `relTol`:double, `tol`:double, `maxLineIter`:integer, `maxModIter`:integer>, `convergence`:struct<`code`:integer, `messages`:character, `alg.message`:character>, `df.residual`:double, `edf`:integer, `fitted.values`:double[], `formula`:language, `formulas`:struct<`formula`:language, `fullForm`:language>, `gradient`:double[], `Hessian`:^double[], `info`:struct<`link`:integer, `threshold`:integer, `nobs`:double, `logLik`:integer, `AIC`:integer, `niter`:integer, `max.grad`:integer, `cond.H`:integer>, `link`:character, `logLik`:double, `maxGradient`:double, `message`:character, `model`:struct<`rating`:integer[], `temp`:integer[], `contact`:integer[]>, `n`:integer, `niter`:double[], `nobs`:double, `start`:null, `terms`:language, `Theta`:^double[], `threshold`:character, `tJac`:^double[], `vcov`:^double[], `xlevels`:struct<`temp`:character[], `contact`:character[]>, `y`:integer[], `y.levels`:character[], `anova`:struct<`Step`:integer[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>>;
type `studres` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>> => double[];
type `summary.negbin` <struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `link`:symbol> | struct<`coefficients`:^double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`Days`:integer[], `Eth`:integer[], `Age`:integer[], `Lrn`:integer[], `Sex`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `xlevels`:struct<`Eth`:character[], `Age`:character[], `Lrn`:character[], `Sex`:character[]>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:integer[], `x`:integer[], `(weights)`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`numbers`:double[], `(weights)`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`y`:integer[], `x`:integer[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `xlevels`:tuple<>, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>> | struct<`coefficients`:double, `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double, `pivot`:integer, `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `terms`:language, `call`:language, `model`:struct<`n`:double[]>, `theta`:double, `SE.theta`:double, `twologlik`:double, `method`:character, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>>, null | double, logical, null> => struct<`call`:language, `terms`:language, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `deviance`:double, `aic`:double, `contrasts`:struct<`Eth`:character, `Age`:character, `Lrn`:character, `Sex`:character>, `df.residual`:integer, `null.deviance`:double, `df.null`:integer, `iter`:integer, `deviance.resid`:double[], `coefficients`:^double[], `aliased`:logical[], `dispersion`:double, `df`:integer[], `cov.unscaled`:^double[], `cov.scaled`:^double[], `theta`:double, `SE.theta`:double, `twologlik`:double, `NA`:null> | struct<`call`:language, `terms`:language, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `deviance`:double, `aic`:double, `df.residual`:integer, `null.deviance`:double, `df.null`:integer, `iter`:integer, `deviance.resid`:double[], `coefficients`:^double[], `aliased`:logical[], `dispersion`:double, `df`:integer[], `cov.unscaled`:^double[], `cov.scaled`:^double[], `theta`:double, `SE.theta`:double, `twologlik`:double, `NA`:null> | struct<`call`:language, `terms`:language, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `deviance`:double, `aic`:double, `df.residual`:integer, `null.deviance`:double, `df.null`:integer, `iter`:integer, `deviance.resid`:double[], `coefficients`:^double[], `aliased`:logical, `dispersion`:double, `df`:integer[], `cov.unscaled`:^double[], `cov.scaled`:^double[], `theta`:double, `SE.theta`:double, `twologlik`:double, `NA`:null>;
type `summary.polr` <struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>>, double, logical, null> => struct<`coefficients`:^double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>, `pc`:integer, `digits`:double> | struct<`coefficients`:^double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>, `pc`:integer, `digits`:double>;
type `summary.rlm` <struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`stack.loss`:double[], `Air.Flow`:double[], `Water.Temp`:double[], `Acid.Conc.`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`calls`:double[], `year`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`ispeed`:double[], `grad`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `wresid`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:null, `w`:double[], `s`:double, `psi`:any => any, `k2`:double, `weights`:double[], `conv`:double[], `converged`:logical, `x`:^double[], `call`:language, `terms`:language, `xlevels`:tuple<>, `model`:struct<`time`:double[], `dist`:double[], `climb`:integer[], `(weights)`:double[]>>, character[], logical, null> => struct<`call`:language, `NA`:null, `residuals`:double[], `coefficients`:^double[], `sigma`:double, `stddev`:double, `df`:double[], `r.squared`:null, `cov.unscaled`:^double[], `terms`:null>;
type `TDh` <integer[], double, integer, double> => double;
type `test.values` <^double[]> => null;
type `theta.md` <double[], double[], double, double[] | null, double, double> => double;
type `theta.ml` <double[], double[], double, double[] | null, double, double, logical> => double;
type `theta.mm` <double[], double[], double, double[] | null, double, double> => double;
type `ucv` <double[], double, double, double> => double;
type `update.loglm` <struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1`:character, `.v2`:character, `.v3`:character, `.v4`:character>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>, language, logical | null> => struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2..v3`:character[], `.v1..v2..v4`:character[], `.v1..v3..v4`:character[], `.v2..v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[], `hs.phs.fol`:double[], `hs.phs.sex`:double[], `hs.fol.sex`:double[], `phs.fol.sex`:double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language> | struct<`lrt`:double, `pearson`:double, `df`:double, `margin`:struct<`.v1..v2`:character[], `.v1..v3`:character[], `.v1..v4`:character[], `.v2..v3`:character[], `.v2..v4`:character[], `.v3..v4`:character[]>, `param`:struct<`(Intercept)`:double, `hs`:double[], `phs`:double[], `fol`:double[], `sex`:double[], `hs.phs`:^double[], `hs.fol`:^double[], `phs.fol`:^double[], `hs.sex`:^double[], `phs.sex`:^double[], `fol.sex`:^double[]>, `call`:language, `formula`:language, `deviance`:double, `nobs`:integer, `terms`:language>;
type `vcov.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:integer, `edf`:integer, `n`:integer, `nobs`:integer, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`Sat`:integer[], `Infl`:integer[], `Type`:integer[], `Cont`:integer[], `(weights)`:integer[]>, `contrasts`:struct<`Infl`:character, `Type`:character, `Cont`:character>, `xlevels`:struct<`Infl`:character[], `Type`:character[], `Cont`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`size`:integer[], `carrier`:integer[], `(weights)`:double[]>, `contrasts`:struct<`carrier`:character>, `xlevels`:struct<`carrier`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[], `RAdurationSD`:double[], `RageSD`:double[], `edudiffSD`:double[], `wealthdiffSD`:double[], `Redu`:integer[], `Rhealth`:integer[], `Rhappy`:integer[], `Region`:integer[]>, `na.action`:integer[], `contrasts`:struct<`Redu`:character, `Rhealth`:character, `Rhappy`:character, `Region`:character>, `xlevels`:struct<`Redu`:character[], `Rhealth`:character[], `Rhappy`:character[], `Region`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `model`:struct<`y`:integer[], `grp`:integer[]>, `contrasts`:struct<`grp`:character>, `xlevels`:struct<`grp`:character[]>>, null> => ^double[];
type `width.SJ` <double[], double, double | language, double | symbol, character[]> => double;
type `wmad` <double[], double[]> => double;
type `logLik.polr` <struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `AheightSD`:double[]>, `xlevels`:tuple<>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `Redu`:integer[]>, `contrasts`:struct<`Redu`:character>, `xlevels`:struct<`Redu`:character[]>> | struct<`coefficients`:double[], `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[], `Rhappy`:integer[]>, `contrasts`:struct<`Rhappy`:character>, `xlevels`:struct<`Rhappy`:character[]>> | struct<`coefficients`:double, `zeta`:double[], `deviance`:double, `fitted.values`:^double[], `lev`:character[], `terms`:language, `df.residual`:double, `edf`:integer, `n`:double, `nobs`:double, `call`:language, `method`:character, `convergence`:integer, `niter`:integer[], `lp`:double[], `Hessian`:^double[], `model`:struct<`orgasm`:integer[], `AincomeSD`:double[]>, `xlevels`:tuple<>>, null> => double;
type `fit` <language> => struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`logwtmm`:double[], `logscale`:double[]>>;
type `lmsreg` <language> => struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`y.branch`:double[], `x.branch`:double[]>>;
type `ltsreg` <language> => struct<`crit`:double, `sing`:character, `coefficients`:double[], `bestone`:integer[], `fitted.values`:double[], `residuals`:double[], `scale`:double[], `terms`:language, `call`:language, `xlevels`:tuple<>, `model`:struct<`y.branch`:double[], `x.branch`:double[]>>;
