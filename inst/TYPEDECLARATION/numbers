type `agm` <double, double> => double;
type `atkin_sieve` <double> => integer[];
type `bracelet` <double, double> => double;
type `catalan` <integer> => double;
type `cf2num` <double[], double[], double, logical> => double;
type `chinese` <double[], double[]> => double;
type `collatz` <double, double, double, logical, logical> => double[];
type `contFrac` <double[], double> => (double | list<double[]>);
type `coprime` <double, double> => logical;
type `div` <double[], double[]> => double[];
type `divisors` <double> => double[];
type `dropletE` <double> => character;
type `dropletPi` <double> => character;
type `egyptian_complete` <double, double, logical> => double;
type `egyptian_methods` <double, double> => null;
type `eulersPhi` <double> => double;
type `extGCD` <double, double> => double[];
type `fibonacci` <double, logical> => double[];
type `GCD` <double, double> => double;
type `hermiteNF` <class<`matrix`>> => list<class<`matrix`>>;
type `iNthroot` <double, double> => double;
type `isIntpower` <double> => double[];
type `isNatural` <double[]> => logical[];
type `isPrime` <class<`matrix`> | double[]> => (class<`matrix`> | logical[]);
type `isPrimroot` <double, double> => logical;
type `jacobi_sym` <double, double> => double;
type `LCM` <double, double> => double;
type `legendre_sym` <double, double> => double;
type `lucas` <double> => double;
type `mersenne` <double> => logical;
type `mGCD` <double[]> => double;
type `miller_rabin` <double> => logical;
type `mLCM` <double[]> => double;
type `mod` <double[], double> => double[];
type `modinv` <double, double> => double;
type `modlin` <double, double, double> => (double[] | null);
type `modlog` <double, double, double> => double;
type `modorder` <double, double> => double;
type `modpower` <double, double, double> => double;
type `modsqrt` <double, double> => double;
type `necklace` <double, double> => double;
type `nextPrime` <double> => double;
type `omega` <double> => double;
type `Omega` <double> => double;
type `ordpn` <double, double> => double;
type `previousPrime` <double> => double;
type `primeFactors` <double> => double[];
type `Primes` <double, null | double> => double[];
type `primeSieve` <double> => double[];
type `primroot` <double, logical> => double;
type `pythagorean_triples` <double, double> => class<`matrix`>;
type `quadratic_residues` <double> => double[];
type `radical` <double> => double;
type `ratFarey` <double, double, logical> => double[];
type `rem` <integer[] | double, double> => double[];
type `twinPrimes` <double, double> => class<`matrix`>;
type `zeck` <double> => list<double[]>;
