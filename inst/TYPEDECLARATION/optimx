type `as.data.frame.opm` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, null, logical, ...> => class<`data.frame`>;
type `as.data.frame.optimx` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, null, logical, ...> => class<`data.frame`>;
type `axsearch` <double[], class<`function`>, double, double[], double[], null, double, ...> => list<double[] | class<`data.frame`>>;
type `bmchk` <double[], double[] | null, double[] | null, double[] | null, double, double | null, any> => list<double[] | character[]>;
type `bmstep` <double[], double[], double[], double[], double[], double> => double;
type `checksolver` <character, character[], any> => (character | null);
type `coef.opm` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, ...> => class<`matrix`>;
type `coef.optimx` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, ...> => class<`matrix`>;
type `ctrldefault` <double> => list<character[] | double[]>;
type `efn` <double[], ...> => double;
type `egr` <double[], ...> => double[];
type `ehess` <double[], ...> => class<`matrix`>;
type `f` <double[], ...> => double | <double[], ...> => double;
type `ffn` <double[], ...> => double;
type `filter` <character[]> => logical[];
type `fn` <double[], ...> => double;
type `fnchk` <double[], class<`function`>, double, ...> => list<double | character | null | double | character>;
type `fun` <double[], ...> => double;
type `func` <double[], ...> => double;
type `ggr` <double[], ...> => double[];
type `gHgen` <double[], any, class<`function`> | null, class<`function`> | null, list<double>, ...> => list<double[] | class<`matrix`>>;
type `gHgenb` <double[], any, class<`function`> | null, class<`function`> | null, null, null, null, list<double>, ...> => list<double[] | class<`matrix`>>;
type `gr` <double[], ...> => double[];
type `gradient` <double[], ...> => double[];
type `grback` <double[], class<`function`>, null, environment, ...> => double[];
type `grcentral` <double[], class<`function`>, null, environment, ...> => double[];
type `grchk` <double[], class<`function`>, class<`function`>, double, double, ...> => logical;
type `grfwd` <double[], class<`function`>, null, environment, ...> => double[];
type `grnd` <double[], class<`function`>, ...> => double[];
type `gtims` <double[], double[], double[], double, double, class<`function`>, ...> => double[];
type `hess` <double[], ...> => class<`matrix`>;
type `hesschk` <double[], class<`function`>, class<`function`>, class<`function`>, double, double, ...> => logical;
type `hessian` <double[], ...> => class<`matrix`>;
type `hjn` <double[], class<`function`>, double[], double[], double[] | null, list<double | character[] | double[]>, ...> => list<^double[]>;
type `initpc` <double[], double, any> => list<double[]>;
type `kktchk` <double[], class<`function`>, character | class<`function`>, null, null, null, logical, list<any>, ...> => list<double[] | class<`matrix`>>;
type `lin1` <double[], double[], double, double, double[], class<`function`>, ...> => list<double[]>;
type `lmqn` <double[], class<`function`>, double, double, double, double, logical, ...> => list<double[]>;
type `modlnp` <double[], any, double[], double, double, any, double, any, double[], any, ...> => list<double[]>;
type `msolve` <double[], double, any, any, double[]> => list<double[]>;
type `multistart` <class<`matrix`>, class<`function`>, class<`function`>, double, double, character, logical, list<double>, ...> => class<`data.frame`>;
type `mygr` <double[], ...> => double[] | <integer[], class<`function`>, ...> => double[] | <double[], class<`function`>, ...> => double[];
type `ndia3` <double[], double[], any, double[], any> => double[];
type `objective` <double[], ...> => double;
type `opm` <double[], class<`function`>, class<`function`> | null, class<`function`> | null, double, double, character, logical, list<double>, ...> => class<`data.frame`, `opm`>;
type `[.opm` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, ...> => (class<`data.frame`, `opm`> | ^double[] | class<`data.frame`, `optimx`>);
type `optchk` <double[], class<`function`>, class<`function`>, null, double[], double[], list<character[] | double[]>, ...> => list<null | double[]>;
type `optimr` <double[], class<`function`>, null | class<`function`>, null | class<`function`>, double, double, character, logical, list<character[] | double[] | double>, ...> => (class<`try-error`> | list<any>);
type `optimx` <double[], class<`function`>, class<`function`> | null, class<`function`> | null, double, double, any, null, logical, list<double>, ...> => class<`data.frame`, `optimx`>;
type `[.optimx` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, ...> => (class<`data.frame`, `opm`> | ^double[] | class<`data.frame`, `optimx`>);
type `optimx.check` <double[], class<`function`>, class<`function`> | null, class<`function`> | null, double, double, any, list<double>, logical, any, ...> => list<logical>;
type `optimx.run` <double[], class<`function`>, class<`function`> | null, class<`function`> | null, double, double, character[], null, logical, list<double>, ...> => class<`data.frame`>;
type `optimx.setup` <double[], class<`function`>, null | class<`function`>, null | class<`function`>, double, double, any, any, any, list<double>, ...> => list<any>;
type `polyopt` <double[], class<`function`>, class<`function`>, double, double, class<`data.frame`>, logical, list<double>, ...> => class<`data.frame`>;
type `proptimr` <list<any>> => null;
type `Rcgminu` <double[], class<`function`>, class<`function`> | character, list<any>, ...> => list<double[] | character>;
type `Rvmmin` <double[], class<`function`>, class<`function`>, double, double, double[], list<double>, ...> => list<double[] | character>;
type `Rvmminu` <double[], class<`function`>, class<`function`> | character, list<any>, ...> => list<double[] | character>;
type `scalecheck` <double[], double, double, any> => list<double | null>;
type `scalechk` <double[], double[], double[], logical, logical> => list<double>;
type `sfun` <double[], ...> => double;
type `snewton` <double[], class<`function`>, class<`function`>, class<`function`>, list<double>, ...> => list<any>;
type `snewtonm` <double[], class<`function`>, class<`function`>, class<`function`>, list<double>, ...> => list<any>;
type `ssbfgs` <double[], double[], double[], double, double, double, double> => double[];
type `step1` <double, double, double> => double;
type `summary.opm` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, any, integer[], ...> => (class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>);
type `summary.optimx` <class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>, any, integer[], ...> => (class<`data.frame`, `opm`> | class<`data.frame`, `optimx`>);
type `tn` <double[], class<`function`>, logical, ...> => list<double[]>;
