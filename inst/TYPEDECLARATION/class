type `batchSOM` <class<`data.frame`>, class<`somgrid`>, double[], any> => class<`SOM`>;
type `condense` <class<`matrix`>, class<`factor`>, integer, logical> => integer[];
type `filter` <character[]> => logical[];
type `knn` <class<`matrix`>, class<`matrix`>, class<`factor`> | integer[], double, double, logical, logical> => class<`factor`>;
type `knn1` <class<`matrix`>, class<`data.frame`> | class<`matrix`>, integer[] | class<`factor`>> => class<`factor`>;
type `knn.cv` <class<`matrix`>, class<`factor`>, double, double, logical, logical> => class<`factor`>;
type `lvq1` <class<`matrix`>, class<`factor`>, list<class<`matrix`> | class<`factor`>>, double, double> => list<class<`matrix`> | class<`factor`>>;
type `lvq2` <class<`matrix`>, class<`factor`>, list<class<`matrix`> | class<`factor`>>, double, double, double> => list<class<`matrix`> | class<`factor`>>;
type `lvq3` <class<`matrix`>, class<`factor`>, list<class<`matrix`> | class<`factor`>>, double, double, double, double> => list<class<`matrix`> | class<`factor`>>;
type `lvqinit` <class<`matrix`>, class<`factor`>, double, any, double> => list<class<`matrix`> | class<`factor`>>;
type `lvqtest` <list<class<`matrix`> | class<`factor`>>, class<`matrix`>> => class<`factor`>;
type `multiedit` <class<`matrix`>, class<`factor`>, double, double, double, logical> => integer[];
type `olvq1` <class<`matrix`>, class<`factor`>, list<class<`matrix`> | class<`factor`>>, double, double> => list<class<`matrix`> | class<`factor`>>;
type `plot.SOM` <class<`SOM`>, ...> => null;
type `plot.somgrid` <class<`somgrid`>, character, ...> => null;
type `reduce.nn` <class<`matrix`>, integer[], class<`factor`>> => integer[];
type `SOM` <class<`data.frame`>, class<`somgrid`>, double, double[] | list<double[]>, double[] | list<double[]>, any> => class<`SOM`>;
type `somgrid` <double, double, character> => class<`somgrid`>;
