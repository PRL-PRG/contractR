type `.local` <symbol, struct<`Comp.1`:null, `Comp.2`:null> | struct<> | tuple<null, null> | ^double[], language | null | ^double[], double[] | null, null> => struct<``:null, ``:null, `Comp.3`:null> | struct<`Comp.1`:struct<`mean`:^double[], `precision`:^double[]>, `Comp.2`:struct<`mean`:^double[], `precision`:^double[]>> | struct<`Comp.1`:double[], `Comp.2`:double[]> | ^double[] | tuple<> | tuple<^double[], ^double[]>;
type `@` <^double[], ^double[], null | language | ^double[], null | double[]> => struct<`mean`:double[], `precision`:double[]> | ^double[];
type `asMethod` <logical> => character | symbol;
type `betamix` <language, symbol, double | null, null, null, null, null, character[], character, struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, null | ^double[], null, tuple<>, logical, double, character, null, null, struct<`coef`:double, `delta`:double> | tuple<struct<`coef`:double, `delta`:double>, struct<`coef`:double, `delta`:double>> | struct<`coef`:struct<`mean`:double, `precision`:double>, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>>>> => struct<`flexmix`:null, `call`:language>;
type `betareg.control` <logical, character, double, logical, logical, null, double, double, null> => struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>;
type `coef.betamix` <struct<`flexmix`:null, `call`:language>, character[], character | integer[]> => ^double[];
type `coef.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>, `y`:double[], `x`:struct<`mean`:^double[], `precision`:^double[]>>, language, null | logical, null> => double[];
type `cooks.distance.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]>, null> => double[];
type `expand_offset` <null> => double[];
type `extraComponent` <character, double | struct<`mean`:double, `precision`:double>, double | null, character, character> => struct<`coef`:double, `delta`:double> | struct<`coef`:struct<`mean`:double, `precision`:double>, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>>>;
type `filter` <character[]> => logical[];
type `fitfun` <^double[], integer> => struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:double[], `psi1`:double[], `psi2`:double[]> | struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:double[], `psi1`:null, `psi2`:null> | struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:null, `psi1`:null, `psi2`:null>;
type `FLXdeterminePostunscaled` <tuple<null, null> | struct<`Comp.1`:null, `Comp.2`:null, `Comp.3`:null>> => ^double[];
type `FLXgetParameters` <struct<`Comp.1`:null, `Comp.2`:null, `Comp.3`:null>> => struct<`Comp.1`:double[], `Comp.2`:double[]>;
type `FLXgradlogLikfun` <struct<`Comp.1`:null, `Comp.2`:null>> => tuple<^double[], ^double[]>;
type `FLXMRbeta` <language, null | symbol, character[], character, struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>> => language;
type `FLXMRbeta_extra` <language, tuple<struct<`coef`:double, `delta`:double>, struct<`coef`:double, `delta`:double>> | struct<`coef`:double, `delta`:double> | struct<`coef`:struct<`mean`:double, `precision`:double>, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>>>, symbol, character[], character, struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>> => language;
type `FLXmstep` <^double[]> => tuple<>;
type `FLXreplaceParameters` <struct<`Comp.1`:null, `Comp.2`:null>> => struct<``:null, ``:null, `Comp.3`:null> | tuple<null, null>;
type `fn` <double[], null> => double;
type `fun` <symbol, symbol> => null | list<character | any => any>;
type `FUN` <double[] | struct<`coef`:double, `delta`:double> | struct<`coef`:struct<`mean`:double, `precision`:double>, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character>>>, struct<> | null, language> => ^double[] | struct<`mean`:^double[], `precision`:^double[]>;
type `gr` <double[], logical, null> => double[];
type `gradfun` <symbol, logical, struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:double[], `psi1`:double[], `psi2`:double[]>> => double[];
type `halfnormal.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]>, double, double, character> => ^double[];
type `hatvalues.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:tuple<>, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`yield`:double[], `gravity`:double[], `pressure`:double[], `temp10`:double[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`dyslexia`:character[]>, `precision`:struct<`dyslexia`:character[]>, `full`:struct<`dyslexia`:character[]>>, `contrasts`:struct<`mean`:struct<`dyslexia`:^double[]>, `precision`:struct<`dyslexia`:^double[]>>, `model`:struct<`accuracy`:double[], `dyslexia`:integer[], `iq`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`verdict`:character[], `conflict`:character[]>, `precision`:struct<`verdict`:character[], `conflict`:character[]>, `full`:struct<`verdict`:character[], `conflict`:character[]>>, `contrasts`:struct<`mean`:struct<`verdict`:^double[], `conflict`:^double[]>, `precision`:struct<`verdict`:^double[], `conflict`:^double[]>>, `model`:struct<`confidence`:double[], `verdict`:integer[], `conflict`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:tuple<>, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[], `stress`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double, `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:null, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:null, `precision`:null, `full`:null>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[]>, `y`:double[]>, null> => double[];
type `hessfun` <null | symbol, logical, struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:double[], `psi1`:double[], `psi2`:double[]>> => ^double[];
type `ll` <double[], double[]> => double[];
type `logLik.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:tuple<>, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:tuple<>, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[], `stress`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`verdict`:character[], `conflict`:character[]>, `precision`:struct<`verdict`:character[], `conflict`:character[]>, `full`:struct<`verdict`:character[], `conflict`:character[]>>, `contrasts`:struct<`mean`:struct<`verdict`:^double[], `conflict`:^double[]>, `precision`:struct<`verdict`:^double[], `conflict`:^double[]>>, `model`:struct<`confidence`:double[], `verdict`:integer[], `conflict`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`verdict`:character[], `conflict`:character[]>, `precision`:null, `full`:struct<`verdict`:character[], `conflict`:character[]>>, `contrasts`:struct<`mean`:struct<`verdict`:^double[], `conflict`:^double[]>, `precision`:null>, `model`:struct<`confidence`:double[], `verdict`:integer[], `conflict`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double, `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:null, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:null, `precision`:null, `full`:null>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`confidence`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double, `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:null, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:null, `precision`:null, `full`:null>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[]>, `y`:double[]>, null> => double;
type `loglikfun` <symbol, struct<`beta`:double[], `gamma`:double[], `eta`:double[], `phi_eta`:double[], `mu`:double[], `phi`:double[], `mustar`:double[], `psi1`:double[], `psi2`:double[]>> => double;
type `make.dmu.deta` <character> => any => any;
type `mytail` <integer[]> => integer;
type `plot.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]>, double | integer[], character[], character | language, character, logical, null, character, double, double> => null;
type `plot.betatree` <struct<`node`:struct<`id`:integer, `split`:struct<`varid`:integer, `breaks`:double, `index`:null, `right`:logical, `prob`:null, `info`:null>, `kids`:tuple<struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer>>, struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>>, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, `data`:struct<`accuracy`:double[], `iq`:double[], `x1`:double[], `x2`:double[], `x3`:integer[], `x4`:double[]>, `fitted`:struct<`(fitted)`:integer[]>, `terms`:language, `names`:null, `info`:struct<`call`:language, `formula`:language, `Formula`:language, `terms`:struct<`response`:language, `partitioning`:language>, `fit`:any => any, `control`:struct<`alpha`:double, `bonferroni`:logical, `minsize`:double, `maxdepth`:double, `mtry`:double, `trim`:double, `breakties`:logical, `parm`:null, `dfsplit`:logical, `prune`:null, `restart`:logical, `verbose`:logical, `caseweights`:logical, `ytype`:character, `xtype`:character, `terminal`:character, `inner`:character, `model`:logical, `numsplit`:character, `catsplit`:character, `vcov`:character, `ordinal`:character, `nrep`:double, `applyfun`:any => any>, `dots`:struct<`link`:character, `link.phi`:character>, `nreg`:double>> | struct<`node`:struct<`id`:integer, `split`:struct<`varid`:integer, `breaks`:null, `index`:integer[], `right`:logical, `prob`:null, `info`:null>, `kids`:tuple<struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer>>>, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, `data`:struct<`accuracy`:double[], `iq`:double[], `dyslexia`:integer[], `x1`:double[], `x2`:double[], `x3`:integer[]>, `fitted`:struct<`(fitted)`:integer[]>, `terms`:language, `names`:null, `info`:struct<`call`:language, `formula`:language, `Formula`:language, `terms`:struct<`response`:language, `partitioning`:language>, `fit`:any => any, `control`:struct<`alpha`:double, `bonferroni`:logical, `minsize`:double, `maxdepth`:double, `mtry`:double, `trim`:double, `breakties`:logical, `parm`:null, `dfsplit`:logical, `prune`:null, `restart`:logical, `verbose`:logical, `caseweights`:logical, `ytype`:character, `xtype`:character, `terminal`:character, `inner`:character, `model`:logical, `numsplit`:character, `catsplit`:character, `vcov`:character, `ordinal`:character, `nrep`:double, `applyfun`:any => any>, `dots`:struct<`link`:character, `link.phi`:character>, `nreg`:double>>, any => any, tuple<>, null, null, null> => null;
type `predict` <^double[], symbol | ^double[], null> => struct<`mean`:^double[], `delta`:double> | struct<`mean`:double[], `precision`:double[]>;
type `refit_optim` <struct<`Comp.1`:null, `Comp.2`:null>> => struct<`Comp.1`:struct<`mean`:^double[], `precision`:^double[]>, `Comp.2`:struct<`mean`:^double[], `precision`:^double[]>>;
type `register_s3_method` <character, character, character, null> => null;
type `sctest.betatree` <struct<`node`:struct<`id`:integer, `split`:struct<`varid`:integer, `breaks`:null, `index`:integer[], `right`:logical, `prob`:null, `info`:null>, `kids`:tuple<struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer>>>, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, `data`:struct<`accuracy`:double[], `iq`:double[], `dyslexia`:integer[], `x1`:double[], `x2`:double[], `x3`:integer[]>, `fitted`:struct<`(fitted)`:integer[]>, `terms`:language, `names`:null, `info`:struct<`call`:language, `formula`:language, `Formula`:language, `terms`:struct<`response`:language, `partitioning`:language>, `fit`:any => any, `control`:struct<`alpha`:double, `bonferroni`:logical, `minsize`:double, `maxdepth`:double, `mtry`:double, `trim`:double, `breakties`:logical, `parm`:null, `dfsplit`:logical, `prune`:null, `restart`:logical, `verbose`:logical, `caseweights`:logical, `ytype`:character, `xtype`:character, `terminal`:character, `inner`:character, `model`:logical, `numsplit`:character, `catsplit`:character, `vcov`:character, `ordinal`:character, `nrep`:double, `applyfun`:any => any>, `dots`:struct<`link`:character, `link.phi`:character>, `nreg`:double>> | struct<`node`:struct<`id`:integer, `split`:struct<`varid`:integer, `breaks`:double, `index`:null, `right`:logical, `prob`:null, `info`:null>, `kids`:tuple<struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer>>, struct<`id`:integer, `split`:null, `kids`:null, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>>, `surrogates`:null, `info`:struct<`coefficients`:double[], `objfun`:double, `object`:struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>>, `nobs`:integer, `p.value`:double, `test`:^double[]>>, `data`:struct<`accuracy`:double[], `iq`:double[], `x1`:double[], `x2`:double[], `x3`:integer[], `x4`:double[]>, `fitted`:struct<`(fitted)`:integer[]>, `terms`:language, `names`:null, `info`:struct<`call`:language, `formula`:language, `Formula`:language, `terms`:struct<`response`:language, `partitioning`:language>, `fit`:any => any, `control`:struct<`alpha`:double, `bonferroni`:logical, `minsize`:double, `maxdepth`:double, `mtry`:double, `trim`:double, `breakties`:logical, `parm`:null, `dfsplit`:logical, `prune`:null, `restart`:logical, `verbose`:logical, `caseweights`:logical, `ytype`:character, `xtype`:character, `terminal`:character, `inner`:character, `model`:logical, `numsplit`:character, `catsplit`:character, `vcov`:character, `ordinal`:character, `nrep`:double, `applyfun`:any => any>, `dots`:struct<`link`:character, `link.phi`:character>, `nreg`:double>>, null> => struct<`1`:^double[], `2`:^double[], `3`:null> | struct<`1`:^double[], `2`:null, `3`:^double[]>;
type `summary.betamix` <character, null> => struct<`flexmix`:null, `call`:language>;
type `summary.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `model`:struct<`accuracy`:double[], `iq`:double[]>> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:tuple<>, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`yield`:double[], `gravity`:double[], `pressure`:double[], `temp10`:double[], `temp`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`dyslexia`:character[]>, `precision`:struct<`dyslexia`:character[]>, `full`:struct<`dyslexia`:character[]>>, `contrasts`:struct<`mean`:struct<`dyslexia`:^double[]>, `precision`:struct<`dyslexia`:^double[]>>, `model`:struct<`accuracy`:double[], `dyslexia`:integer[], `iq`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`verdict`:character[], `conflict`:character[]>, `precision`:struct<`verdict`:character[], `conflict`:character[]>, `full`:struct<`verdict`:character[], `conflict`:character[]>>, `contrasts`:struct<`mean`:struct<`verdict`:^double[], `conflict`:^double[]>, `precision`:struct<`verdict`:^double[], `conflict`:^double[]>>, `model`:struct<`confidence`:double[], `verdict`:integer[], `conflict`:integer[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double[]>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:tuple<>, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[], `stress`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double, `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:null, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:null, `precision`:null, `full`:null>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`anxiety`:double[]>, `y`:double[]>, null, character, null> => struct<`coefficients`:struct<`mean`:^double[], `precision`:^double[]>, `residuals`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `weights`:integer[], `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `residuals.type`:character, `iterations`:integer[]> | struct<`coefficients`:struct<`mean`:^double[], `precision`:^double[]>, `residuals`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `residuals.type`:character, `iterations`:integer[]> | struct<`coefficients`:struct<`mean`:^double[], `precision`:^double[]>, `residuals`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `residuals.type`:character, `iterations`:double[]> | struct<`coefficients`:struct<`mean`:^double[], `precision`:^double[]>, `residuals`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:double, `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:null, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `residuals.type`:character, `iterations`:double[]>;
type `terms.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[]>, `y`:double[]> | struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]>, character[], null> => language;
type `update.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]>, null, language, logical> => struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:struct<`batch`:character[]>, `precision`:null, `full`:struct<`batch`:character[]>>, `contrasts`:struct<`mean`:struct<`batch`:^double[]>, `precision`:null>, `model`:struct<`yield`:double[], `batch`:integer[], `temp`:double[]>, `y`:double[]>;
type `vcov.betareg` <struct<`coefficients`:struct<`mean`:double[], `precision`:double>, `residuals`:double[], `fitted.values`:double[], `type`:character, `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `method`:character, `control`:struct<`phi`:logical, `method`:character, `maxit`:double, `hessian`:logical, `trace`:logical, `start`:null, `fsmaxit`:double, `fstol`:double, `fnscale`:double, `reltol`:double>, `scoring`:integer, `start`:double[], `weights`:null, `offset`:struct<`mean`:null, `precision`:null>, `n`:integer, `nobs`:integer, `df.null`:double, `df.residual`:integer, `phi`:logical, `loglik`:double, `vcov`:^double[], `bias`:^double[], `pseudo.r.squared`:double, `link`:struct<`mean`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>, `precision`:struct<`linkfun`:any => any, `linkinv`:any => any, `mu.eta`:any => any, `valideta`:any => any, `name`:character, `dmu.deta`:any => any>>, `converged`:logical, `call`:language, `formula`:language, `terms`:struct<`mean`:language, `precision`:language, `full`:language>, `levels`:struct<`mean`:tuple<>, `precision`:null, `full`:tuple<>>, `contrasts`:struct<`mean`:null, `precision`:null>, `model`:struct<`I(food/income)`:double[], `income`:double[], `persons`:integer[]>, `y`:double[]>, language, null, null> => ^double[];
