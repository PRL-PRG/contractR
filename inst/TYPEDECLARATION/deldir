type `acw` <list<double[]>> => list<double[]>;
type `binsrtR` <double[], double[], double[]> => list<double[]>;
type `deldir` <class<`data.frame`> | double[], any, null | list<double>, null | double[], double, logical, logical, double, null | class<`factor`> | double[], null | double[], logical, ...> => class<`deldir`>;
type `divchain` <class<`deldir`> | double[], ...> => class<`data.frame`, `divchain`>;
type `divchain.default` <double[], double[], class<`factor`>, ...> => class<`data.frame`, `divchain`>;
type `divchain.deldir` <class<`deldir`>, ...> => class<`data.frame`, `divchain`>;
type `dumpts` <double[], double[], list<double>, double[]> => list<double[]>;
type `duplicatedxy` <double[], double[]> => logical[];
type `get.cnrind` <double[], double[], double[]> => integer[];
type `getCol` <class<`tile.list`>, any> => null;
type `lawSummary` <class<`deldir`>> => list<double[] | list<class<`data.frame`> | double[]>>;
type `mid.in` <double[], double[], double[], double[]> => logical;
type `plot.deldir` <class<`deldir`>, logical, character, character[], logical, double, double, double[], null, null, null, null, logical, character, character, logical> => null;
type `plot.divchain` <class<`data.frame`, `divchain`>, logical, ...> => null;
type `plot.tile.list` <class<`tile.list`>, logical, logical, double, character[] | null, null | character, null | character, null, logical, logical, double, null | list<double[]>, character, character, character, logical> => null;
type `plot.triang.list` <class<`triang.list`>, logical, logical, character, character, character, double, ...> => null;
type `prelimtlist` <class<`deldir`>> => class<`matrix`>;
type `print.tileInfo` <class<`tileInfo`>, double, ...> => null;
type `tile.centroids` <class<`tile.list`>> => class<`data.frame`>;
type `tileInfo` <class<`deldir`>, logical> => class<`tileInfo`>;
type `[.tile.list` <class<`tile.list`>, double[], ...> => class<`tile.list`>;
type `tile.list` <class<`deldir`>> => class<`tile.list`>;
type `tilePerim` <class<`tile.list`>, logical> => list<double[]>;
type `triang.list` <class<`deldir`>> => class<`triang.list`>;
type `triMat` <class<`deldir`>> => class<`matrix`>;
type `which.tile` <double, double, class<`tile.list`>> => integer;
