type `check_bool` <logical, character> => logical;
type `check_col_types` <character[] | null> => character[];
type `check_file` <character> => character;
type `check_format` <character> => character;
type `check_guess_max` <double, double> => double;
type `check_non_negative_integer` <double, character> => double;
type `excel_format` <character[], logical> => ^character[];
type `excel_sheets` <character> => character[];
type `filter` <character[]> => logical[];
type `format_from_ext` <character[]> => ^character[];
type `format_from_signature` <character[]> => (character[] | null);
type `FUN` <raw[]> => null | <character> => raw[] | <character, character | double | null, null | character | class<`cell_limits`, `list`>, logical, null | character[], character, logical, double, double, double, logical, character | class<`formula`> | class<`function`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `is_integerish` <double> => logical;
type `is_string` <character> => logical;
type `read_excel` <character, character | double | null, null | character | class<`cell_limits`, `list`>, logical, null | character[], character, logical, double, double, double, logical, character | class<`formula`> | class<`function`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `read_excel_` <character, character | double | null, null | character | class<`cell_limits`, `list`>, logical, null | character[], character, logical, any, any, double, logical, character | class<`formula`> | class<`function`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `read_fun` <character, double, double[], logical, logical, character[], character, logical, double, logical> => list<any> | <character, double, double[], logical, logical, character, character, logical, double, logical> => list<any>;
type `readxl_example` <null | character> => character[];
type `readxl_progress` < > => logical;
type `set_readxl_names` <list<any>, character | class<`function`> | class<`formula`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `sheets_fun` <character> => character[] | <character> => character[];
type `standardise_limits` <character | class<`cell_limits`, `list`> | null, any, any, any> => double[];
type `standardise_sheet` <double | null | character, null | character | class<`cell_limits`, `list`>, any> => double;
type `xls_sheets` <character> => character[];
type `xlsx_sheets` <character> => character[];
