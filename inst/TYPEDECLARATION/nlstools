type `asCI` <class<`nls`>, character[], double> => class<`matrix`>;
type `confint2` <class<`nls`>, any, double, character[], ...> => class<`matrix`>;
type `filter` <character[]> => logical[];
type `fmodele` <double[], double, double, double> => double[];
type `format.perc` <double[], double> => character[];
type `formula2function` <class<`call`>> => class<`function`>;
type `fun` <any, any> => null;
type `FUN` <list<double[]>> => double | <integer> => list<double[]> | <list<double[]>> => double[] | <double[]> => double[] | <double[]> => double;
type `nlsBoot` <class<`nls`>, double> => class<`nlsBoot`>;
type `nlsConfRegions` <class<`nls`>, double, double> => class<`nlsConfRegions`>;
type `nlsResiduals` <class<`nls`>> => class<`nlsResiduals`>;
type `overview` <class<`nls`>> => null;
type `plotfit` <class<`nls`>, logical, double, null, null, double, character, double, double, character, character, ...> => null;
type `plot.nlsBoot` <class<`nlsBoot`>, character[], any, logical, ...> => list<character | double[] | null>;
type `plot.nlsConfRegions` <class<`nlsConfRegions`>, logical, logical, ...> => list<character | double[] | null>;
type `plot.nlsResiduals` <class<`nlsResiduals`>, double, ...> => null;
type `summary.nlsBoot` <class<`nlsBoot`>, ...> => null;
