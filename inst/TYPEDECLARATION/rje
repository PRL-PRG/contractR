type `.sweep0` <^integer[] | double[], double | integer[], ^double[], character> => ^double[];
type `%subof%` <double[], double[]> => logical;
type `and0` <double[], double[]> => logical[];
type `combinations` <double[]> => ^double[];
type `conditionMatrix` <^double[], double, double, null | double, null | double[], logical, double> => ^double[];
type `conditionTable2` <double[], double[], null | double[], double> => double[];
type `designMatrix` <double> => ^double[];
type `expit` <double[]> => double[];
type `fastHadamard` <integer[], logical> => double[];
type `filter` <character[]> => logical[];
type `fsapply` <tuple<integer[]> | tuple<double, integer[]>, any => any> => double[];
type `fun` <symbol, character> => null;
type `FUN` <character[] | double[]> => character[] | integer[];
type `interventionTable` <double[], double, double | integer[]> => double[];
type `is.wholenumber` <double[], double> => logical[];
type `last` <integer[]> => integer;
type `logit` <double[]> => double[];
type `marginMatrix` <^double[], double[], null | double[], logical, logical> => ^double[];
type `marginTable` <double[] | ^integer[], double[], logical> => ^double[];
type `patternRepeat0` <double[], double[], logical, logical> => integer[];
type `powerSet` <character[] | integer[], null | double, logical> => list<character[]> | list<integer[]>;
type `powerSetMat` <double> => ^double[];
type `printPercentage` <integer, double, double, double, double, double> => null;
type `propTable` <^integer[] | double[], double | integer[]> => ^double[];
type `rdirichlet` <double, double[]> => ^double[];
type `rowMins` <^double[]> => double[];
type `setmatch` <tuple<integer[], double[]>, tuple<integer[], double[]>, null | integer> => ^integer[];
type `setsetdiff` <tuple<integer[], integer[]>, tuple<integer[], integer[]>> => tuple<integer[]>;
type `setsetequal` <tuple<integer[], integer[]>, tuple<integer[], double[]>> => logical;
type `subsetmatch` <tuple<integer[], integer[]>, tuple<integer[], integer[]>, null> => integer[];
type `subsetMatrix` <double> => ^double[];
