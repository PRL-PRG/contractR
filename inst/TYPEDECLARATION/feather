type `as.data.frame.feather` <class<`feather`>, null, logical, ...> => class<`data.frame`>;
type `close.feather` <class<`feather`>, ...> => null;
type `closeFeather` <class<`feather`>> => null;
type `coldataFeather` <class<`feather`>, integer[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `dim.feather` <class<`feather`>> => double[];
type `feather` <character> => class<`feather`>;
type `[.feather` <class<`feather`>, any, any, logical> => class<`data.frame`, `tbl`, `tbl_df`>;
type `feather_example` <character> => character;
type `filter` <character[]> => logical[];
type `openFeather` <character> => class<`feather`>;
type `read_feather` <character, null> => class<`data.frame`, `tbl`, `tbl_df`>;
type `rowsFeather` <class<`feather`>> => double;
