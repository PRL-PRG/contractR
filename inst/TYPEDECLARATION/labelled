type `add_value_labels` <struct<`s1`:character[], `s2`:double[]>, double> => struct<`s1`:character[], `s2`:double[]>;
type `copy_labels_from` <struct<`id`:integer[], `happy`:integer[], `gender`:double[]>, struct<`id`:integer[], `happy`:integer[], `gender`:double[]>> => struct<`id`:integer[], `happy`:integer[], `gender`:double[]>;
type `copy_labels.data.frame` <struct<`id`:integer[], `happy`:integer[], `gender`:double[]>, struct<`id`:integer[], `happy`:integer[], `gender`:double[]>> => struct<`id`:integer[], `happy`:integer[], `gender`:double[]>;
type `copy_labels.default` <double[], double[]> => double[];
type `filter` <character[]> => logical[];
type `foreign_to_labelled` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>;
type `FUN` <double[] | character, symbol | character[], symbol | logical, symbol | logical, symbol | character[], symbol | logical, logical, symbol | logical, symbol | logical, symbol, ???> => ? double[] | ^integer[] | character;
type `look` <character[]> => integer[];
type `na_range.default` <double[]> => null;
type `na_range.haven_labelled_spss` <^double[]> => ? double[];
type `na_range<-.default` <integer[], null> => integer[];
type `na_range<-.haven_labelled` <^double[], ? double[]> => ^double[];
type `na_values.data.frame` <struct<`s1`:character[], `s2`:double[]>> => struct<`s1`:null, `s2`:double>;
type `na_values.default` <character[] | double[]> => null;
type `na_values.haven_labelled_spss` <^double[]> => double[];
type `na_values<-.default` <integer[], null> => integer[];
type `na_values<-.haven_labelled` <^double[], ? double> => ^double[];
type `nolabel_to_na.haven_labelled` <^double[]> => ^double[];
type `recode.haven_labelled` <integer[], integer, null, null> => integer[];
type `remove_labels.haven_labelled_spss` <integer[], logical> => ^integer[];
type `remove_user_na.haven_labelled_spss` <^double[], logical> => ^double[];
type `remove_value_labels` <struct<`s1`:character[], `s2`:double[]>, double | integer[]> => struct<`s1`:character[], `s2`:double[]>;
type `set_na_values` <struct<`s1`:character[], `s2`:double[]>, ? double> => struct<`s1`:character[], `s2`:double[]>;
type `set_value_labels` <struct<`s1`:character[], `s2`:double[]>, ? character[] | double[]> => struct<`s1`:character[], `s2`:double[]>;
type `set_variable_labels` <struct<`id`:integer[], `happy`:integer[], `gender`:double[]>, ? character | ???, ? character[]> => struct<`id`:integer[], `happy`:integer[], `gender`:double[]>;
type `sort_val_labels.haven_labelled` <^double[], character[], logical> => ^double[];
type `to_character.haven_labelled` <^double[], character[], logical, logical | ???> => ^character[];
type `to_factor.data.frame` <struct<`id_woman`:double[], `id_household`:double[], `weight`:double[], `interview_date`:double[], `date_of_birth`:double[], `age`:double[], `residency`:double[], `region`:double[], `instruction`:double[], `employed`:double[], `matri`:double[], `religion`:double[], `newspaper`:double[], `radio`:double[], `tv`:double[], `ideal_nb_children`:double[], `test`:double[]>, character[], logical, logical, character[], logical, logical, logical, logical, logical, ???> => struct<`id_woman`:double[], `id_household`:double[], `weight`:double[], `interview_date`:double[], `date_of_birth`:double[], `age`:double[], `residency`:integer[], `region`:integer[], `instruction`:integer[], `employed`:integer[], `matri`:integer[], `religion`:^integer[], `newspaper`:integer[], `radio`:integer[], `tv`:integer[], `ideal_nb_children`:integer[], `test`:integer[]>;
type `to_factor.haven_labelled` <^double[] | character[], character[], logical, logical, character[], logical | symbol, logical, logical, logical, logical | symbol, ???> => ^integer[];
type `to_labelled.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>, ???> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>;
type `to_labelled.factor` <^integer[], ? character[] | double[], ???> => character[] | ^double[];
type `user_na_to_na.haven_labelled_spss` <^double[]> => ^double[];
type `val_label.haven_labelled` <^double[], double, logical> => ? character;
type `val_label<-.data.frame` <struct<`v1`:integer[], `v2`:double[], `v3`:integer[]>, double, character> => struct<`v1`:integer[], `v2`:double[], `v3`:integer[]>;
type `val_label<-.haven_labelled` <^double[], double, ? character> => ^double[];
type `val_label<-.numeric` <^double[], double, character> => ^double[];
type `val_labels_to_na.haven_labelled` <double[]> => ^double[];
type `val_labels.data.frame` <struct<`s1`:character[], `s2`:double[]>, logical> => struct<`s1`:character[], `s2`:double[]> | struct<`v1`:double[], `v2`:double[], `v3`:double[]> | struct<`v1`:integer[], `v2`:double[], `v3`:null> | struct<`v1`:null, `v2`:null, `v3`:null>;
type `val_labels.default` <^double[], logical | symbol> => null;
type `val_labels.haven_labelled` <character[] | ^double[], logical> => character[] | double[];
type `val_labels<-.character` <character[], character[]> => character[];
type `val_labels<-.data.frame` <struct<`v1`:integer[], `v2`:double[], `v3`:integer[]>, ? struct<`v1`:double[], `v2`:double[]> | double[]> => struct<`v1`:integer[], `v2`:double[], `v3`:integer[]>;
type `val_labels<-.default` <integer[]> => integer[];
type `val_labels<-.haven_labelled` <^double[], ? double[]> => ^double[];
type `val_labels<-.numeric` <^double[], ? double[]> => ^double[];
type `var_label.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>, logical> => character[] | struct<`id`:character, `happy`:character, `gender`:character> | struct<`id`:character, `happy`:null, `gender`:character> | struct<`s1`:character, `s2`:character> | struct<`Sepal.Length`:character, `Sepal.Width`:character, `Petal.Length`:character, `Petal.Width`:character, `Species`:character> | struct<`Sepal.Length`:null, `Sepal.Width`:character, `Petal.Length`:character, `Petal.Width`:character, `Species`:character> | struct<`Sepal.Length`:null, `Sepal.Width`:null, `Petal.Length`:null, `Petal.Width`:null, `Species`:null> | struct<`age`:null, `sex`:null, `race`:null, `edu`:null, `income`:null, `ninsclas`:null, `cat1`:null, `das2d3pc`:null, `dnr1`:null, `ca`:null, `surv2md1`:null, `aps1`:null, `scoma1`:null, `wtkilo1`:null, `temp1`:null, `meanbp1`:null, `resp1`:null, `hrt1`:null, `pafi1`:null, `paco21`:null, `ph1`:null, `wblc1`:null, `hema1`:null, `sod1`:null, `pot1`:null, `crea1`:null, `bili1`:null, `alb1`:null, `resp`:null, `card`:null, `neuro`:null, `gastr`:null, `renal`:null, `meta`:null, `hema`:null, `seps`:null, `trauma`:null, `ortho`:null, `cardiohx`:null, `chfhx`:null, `dementhx`:null, `psychhx`:null, `chrpulhx`:null, `renalhx`:null, `liverhx`:null, `gibledhx`:null, `malighx`:null, `immunhx`:null, `transhx`:null, `amihx`:null> | struct<`HI_CHOL`:null, `race`:null, `agecat`:null, `RIAGENDR`:null> | struct<`time`:null, `status`:null, `age`:null, `sex`:null, `ascites`:null, `hepato`:null, `spiders`:null, `edema`:null, `bili`:null, `chol`:null, `albumin`:null, `copper`:null, `alk.phos`:null, `ast`:null, `trig`:null, `platelet`:null, `protime`:null, `stage`:null>;
type `var_label.default` <character[] | ^double[], logical> => ? character;
type `var_label<-.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>, character[]> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>;
type `var_label<-.default` <^character[] | ^double[], ? character> => ^character[] | ^double[];
