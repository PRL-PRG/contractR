type `.allcovClass` <class<`matrix`>, class<`factor`>> => class<`allcov`>;
type `.allcovMcd` <class<`matrix`>, class<`factor`>, character | class<`CovControlOgk`>, ...> => class<`allcov`>;
type `arpLim` <class<`PsiBwt`>> => double[] | <class<`PsiBwt`>> => double[];
type `biplot` <class<`PcaClassic`>, ...> => null | <class<`PcaProj`>, ...> => null | <class<`PcaCov`>, ...> => null | <class<`PcaLocantore`>, ...> => null | <class<`PcaGrid`>, ...> => null | <class<`PcaHubert`>, ...> => null;
type `.biplot` <class<`matrix`>, class<`matrix`>, any, logical, any, double[], null, null, double, null, null, double, character | null, null, null, null, ...> => null;
type `.check_vars_numeric` <class<`data.frame`>> => logical;
type `.chiInt` <integer, double, double> => double;
type `.chiInt2` <integer, double, double> => double;
type `.chiInt2D` <integer, double, double> => double;
type `.chiIntD` <integer, double, double> => double;
type `.classPC` <class<`matrix`>, logical, logical, logical, logical, logical> => list<double[] | class<`matrix`> | double[] | class<`matrix`> | null | double | null>;
type `.confusion` <class<`factor`>, class<`factor`>, null, logical> => class<`table`>;
type `Cov` <class<`matrix`>, logical> => class<`CovClassic`>;
type `CovClassic` <class<`data.frame`> | class<`matrix`>, logical> => class<`CovClassic`>;
type `CovControlMcd` <double, double, null, double, null, logical, logical> => class<`CovControlMcd`>;
type `CovControlMest` <double, double, double, double> => class<`CovControlMest`>;
type `CovControlMMest` <double, double, double, class<`CovControlSest`>, logical, double> => class<`CovControlMMest`>;
type `CovControlMrcd` <double, null, double, null, character[], double, logical> => class<`CovControlMrcd`>;
type `CovControlMve` <double, double, null, logical> => class<`CovControlMve`>;
type `CovControlOgk` <double, double, null, class<`function`>, character, character> => class<`CovControlOgk`>;
type `CovControlSde` <double, double, double, double, double, null, logical, double> => class<`CovControlSde`>;
type `CovControlSest` <double, double, double, double, double, null, logical, double, character> => class<`CovControlSest`>;
type `CovMcd` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`matrix`>, logical, double, character | double, any, any, null, logical, null, logical, logical, class<`CovControlMcd`>, ...> => class<`CovMcd`>;
type `CovMest` <class<`data.frame`> | class<`matrix`>, double, double, double, double, any, any, any, any> => class<`CovMest`>;
type `CovMMest` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`matrix`>, double, double, logical, double, logical, double, any> => class<`CovMMest`>;
type `CovMrcd` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`matrix`>, double, null, double, null, logical, null, character, any, logical, class<`CovControlMrcd`>> => class<`CovMrcd`>;
type `CovMve` <class<`data.frame`> | class<`matrix`>, double, double, null, logical, any> => class<`CovMve`>;
type `covMWcd` <class<`matrix`>, class<`factor`>, double> => class<`mwcd`>;
type `CovOgk` <class<`data.frame`> | class<`matrix`>, double, double, any> => class<`CovOgk`>;
type `CovRobust` <class<`matrix`> | class<`data.frame`>, any, class<`function`>> => (class<`CovMcd`> | class<`CovMest`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>);
type `.covRobustControl` <any, any, any> => (class<`CovControlMcd`> | class<`CovControlMest`> | class<`CovControlOgk`> | class<`CovControlSde`> | class<`CovControlSest`>);
type `..covSBic` <class<`matrix`>, any, double, double, any, any, double, null, any, logical> => list<double[] | class<`matrix`> | character>;
type `CovSde` <class<`data.frame`> | class<`matrix`>, any, any, double, double, double, null, logical, any> => class<`CovSde`>;
type `CovSest` <class<`data.frame`> | class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`> | class<`matrix`>, double, double, double, double, double, null, logical, double, any, double, null, logical, character[], any, any, any, any> => class<`CovSest`>;
type `..covSRocke` <class<`matrix`>, double, double, double, any, any, double, null, any, logical> => list<double[] | class<`matrix`> | character>;
type `..covSURREAL` <class<`matrix`>, double, double, double, any, any> => list<double[] | class<`matrix`> | character>;
type `.crit.od` <double[], double, logical, any, logical> => double;
type `..CSloc` <class<`matrix`>, double, double, double, double, double, any> => list<double[] | class<`matrix`> | character>;
type `csolve` <class<`PsiBwt`>> => class<`PsiBwt`> | <class<`PsiBwt`>> => class<`PsiBwt`>;
type `.csolve.bw.MM` <integer, double, logical> => double;
type `.csolve.bw.S` <double, integer> => list<double>;
type `.detmrcd` <class<`matrix`>, null, double, null, double, double, double, double, null, logical, any, integer> => list<double[] | class<`matrix`> | null>;
type `..detSloc` <class<`matrix`>, null, logical, logical, class<`function`>, double, logical, double, double, logical> => list<any>;
type `.distances` <class<`matrix`> | class<`data.frame`>, integer, class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>, double> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>);
type `erho` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `erhoLim` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `erhoLimD` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `extradir` <class<`matrix`>, any, logical> => class<`matrix`>;
type `.fastmve` <class<`matrix`>, double, double> => list<double[] | class<`matrix`>>;
type `FUN` <class<`CovControlMcd`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovMcd`> | <class<`CovSest`>> => character | <class<`CovOgk`>> => character | <class<`CovControlSest`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovSest`> | <class<`CovControlOgk`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovOgk`> | <class<`CovMcd`> | class<`CovMest`> | class<`CovOgk`> | class<`CovSest`> | class<`CovSde`>> => character | <class<`CovMcd`>> => character | <class<`CovControlMcd`> | class<`CovControlMest`> | class<`CovControlOgk`> | class<`CovControlSest`> | class<`CovControlSde`>, class<`data.frame`> | class<`matrix`>, ...> => (class<`CovMcd`> | class<`CovMest`> | class<`CovOgk`> | class<`CovSest`> | class<`CovSde`>);
type `.getApprox` <integer, integer> => list<double>;
type `getCenter` <class<`CovMve`>> => double[] | <class<`CovClassic`>> => double[] | <class<`CovClassic`> | class<`CovMcd`> | class<`CovSest`> | class<`CovMest`> | class<`CovMMest`> | class<`CovOgk`> | class<`CovSde`> | class<`CovMrcd`> | class<`CovMve`>> => double[] | <class<`CovMcd`>> => double[] | <class<`CovOgk`>> => double[] | <class<`CovSde`>> => double[] | <class<`CovMMest`>> => double[] | <class<`CovMest`>> => double[] | <class<`CovMrcd`>> => double[] | <class<`CovSest`>> => double[];
type `getCorr` <class<`CovSest`>> => class<`matrix`> | <class<`CovMcd`>> => class<`matrix`> | <class<`CovClassic`> | class<`CovMcd`> | class<`CovOgk`> | class<`CovSest`>> => class<`matrix`> | <class<`CovClassic`>> => class<`matrix`> | <class<`CovOgk`>> => class<`matrix`>;
type `getCov` <class<`CovOgk`>> => class<`matrix`> | <class<`CovSest`>> => class<`matrix`> | <class<`CovMest`>> => class<`matrix`> | <class<`CovMcd`>> => class<`matrix`> | <class<`CovMve`>> => class<`matrix`> | <class<`CovClassic`>> => class<`matrix`> | <class<`CovSde`>> => class<`matrix`> | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovMrcd`> | class<`CovMve`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>> => class<`matrix`> | <class<`CovMMest`>> => class<`matrix`> | <class<`CovMrcd`>> => class<`matrix`>;
type `getData` <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>> => class<`matrix`> | <class<`CovMest`>> => class<`matrix`> | <class<`CovOgk`>> => class<`matrix`> | <class<`CovSest`>> => class<`matrix`> | <class<`CovSde`>> => class<`matrix`> | <class<`CovMMest`>> => class<`matrix`> | <class<`CovClassic`>> => class<`matrix`> | <class<`CovMcd`>> => class<`matrix`>;
type `getDet` <class<`CovSest`>> => double | <class<`CovSest`>> => double;
type `getDistance` <class<`CovMcd`>> => double[] | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>> => double[] | <class<`CovSde`>> => double[] | <class<`CovMMest`>> => double[] | <class<`CovClassic`>> => double[] | <class<`CovSest`>> => double[] | <class<`CovMest`>> => double[] | <class<`CovOgk`>> => double[];
type `getEigenvalues` <class<`PcaCov`>> => double[] | <class<`PcaHubert`>> => double[] | <class<`PcaClassic`>> => double[] | <class<`PcaGrid`>> => double[] | <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>> => double[] | <class<`PcaLocantore`>> => double[] | <class<`PcaProj`>> => double[];
type `getEllipse` <double[], class<`matrix`>, double> => class<`matrix`>;
type `getEvals` <class<`CovClassic`>> => double[] | <class<`CovMcd`>> => double[] | <class<`CovMest`>> => double[] | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`>> => double[];
type `getLoadings` <class<`PcaCov`>> => class<`matrix`> | <class<`PcaClassic`>> => class<`matrix`> | <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>> => class<`matrix`> | <class<`PcaLocantore`>> => class<`matrix`> | <class<`PcaProj`>> => class<`matrix`> | <class<`PcaGrid`>> => class<`matrix`> | <class<`PcaHubert`>> => class<`matrix`>;
type `getMeth` <class<`CovSest`>> => character | <class<`CovOgk`>> => character | <class<`CovMcd`> | class<`CovMest`> | class<`CovOgk`> | class<`CovSest`> | class<`CovSde`>> => character | <class<`CovMcd`>> => character | <class<`CovMest`>> => character | <class<`CovSde`>> => character;
type `getPrcomp` <class<`PcaClassic`>> => class<`prcomp`> | <class<`PcaLocantore`>> => class<`prcomp`> | <class<`PcaCov`>> => class<`prcomp`> | <class<`PcaHubert`>> => class<`prcomp`> | <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>> => class<`prcomp`>;
type `getScores` <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>> => class<`matrix`> | <class<`PcaHubert`>> => class<`matrix`> | <class<`PcaCov`>> => class<`matrix`> | <class<`PcaProj`>> => class<`matrix`> | <class<`PcaLocantore`>> => class<`matrix`> | <class<`PcaClassic`>> => class<`matrix`> | <class<`PcaGrid`>> => class<`matrix`>;
type `getSdev` <class<`PcaGrid`>> => double[] | <class<`PcaClassic`>> => double[] | <class<`PcaClassic`> | class<`PcaGrid`>> => double[];
type `getShape` <class<`CovSest`>> => class<`matrix`> | <class<`CovSest`>> => class<`matrix`>;
type `isClassic` <class<`CovSest`>> => logical | <class<`CovSest`>> => logical;
type `isSingular` <class<`CovSde`>> => logical | <class<`CovClassic`>> => logical | <class<`CovMest`>> => logical | <class<`CovSest`>> => logical | <class<`CovMMest`>> => logical | <class<`CovMcd`>> => logical | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`> | class<`CovSest`>> => logical;
type `.isSingular` <class<`matrix`>> => logical;
type `.iter.bic` <class<`matrix`>, double[], class<`matrix`>, double, double, logical> => list<double[] | class<`matrix`>>;
type `iterM` <class<`PsiBwt`>, class<`matrix`>, double[], class<`matrix`>, double, double> => list<double[] | class<`matrix`>> | <class<`PsiBwt`>, class<`matrix`>, double[], class<`matrix`>, double, double> => list<double[] | class<`matrix`>>;
type `.iter.rocke` <class<`matrix`>, double[], class<`matrix`>, double, double, double, logical> => list<double[] | class<`matrix`>>;
type `.kappa.s` <double, integer> => double;
type `label` <integer[], double[], double, double> => null;
type `.label` <any, any, integer, any> => null;
type `label.dd` <double[], double[], double, double, double> => null;
type `LdaClassic` <class<`data.frame`> | class<`formula`>, ...> => class<`LdaClassic`>;
type `LdaClassic.default` <class<`matrix`> | class<`data.frame`>, class<`factor`>, double[], double, ...> => class<`LdaClassic`>;
type `LdaClassic.formula` <class<`formula`>, any, ..., any, any> => class<`LdaClassic`>;
type `Linda` <class<`data.frame`> | class<`formula`>, ...> => class<`Linda`>;
type `Linda.default` <class<`matrix`> | class<`data.frame`>, class<`factor`> | double[], double[], double, character[], double, logical, any, logical, ...> => class<`Linda`>;
type `Linda.formula` <class<`formula`>, any, ..., any, any> => class<`Linda`>;
type `mtxconfusion` <class<`factor`>, class<`factor`>, null, logical> => class<`table`>;
type `.myddplot` <double[], double[], double, any, character, character, character, integer[], ...> => null;
type `.mydistplot` <double[], double, logical, any, null | double[], character, character, character, any, ...> => null;
type `.myellipse` <class<`matrix`>, list<class<`matrix`> | double[]>, null, double, logical, double, character, character, character, character, any, character[], character[], any, any> => null;
type `myPcaPrint` <class<`PcaClassic`> | class<`PcaHubert`>, logical, logical, ...> => (class<`PcaClassic`> | class<`PcaHubert`>);
type `.mypredictLda` <double[], character[], class<`matrix`>, double[], class<`matrix`>> => class<`PredictLda`>;
type `.mypredictQda` <double[], character[], class<`matrix`>, class<`array`>, double[], class<`matrix`>> => class<`PredictQda`>;
type `myscreeplot` <any, class<`CovClassic`>> => null;
type `.myscreeplot` <any, class<`CovClassic`>> => null;
type `PcaClassic` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`PcaClassic`>;
type `PcaClassic.default` <class<`matrix`> | class<`data.frame`>, double, double, logical, logical, double, logical, ...> => class<`PcaClassic`>;
type `PcaClassic.formula` <class<`formula`>, class<`data.frame`>, any, any, ...> => class<`PcaClassic`>;
type `PcaCov` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`PcaCov`>;
type `PcaCov.default` <class<`matrix`> | class<`data.frame`>, double, integer, class<`CovControlMcd`> | class<`CovControlSest`> | null | class<`CovControlOgk`>, logical, logical, double, logical, ...> => class<`PcaCov`>;
type `PcaCov.formula` <class<`formula`>, class<`data.frame`>, any, any, ...> => class<`PcaCov`>;
type `pca.ddplot` <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>, double, double, any, any, any, double, ...> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>);
type `pca.distances` <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>, class<`matrix`> | class<`data.frame`>, integer, double> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaGrid`> | class<`PcaHubert`> | class<`PcaLocantore`> | class<`PcaProj`>);
type `pca.distplot` <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>, double, any, double, ...> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>);
type `PcaGrid` <class<`formula`> | class<`matrix`>, ...> => class<`PcaGrid`>;
type `PcaGrid.default` <class<`matrix`>, double, integer, logical, any, double, logical, ...> => class<`PcaGrid`>;
type `PcaGrid.formula` <class<`formula`>, class<`data.frame`>, any, any, ...> => class<`PcaGrid`>;
type `PcaHubert` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`PcaHubert`>;
type `PcaHubert.default` <class<`matrix`> | class<`data.frame`>, double, double, double, logical, double, logical, logical, double, logical, ...> => class<`PcaHubert`>;
type `PcaHubert.formula` <class<`formula`>, class<`data.frame`>, any, any, ...> => class<`PcaHubert`>;
type `PcaLocantore` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`PcaLocantore`>;
type `PcaLocantore.default` <class<`matrix`> | class<`data.frame`>, double, integer, double, any, logical, logical, double, logical, ...> => class<`PcaLocantore`>;
type `PcaLocantore.formula` <class<`formula`>, class<`data.frame`>, any, any, ...> => class<`PcaLocantore`>;
type `PcaProj` <class<`matrix`>, ...> => class<`PcaProj`>;
type `PcaProj.default` <class<`matrix`>, double, integer, logical, any, double, logical, ...> => class<`PcaProj`>;
type `pca.scoreplot` <class<`PcaHubert`>, double, double, any, double, ...> => null;
type `plot` <class<`CovMest`>, any, ...> => null | <class<`PcaClassic`>, any, ...> => class<`PcaClassic`> | <class<`CovMcd`>, any, ...> => null | <class<`CovSde`>, any, ...> => null | <class<`PcaLocantore`>, any, ...> => class<`PcaLocantore`> | <class<`PcaCov`>, any, ...> => class<`PcaCov`> | <class<`CovSest`>, any, ...> => null | <class<`CovMMest`>, any, ...> => null | <class<`CovClassic`>, any, ...> => null | <class<`PcaHubert`>, any, ...> => class<`PcaHubert`>;
type `predict` <class<`QdaCov`>, ...> => class<`PredictQda`> | <class<`Linda`>, ...> => class<`PredictLda`> | <class<`QdaClassic`>, ...> => class<`PredictQda`> | <class<`LdaClassic`>, ...> => class<`PredictLda`>;
type `psi` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `QdaClassic` <class<`formula`>, ...> => class<`QdaClassic`>;
type `QdaClassic.default` <class<`matrix`>, class<`factor`>, double[], double, ...> => class<`QdaClassic`>;
type `QdaClassic.formula` <class<`formula`>, any, ..., any, any> => class<`QdaClassic`>;
type `QdaCov` <class<`formula`>, ...> => class<`QdaCov`>;
type `QdaCov.default` <class<`matrix`>, class<`factor`>, double[], double, any, ...> => class<`QdaCov`>;
type `QdaCov.formula` <class<`formula`>, any, ..., any, any> => class<`QdaCov`>;
type `.qqplot` <double[], integer, double, logical, any, expression, expression, character, integer[], ...> => null;
type `restimate` <class<`CovControlMcd`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovMcd`> | <class<`CovControlSest`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovSest`> | <class<`CovControlOgk`>, class<`data.frame`> | class<`matrix`>, ...> => class<`CovOgk`> | <class<`CovControlMcd`> | class<`CovControlMest`> | class<`CovControlOgk`> | class<`CovControlSest`> | class<`CovControlSde`>, class<`data.frame`> | class<`matrix`>, ...> => (class<`CovMcd`> | class<`CovMest`> | class<`CovOgk`> | class<`CovSest`> | class<`CovSde`>) | <class<`CovControlMest`>, class<`matrix`>, ...> => class<`CovMest`> | <class<`CovControlSde`>, class<`matrix`>, ...> => class<`CovSde`>;
type `.rrpairs` <class<`CovSest`>, character, character, character, character, ...> => null;
type `scorePlot` <class<`PcaHubert`>, ...> => null | <class<`PcaHubert`>, ...> => null;
type `screeplot` <class<`PcaHubert`>, ...> => null | <class<`PcaClassic`>, ...> => null | <class<`PcaLocantore`>, ...> => null | <class<`PcaCov`>, ...> => null;
type `.signflip` <class<`matrix`> | double> => (class<`matrix`> | double);
type `spatial.median` <class<`matrix`>, double> => list<double[]>;
type `summary` <class<`CovMest`>, ...> => class<`SummaryCovRobust`> | <class<`CovSde`>, ...> => class<`SummaryCovRobust`> | <class<`CovSest`>, ...> => class<`SummaryCovRobust`> | <class<`CovMcd`>, ...> => class<`SummaryCovRobust`> | <class<`CovClassic`>, ...> => class<`SummaryCov`> | <class<`CovMMest`>, ...> => class<`SummaryCovRobust`> | <class<`PcaClassic`>, ...> => class<`SummaryPca`> | <class<`CovMrcd`>, ...> => class<`SummaryCovRobust`> | <class<`PcaGrid`>, ...> => class<`SummaryPca`>;
type `T2.test` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`htest`>;
type `T2.test.default` <class<`data.frame`> | class<`matrix`>, null | class<`data.frame`> | class<`matrix`>, double, double, character[], ...> => class<`htest`>;
type `T2.test.formula` <class<`formula`>, any, any, any, ...> => class<`htest`>;
type `.tolellipse` <class<`CovMcd`>, class<`CovClassic`>, double, any, any, character, character, character, any, ...> => null;
type `.tomatrix` <class<`data.frame`> | class<`matrix`>, logical> => class<`matrix`>;
type `unimcd` <double[], double> => list<logical[] | double>;
type `vt` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `.wcovClass` <class<`matrix`>, class<`factor`>, character[]> => class<`wcov`>;
type `.wcovMcd` <class<`matrix`>, class<`factor`> | double[], character, double, logical, class<`CovControlMcd`>> => class<`wcov`>;
type `.wcovMwcd` <class<`matrix`>, class<`factor`>, double, logical> => class<`wcov`>;
type `.wcov.wt` <class<`matrix`>, class<`factor`>, double[]> => class<`wcov`>;
type `.wilks` <class<`matrix`>, class<`factor`>, character, any> => list<integer[] | double | class<`matrix`>>;
type `Wilks.test` <class<`data.frame`> | class<`formula`> | class<`matrix`>, ...> => class<`htest`>;
type `Wilks.test.data.frame` <class<`data.frame`>, ...> => class<`htest`>;
type `Wilks.test.default` <class<`matrix`>, class<`factor`>, character[], character[], double | null, double | null, null, null, double, logical, ...> => class<`htest`>;
type `Wilks.test.formula` <class<`formula`>, any, ..., any, any> => class<`htest`>;
type `Wilks.test.matrix` <class<`matrix`>, class<`factor`>, ..., any, any> => class<`htest`>;
type `wt` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `.xpc` <class<`data.frame`> | class<`matrix`>, list<class<`matrix`> | double[]>, logical, logical> => class<`princomp`>;
type `.xydistplot` <class<`CovSest`>, double, character, character, character, character, any, ...> => class<`trellis`>;
