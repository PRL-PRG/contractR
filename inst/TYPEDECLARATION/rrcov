type `$` <class<`CovMrcd`>, character> => (class<`matrix`> | double[]) | <class<`CovMcd`>, character> => (class<`matrix`> | double[]);
type `arpLim` <class<`PsiBwt`>> => double[] | <class<`PsiBwt`>> => double[];
type `biplot` <class<`PcaClassic`>, ...> => null;
type `.biplot` <class<`matrix`>, class<`matrix`>, any, logical, any, double[], null, null, double, null, null, double> => null;
type `chi.int` <integer, double, double> => double;
type `.chiInt` <integer, double, double> => double;
type `.chiInt2` <integer, double, double> => double;
type `.chiInt2D` <integer, double, double> => double;
type `.chiIntD` <integer, double, double> => double;
type `.classPC` <class<`matrix`>, logical, logical, logical, logical, logical> => list<double[] | class<`matrix`> | double[] | class<`matrix`> | null>;
type `CovClassic` <class<`data.frame`> | class<`matrix`>, logical> => class<`CovClassic`>;
type `CovControlMcd` <double, double, null, double, null, logical, logical> => class<`CovControlMcd`>;
type `CovControlMest` <double, double, double, double> => class<`CovControlMest`>;
type `CovControlMMest` <double, double, double, class<`CovControlSest`>, logical, double> => class<`CovControlMMest`>;
type `CovControlMrcd` <double, null, double, null, character[], double, logical> => class<`CovControlMrcd`>;
type `CovControlMve` <double, double, null, logical> => class<`CovControlMve`>;
type `CovControlOgk` <double, double, null, class<`function`>, character, character> => class<`CovControlOgk`>;
type `CovControlSde` <double, double, double, double, double, null, logical, double> => class<`CovControlSde`>;
type `CovControlSest` <double, double, double, double, double, null, logical, double, character> => class<`CovControlSest`>;
type `CovMcd` <class<`data.frame`> | class<`matrix`>, logical, double, double | character, any, any, null, logical, null, logical, logical, class<`CovControlMcd`>> => class<`CovMcd`>;
type `CovMest` <class<`data.frame`> | class<`matrix`>, double, double, double, double, any, any, any, any> => class<`CovMest`>;
type `CovMMest` <class<`data.frame`> | class<`matrix`>, double, double, logical, double, logical, double, any> => class<`CovMMest`>;
type `CovMrcd` <class<`data.frame`> | class<`matrix`>, double, null, double, null, logical, null, character, any, logical, class<`CovControlMrcd`>> => class<`CovMrcd`>;
type `CovMve` <class<`data.frame`> | class<`matrix`>, double, double, null, logical, any> => class<`CovMve`>;
type `CovOgk` <class<`data.frame`> | class<`matrix`>, double, double, any> => class<`CovOgk`>;
type `CovRobust` <class<`matrix`>, any, class<`function`>> => (class<`CovSde`> | class<`CovSest`>);
type `.covRobustControl` <any, any, any> => (class<`CovControlSde`> | class<`CovControlSest`>);
type `..covSBic` <class<`matrix`>, any, double, double, any, any, double, null, any, logical> => list<double[] | class<`matrix`> | character>;
type `CovSde` <class<`data.frame`> | class<`matrix`>, any, any, double, double, double, null, logical, any> => class<`CovSde`>;
type `CovSest` <class<`data.frame`> | class<`matrix`>, double, double, double, double, double, null, logical, double, any, double, null> => class<`CovSest`>;
type `covw` <class<`matrix`>, double[]> => list<class<`matrix`> | double[]>;
type `.crit.od` <double[], double, logical, any, logical> => double;
type `..CSloc` <class<`matrix`>, double, double, double, double, double, any> => list<double[] | class<`matrix`> | character>;
type `csolve` <class<`PsiBwt`>> => class<`PsiBwt`> | <class<`PsiBwt`>> => class<`PsiBwt`>;
type `.csolve.bw.MM` <integer, double, logical> => double;
type `.csolve.bw.S` <double, integer> => list<double>;
type `.cstep_mrcd` <class<`matrix`>, double, class<`matrix`>, any, null, null, double, double, integer[], double> => list<double[] | class<`matrix`>>;
type `.detmrcd` <class<`matrix`>, null, double, null, double, double, double, double, null, logical, any, integer> => list<double[] | class<`matrix`> | null>;
type `..detSloc` <class<`matrix`>, null, logical, logical, class<`function`>, double, logical, double, double, logical> => list<any>;
type `.distances` <class<`matrix`>, integer, class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>, double> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>);
type `erho` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `erhoLim` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `erhoLimD` <class<`PsiBwt`>> => double | <class<`PsiBwt`>> => double;
type `extradir` <class<`matrix`>, double, logical> => class<`matrix`>;
type `f` <double[]> => double[];
type `.fastmve` <class<`matrix`>, double, double> => list<double[] | class<`matrix`>>;
type `filter` <character[]> => logical[];
type `fncond` <double[]> => double[];
type `fun` <character, character> => null;
type `FUN` <double[]> => double[] | <double[], double> => double;
type `getCenter` <class<`CovClassic`>> => double[] | <class<`CovMcd`> | class<`CovSest`> | class<`CovOgk`> | class<`CovClassic`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`>> => double[] | <class<`CovMcd`>> => double[] | <class<`CovOgk`>> => double[] | <class<`CovSde`>> => double[] | <class<`CovMMest`>> => double[] | <class<`CovMest`>> => double[] | <class<`CovSest`>> => double[];
type `getCov` <class<`CovOgk`>> => class<`matrix`> | <class<`CovSest`>> => class<`matrix`> | <class<`CovMest`>> => class<`matrix`> | <class<`CovMcd`>> => class<`matrix`> | <class<`CovClassic`>> => class<`matrix`> | <class<`CovSde`>> => class<`matrix`> | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>> => class<`matrix`> | <class<`CovMMest`>> => class<`matrix`>;
type `getData` <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`>> => class<`matrix`> | <class<`CovMest`>> => class<`matrix`> | <class<`CovSde`>> => class<`matrix`> | <class<`CovMMest`>> => class<`matrix`> | <class<`CovClassic`>> => class<`matrix`> | <class<`CovMcd`>> => class<`matrix`>;
type `getDet` <class<`CovSest`>> => double | <class<`CovSest`>> => double;
type `getDistance` <class<`CovMcd`>> => double[] | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`>> => double[] | <class<`CovSde`>> => double[] | <class<`CovMMest`>> => double[] | <class<`CovClassic`>> => double[] | <class<`CovMest`>> => double[];
type `getEigenvalues` <class<`PcaCov`>> => double[] | <class<`PcaHubert`>> => double[] | <class<`PcaClassic`>> => double[] | <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>> => double[] | <class<`PcaLocantore`>> => double[];
type `getEvals` <class<`CovClassic`>> => double[] | <class<`CovClassic`>> => double[];
type `getLoadings` <class<`PcaClassic`>> => class<`matrix`> | <class<`PcaClassic`>> => class<`matrix`>;
type `getScores` <class<`PcaClassic`>> => class<`matrix`> | <class<`PcaClassic`>> => class<`matrix`>;
type `getShape` <class<`CovSest`>> => class<`matrix`> | <class<`CovSest`>> => class<`matrix`>;
type `initset` <class<`matrix`>, class<`function`>, class<`matrix`>, double> => integer[];
type `isSingular` <class<`CovSde`>> => logical | <class<`CovClassic`>> => logical | <class<`CovMest`>> => logical | <class<`CovSest`>> => logical | <class<`CovMMest`>> => logical | <class<`CovMcd`>> => logical | <class<`CovClassic`> | class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`> | class<`CovSest`>> => logical;
type `.isSingular` <class<`matrix`>> => logical;
type `.iter.bic` <class<`matrix`>, double[], class<`matrix`>, double, double, logical> => list<double[] | class<`matrix`>>;
type `iterM` <class<`PsiBwt`>, class<`matrix`>, double[], class<`matrix`>, double, double> => list<double[] | class<`matrix`>> | <class<`PsiBwt`>, class<`matrix`>, double[], class<`matrix`>, double, double> => list<double[] | class<`matrix`>>;
type `ksiint` <double, double, integer> => double;
type `.label` <any, any, integer, any> => null;
type `.local` <class<`CovClassic`>, any, character[], logical, any, any, double, ...> => null | <class<`CovMcd`> | class<`CovMest`> | class<`CovMMest`> | class<`CovSde`>, any, character[], logical, logical, any, any, any, double, ...> => null | <class<`PcaClassic`>, integer[], double, ...> => null;
type `loss` <double[], double, double> => double;
type `loss.S` <double[], double, double> => double;
type `.myddplot` <double[], double[], double, any, character, character, character, integer[], ...> => null;
type `.mydistplot` <double[], double, logical, any, null | double[], character, character, character, any, ...> => null;
type `myscreeplot` <any, class<`CovClassic`>> => null;
type `.myscreeplot` <any, class<`CovClassic`>> => null;
type `norm` <double[]> => double;
type `obj` <class<`matrix`>> => double;
type `ogkscatter` <class<`matrix`>, class<`function`>, logical> => class<`matrix`>;
type `PcaClassic` <class<`data.frame`> | class<`matrix`>, ...> => class<`PcaClassic`>;
type `PcaClassic.default` <class<`data.frame`> | class<`matrix`>, double, double, logical, logical, double, logical, ...> => class<`PcaClassic`>;
type `PcaCov` <class<`matrix`>, ...> => class<`PcaCov`>;
type `PcaCov.default` <class<`matrix`>, integer, integer, class<`CovControlMcd`> | class<`CovControlOgk`>, logical, logical, double, logical, ...> => class<`PcaCov`>;
type `pca.distances` <class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>, class<`matrix`>, integer, double> => (class<`PcaClassic`> | class<`PcaCov`> | class<`PcaHubert`> | class<`PcaLocantore`>);
type `PcaHubert` <class<`matrix`>, ...> => class<`PcaHubert`>;
type `PcaHubert.default` <class<`matrix`>, double, double, double, logical, double, logical, logical, double, logical, ...> => class<`PcaHubert`>;
type `PcaLocantore` <class<`matrix`>, ...> => class<`PcaLocantore`>;
type `PcaLocantore.default` <class<`matrix`>, double, integer, double, any, logical, logical, double, logical, ...> => class<`PcaLocantore`>;
type `plot` <class<`CovMest`>, any, ...> => null | <class<`CovMcd`>, any, ...> => null | <class<`CovSde`>, any, ...> => null | <class<`CovMMest`>, any, ...> => null | <class<`CovClassic`>, any, ...> => null;
type `psi` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `.qqplot` <double[], integer, double, logical, any, expression, expression, character, integer[], ...> => null;
type `r6pack` <class<`matrix`>, double, logical, logical, logical, class<`function`>> => class<`matrix`>;
type `randomset` <integer, double, double> => list<double[]>;
type `.RCOV` <class<`matrix`>, double[], double, class<`matrix`>, double, any, logical> => list<double | class<`matrix`>>;
type `re.s` <class<`matrix`>, double[], class<`matrix`>, double, double, double, double, double, double> => list<double[] | class<`matrix`>>;
type `resdis` <class<`matrix`>, double[], class<`matrix`>> => double[];
type `restimate` <class<`CovControlMcd`>, class<`matrix`>, ...> => class<`CovMcd`> | <class<`CovControlSest`>, class<`matrix`>, ...> => class<`CovSest`> | <class<`CovControlSde`>, class<`matrix`>, ...> => class<`CovSde`> | <class<`CovControlOgk`>, class<`matrix`>, ...> => class<`CovOgk`> | <class<`CovControlMcd`> | class<`CovControlOgk`> | class<`CovControlSde`> | class<`CovControlSest`>, class<`matrix`>, ...> => (class<`CovMcd`> | class<`CovOgk`> | class<`CovSde`> | class<`CovSest`>);
type `rho` <double[], double> => double[];
type `rho.bi` <double[], double> => double[];
type `scaledpsi` <double[], double> => double[];
type `scale.full` <double[], double, double> => double;
type `scaleS` <double[], double, double, double> => double;
type `sigma1.bw` <integer, double> => double;
type `.signflip` <class<`matrix`>> => class<`matrix`>;
type `s.iter` <double[], double, double, double> => double;
type `spatial.median` <class<`matrix`>, double> => list<double[]>;
type `stepS` <class<`matrix`>, any, double, double[], integer, integer> => list<double[] | class<`matrix`>>;
type `summary` <class<`CovMest`>, ...> => class<`SummaryCovRobust`> | <class<`CovSde`>, ...> => class<`SummaryCovRobust`> | <class<`CovMcd`>, ...> => class<`SummaryCovRobust`> | <class<`CovClassic`>, ...> => class<`SummaryCov`> | <class<`CovMMest`>, ...> => class<`SummaryCovRobust`> | <class<`CovMrcd`>, ...> => class<`SummaryCovRobust`>;
type `.TargetCorr` <class<`matrix`>, double, any> => class<`matrix`>;
type `Tbsb` <double, integer> => double;
type `Tbsc` <double, integer> => double;
type `unimcd` <double[], double> => list<logical[] | double>;
type `uniran` <double> => list<double>;
type `unsigned.range` <double[]> => double[];
type `vt` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `w.bi` <double[], double> => double[];
type `wt` <class<`PsiBwt`>, double[]> => double[] | <class<`PsiBwt`>, double[]> => double[];
type `.xpc` <class<`matrix`>, list<class<`matrix`> | double[]>, logical, logical> => class<`princomp`>;
