type `cummeta` <symbol, symbol, symbol, symbol, double, symbol, struct<`name`:integer[], `ev.trt`:double[], `n.trt`:double[], `ev.ctrl`:double[], `n.ctrl`:double[]>, null, symbol, character, character> => struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `statistic`:character, `total`:double, `call`:language, `conf.level`:double>;
type `cummeta.summaries` <language, language, double, language, null, null, null, language, character, logical> => struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `method`:character, `total`:double, `logeffect`:logical, `call`:language, `conf.level`:double>;
type `drawNormalCI` <double, double, double, double> => ? struct<`x`:double, `y`:double, `width`:double, `height`:double, `just`:character, `hjust`:null, `vjust`:null, `name`:character, `gp`:struct<`fill`:character, `col`:character>, `vp`:null>;
type `drawSummaryCI` <double, double, double, double> => struct<`x`:double[], `y`:double[], `id`:null, `id.lengths`:null, `name`:character, `gp`:struct<`fill`:character, `col`:character>, `vp`:null>;
type `filter` <character[]> => logical[];
type `finite` <double[]> => double[];
type `fn` <symbol, symbol, character | symbol, ? symbol, double, null, struct<`effects`:double[], `stderrs`:double[], `names`:integer[], `method`:integer[], `logscale`:logical[]>, double | integer[], integer[] | double | any => any, any => any | character> => struct<`effects`:double[], `stderrs`:double[], `summary`:double, `se.summary`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `tau2`:double, `variance.method`:character, `weights`:double[], `weight.method`:character, `conf.level`:double, `logscale`:logical> | struct<`logRR`:double[], `selogRR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character>;
type `forestplot` <^character[], ^double[], ^double[], ^double[], character | ???, logical[], double[], character, double, double, struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null>, logical, null, ? double, ???> => null;
type `FUN` <struct<`logRR`:double[], `selogRR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character> | integer | struct<`effects`:double[], `stderrs`:double[], `summary`:double, `se.summary`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `tau2`:double, `variance.method`:character, `weights`:double[], `weight.method`:character, `conf.level`:double, `logscale`:logical>> => double[] | struct<`logRR`:double[], `selogRR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character> | struct<`effects`:double[], `stderrs`:double[], `summary`:double, `se.summary`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `tau2`:double, `variance.method`:character, `weights`:double[], `weight.method`:character, `conf.level`:double, `logscale`:logical>;
type `funnelplot.default` <double[], double[], double[], ? double, character, character, struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null>, double, logical, null, logical, ???> => null;
type `funnelplot.meta.MH` <struct<`logOR`:double[], `selogOR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character>, logical> => null;
type `meta.DSL` <symbol, symbol, symbol, symbol, double, symbol, struct<`Name`:character[], `n.trt`:double[], `n.ctrl`:double[], `col.trt`:^double[], `col.ctrl`:^double[], `inf.trt`:^double[], `inf.ctrl`:^double[]>, double[], any => any, character> => struct<`logs`:double[], `selogs`:double[], `logDSL`:double, `selogDSL`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `omitted`:logical[], `tau2`:double, `statistic`:character>;
type `meta.MH` <symbol, symbol, symbol, symbol, double, symbol, struct<`Name`:character[], `n.trt`:double[], `n.ctrl`:double[], `col.trt`:^double[], `col.ctrl`:^double[], `inf.trt`:^double[], `inf.ctrl`:^double[]>, ? double[], any => any, character> => struct<`logOR`:double[], `selogOR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character>;
type `meta.summaries` <language, language, character, null, logical, language, null, double, null, any => any> => struct<`effects`:double[], `stderrs`:double[], `summary`:double, `se.summary`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `tau2`:double, `variance.method`:character, `weights`:double[], `weight.method`:character, `conf.level`:double, `logscale`:logical>;
type `metaplot` <double[], double[], ? double[], character[], double, character, character, null, ? double, ? double, ? double, character, logical, double, double, double, struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null> | struct<`box`:character, `lines`:character[], `summary`:character, `zero`:character, `mirror`:character, `text`:character[], `axes`:character, `background`:character>, character, logical> => null;
type `nth` <character[], integer> => character;
type `plot.meta.cum` <struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `method`:character, `total`:double, `logeffect`:logical, `call`:language, `conf.level`:double> | struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `statistic`:character, `total`:double, `call`:language, `conf.level`:double>, null, struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null>, null, logical, logical, character, double, ???> => null;
type `plot.meta.DSL` <struct<`logs`:double[], `selogs`:double[], `logDSL`:double, `selogDSL`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `omitted`:logical[], `tau2`:double, `statistic`:character>, logical, character, null, struct<`box`:character, `lines`:character[], `summary`:character, `zero`:character, `mirror`:character, `text`:character[], `axes`:character, `background`:character> | struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null>, null, ???> => null;
type `plot.meta.MH` <struct<`logOR`:double[], `selogOR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character>, logical, character, null, struct<`box`:character, `lines`:character, `summary`:character, `zero`:character, `mirror`:character, `text`:character, `axes`:character, `background`:null>, null, ???> => null;
type `summary.meta.cum` <struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `statistic`:character, `total`:double, `call`:language, `conf.level`:double> | struct<`summary`:double[], `se`:double[], `names`:character[], `method`:character, `method`:character, `total`:double, `logeffect`:logical, `call`:language, `conf.level`:double>, null, ???> => struct<`stats`:^double[], `call`:language, `conf.level`:double, `statistic`:character> | struct<`stats`:^double[], `call`:language, `conf.level`:double, `statistic`:null>;
type `summary.meta.DSL` <struct<`logs`:double[], `selogs`:double[], `logDSL`:double, `selogDSL`:double, `test`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `omitted`:logical[], `tau2`:double, `statistic`:character>, null, ???> => struct<`ors`:^double[], `call`:language, `ci`:double[], `het`:double[], `omitted`:character, `conf.level`:double, `tau2`:double, `statistic`:character>;
type `summary.meta.MH` <struct<`logOR`:double[], `selogOR`:double[], `logMH`:double, `selogMH`:double, `MHtest`:double[], `het`:double[], `call`:language, `names`:character[], `conf.level`:double, `statistic`:character>, null, ???> => struct<`stats`:^double[], `call`:language, `MHci`:double[], `het`:double[], `conf.level`:double, `statistic`:character>;
