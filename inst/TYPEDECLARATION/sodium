type `::` <raw[] | double> => raw[];
type `filter` <character[]> => logical[];
type `random` <double> => raw[];
type `auth_decrypt` <raw[], raw[], raw[], raw[]> => raw[];
type `auth_encrypt` <raw[], raw[], raw[], raw[]> => raw[];
type `bin2hex` <raw[]> => character;
type `chacha20` <double, raw[], raw[]> => raw[];
type `data_decrypt` <raw[], raw[], raw[]> => raw[];
type `data_encrypt` <raw[], raw[], raw[]> => raw[];
type `data_tag` <raw[], raw[]> => raw[];
type `diffie_hellman` <raw[], raw[]> => raw[];
type `hash` <raw[], ? raw[], double> => raw[];
type `hex2bin` <character, character> => raw[];
type `keygen` <raw[]> => raw[];
type `password_store` <character> => character;
type `password_verify` <character, character> => logical;
type `pubkey` <raw[]> => raw[];
type `salsa20` <double, raw[], raw[]> => raw[];
type `scrypt` <raw[], raw[], double> => raw[];
type `sha256` <raw[], ? raw[]> => raw[];
type `sha512` <raw[], ? raw[]> => raw[];
type `shorthash` <raw[], raw[]> => raw[];
type `sig_keygen` <raw[]> => raw[];
type `sig_pubkey` <raw[]> => raw[];
type `sig_sign` <raw[], raw[]> => raw[];
type `sig_verify` <raw[], raw[], raw[]> => logical;
type `simple_decrypt` <raw[], raw[]> => raw[];
type `simple_encrypt` <raw[], raw[]> => raw[];
type `xsalsa20` <double, raw[], raw[]> => raw[];
