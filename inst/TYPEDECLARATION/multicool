type `allPerm` <class<`mc`>> => class<`matrix`>;
type `B` <integer[]> => double[];
type `Bell` <integer[] | double> => double[];
type `genComp` <double, double, logical> => list<double[]>;
type `generateCompositions` <double> => list<integer[]>;
type `initMC` <character[] | double[]> => class<`mc`>;
type `multinom` <character[] | integer[], logical, logical> => double;
type `nextPerm` <class<`mc`>> => (character[] | double[]);
type `S2` <double | integer[], integer[]> => double[];
type `Stirling2` <double | integer[], integer[] | double> => double[];
type `Stirling2C` <double, double> => double;
