type `::` <character, null, null> => any;
type `append.poly` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`> | <class<`gpc.poly`>, class<`gpc.poly`>> => class<`gpc.poly`> | <class<`gpc.poly`> | class<`gpc.poly.nohole`>, class<`gpc.poly`> | class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
type `area.poly` <class<`gpc.poly`>, ...> => double | <class<`gpc.poly`>, ...> => double;
type `bbox2SP` <any, any, any, any, null | class<`matrix`>, class<`CRS`>> => class<`SpatialPolygons`>;
type `.bboxSRs` <list<class<`Ring`>>> => class<`matrix`>;
type `checkP4S` <null> => class<`CRS`>;
type `createPolygonsComment` <class<`Polygons`>> => character;
type `createSPComment` <class<`SpatialPolygons`>, null, logical> => class<`SpatialPolygons`>;
type `gArea` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`> | class<`SpatialRings`>, logical> => double[];
type `gBinarySTRtreeQuery` <class<`SpatialPolygonsDataFrame`> | class<`SpatialLinesDataFrame`>, class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`>> => list<integer[] | null | integer[]>;
type `gBoundary` <class<`SpatialPolygons`> | class<`SpatialLines`>, logical, null> => (class<`SpatialLines`> | class<`SpatialPoints`>);
type `gBuffer` <class<`SpatialLines`> | class<`SpatialPolygons`> | class<`SpatialPolygonsDataFrame`>, logical, null | character[], double[], double, character, character, double> => (class<`SpatialPolygons`> | class<`SpatialPolygonsDataFrame`>);
type `gCentroid` <class<`SpatialPolygons`>, logical, null> => class<`SpatialPoints`>;
type `gContains` <class<`SpatialPolygons`> | class<`SpatialLines`>, class<`SpatialPolygons`> | class<`SpatialPoints`> | class<`SpatialLines`>, logical, logical, logical, logical, logical> => (class<`matrix`> | logical);
type `gContainsProperly` <class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gConvexHull` <class<`SpatialPolygons`>, logical, null> => class<`SpatialPolygons`>;
type `gCoveredBy` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gCovers` <class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gCrosses` <class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gDelaunayTriangulation` <class<`SpatialPointsDataFrame`>, double, logical> => (class<`SpatialLines`> | class<`SpatialPolygons`>);
type `gDifference` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, null, logical, logical, null> => any;
type `gDisjoint` <class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gDistance` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, class<`SpatialPolygons`> | class<`SpatialPoints`> | class<`SpatialLines`> | null, logical, logical, null> => (class<`matrix`> | double);
type `gEnvelope` <class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`>, logical, null> => (class<`SpatialPoints`> | class<`SpatialPolygons`>);
type `gEquals` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gEqualsExact` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, double, logical, logical, logical> => logical;
type `get.bbox` <class<`gpc.poly`>> => list<double[]> | <class<`gpc.poly`>> => list<double[]>;
type `get_do_poly_check` < > => logical;
type `get_RGEOS_CheckValidity` < > => integer;
type `get_RGEOS_DENSE` < > => logical;
type `get_RGEOS_dropSlivers` < > => logical;
type `get_RGEOS_polyThreshold` < > => double;
type `get_RGEOS_STR` < > => logical;
type `get_RGEOS_warnSlivers` < > => logical;
type `getScale` < > => double;
type `gInterpolate` <class<`SpatialLines`> | class<`SpatialLinesDataFrame`>, double[], logical> => any;
type `gIntersection` <class<`SpatialLines`> | class<`SpatialPolygons`> | class<`SpatialLinesDataFrame`>, class<`SpatialLines`> | class<`SpatialPolygons`>, logical, null, any, logical, logical, null | integer> => any;
type `gIntersects` <class<`SpatialPoints`> | class<`SpatialPolygons`> | class<`SpatialLines`>, class<`SpatialPolygons`> | class<`SpatialPoints`> | class<`SpatialLines`>, logical[], logical, logical, logical> => (class<`matrix`> | logical);
type `gIsEmpty` <any, logical> => any;
type `gIsRing` <class<`SpatialLines`> | class<`SpatialPolygons`> | class<`SpatialRings`>, logical> => logical;
type `gIsSimple` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical> => logical;
type `gIsValid` <class<`SpatialPolygons`> | class<`SpatialRings`>, logical, logical> => (character | logical[]);
type `gLength` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical> => double;
type `gLineMerge` <class<`SpatialLines`>, logical, null> => class<`SpatialLines`>;
type `gNearestPoints` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPointsDataFrame`>, class<`SpatialPoints`> | class<`SpatialLines`> | class<`SpatialPolygons`> | class<`SpatialLinesDataFrame`>> => (class<`SpatialPoints`> | null);
type `gNode` <class<`SpatialLines`>> => class<`SpatialLines`>;
type `gOverlaps` <class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `gPointOnSurface` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical, null> => any;
type `gPolygonize` <class<`SpatialLines`> | list<class<`SpatialLines`>>, logical> => (class<`SpatialLines`> | class<`SpatialPolygons`> | null);
type `gProject` <class<`SpatialLines`> | class<`SpatialLinesDataFrame`>, class<`SpatialPoints`> | class<`SpatialPointsDataFrame`>, logical> => any;
type `gRelate` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, null, logical, logical> => character;
type `gSimplify` <class<`SpatialLines`> | class<`SpatialPolygons`>, double, logical> => (class<`SpatialLines`> | class<`SpatialPolygons`>);
type `gSymdifference` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, null, logical, logical, null> => any;
type `gTopoDim` <class<`SpatialLines`> | class<`SpatialLinesDataFrame`> | class<`SpatialPolygons`>> => integer;
type `gTouches` <class<`SpatialPointsDataFrame`> | class<`SpatialLines`> | class<`SpatialPolygons`>, class<`SpatialLines`> | class<`SpatialPolygons`>, logical, logical, logical> => (class<`matrix`> | logical);
type `gUnarySTRtreeQuery` <class<`SpatialPolygonsDataFrame`> | class<`Polygons`> | class<`SpatialLinesDataFrame`>> => list<integer[] | null | null | integer[]>;
type `gUnaryUnion` <class<`SpatialPolygons`> | class<`SpatialPolygonsDataFrame`>, character[] | class<`factor`>, integer | null> => class<`SpatialPolygons`>;
type `gUnion` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, null, logical, logical, null> => any;
type `gWithin` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, logical, logical> => logical;
type `init_RGEOS` < > => externalptr;
type `intersect` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`> | <class<`gpc.poly`>, class<`gpc.poly`>> => class<`gpc.poly`>;
type `labpos.maxdist` <class<`SpatialPolygons`>, double, double, double> => double[];
type `listifyMatrix` <integer> => list<integer>;
type `notAllComments` <class<`SpatialPolygons`>> => logical;
type `overGeomGeom` <class<`SpatialPolygons`>, class<`SpatialPolygons`>, logical, null, ..., double> => integer;
type `plot` <class<`gpc.poly`>, any, ...> => list<null> | <class<`SpatialRings`>, any, ...> => null;
type `plotSpatialRings` <class<`SpatialRings`>, null, null, double, double, double, logical, logical, ..., logical> => null;
type `poly_findInBoxGEOS` <class<`SpatialPolygonsDataFrame`>, logical> => list<integer[] | null>;
type `polygonsLabel` <class<`SpatialPolygons`>, character[], character, double, character, double, logical, ...> => class<`matrix`>;
type `read.polyfile` <character, logical> => (class<`gpc.poly`> | class<`gpc.poly.nohole`>);
type `readWKT` <character, null, null> => any;
type `RGEOSBinPredFunc` <class<`SpatialPolygons`> | class<`SpatialPoints`> | class<`SpatialPointsDataFrame`> | class<`SpatialLines`>, class<`SpatialPolygons`> | class<`SpatialLines`> | class<`SpatialPoints`>, logical[], character, null | double> => (character | class<`matrix`> | logical);
type `RGEOSBinTopoFunc` <class<`SpatialLines`> | class<`SpatialPolygons`> | class<`SpatialLinesDataFrame`>, class<`SpatialLines`> | class<`SpatialPolygons`>, logical, null, logical, logical, character> => any;
type `RGEOSDistanceFunc` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, class<`SpatialPolygons`> | class<`SpatialPoints`> | class<`SpatialLines`> | null, logical, character, double> => (class<`matrix`> | double);
type `RGEOSMiscFunc` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`> | class<`SpatialRings`>, logical, character> => double[];
type `RGEOSUnaryPredFunc` <any, logical, character> => any;
type `Ring` <class<`matrix`>, character> => class<`Ring`>;
type `row.names` <class<`SpatialRings`>> => character[];
type `setdiff` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
type `set_RGEOS_DENSE` <logical> => logical;
type `set_RGEOS_dropSlivers` <logical> => logical;
type `set_RGEOS_HANDLE` <externalptr> => externalptr;
type `set_RGEOS_polyThreshold` <double> => double;
type `set_RGEOS_STR` <logical> => logical;
type `set_RGEOS_warnSlivers` <logical> => logical;
type `setScale` <double> => double;
type `SpatialRings` <list<class<`Ring`>>, class<`CRS`>> => class<`SpatialRings`>;
type `TopologyFunc` <class<`SpatialPolygons`> | class<`SpatialLines`> | class<`SpatialPoints`>, null, logical, character> => any;
type `translate` <class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`> | class<`SpatialRings`>> => (class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`> | class<`SpatialRings`>);
type `union` <class<`gpc.poly.nohole`>, class<`gpc.poly.nohole`>> => class<`gpc.poly`>;
type `version_GEOS` <logical> => character;
type `version_GEOS0` < > => character;
type `version_sp_linkingTo` < > => character;
type `writeWKT` <class<`SpatialCollections`> | class<`SpatialLines`> | class<`SpatialPoints`> | class<`SpatialPolygons`>, logical> => character[];
