type `filter` <character[]> => logical[];
type `plot.rmst2` <struct<`tau`:double, `note`:character, `RMST.arm1`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `RMST.arm0`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `unadjusted.result`:^double[]>, character, character, character, character, character, double, double, ???> => null;
type `print.rmst2` <struct<`tau`:double, `note`:character, `adjusted.result`:^double[], `RMST.difference.adjusted`:^double[], `RMST.ratio.adjusted`:^double[], `RMTL.ratio.adjusted`:^double[]> | struct<`tau`:double, `note`:character, `RMST.arm1`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `RMST.arm0`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `unadjusted.result`:^double[]>, double, ???> => struct<`tau`:double, `note`:character, `adjusted.result`:^double[], `RMST.difference.adjusted`:^double[], `RMST.ratio.adjusted`:^double[], `RMTL.ratio.adjusted`:^double[]> | struct<`tau`:double, `note`:character, `RMST.arm1`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `RMST.arm0`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `unadjusted.result`:^double[]>;
type `rmst2` <double[], double[], double[], double, ? struct<`age`:double[], `bili`:double[], `albumin`:double[]>, double> => struct<`tau`:double, `note`:character, `adjusted.result`:^double[], `RMST.difference.adjusted`:^double[], `RMST.ratio.adjusted`:^double[], `RMTL.ratio.adjusted`:^double[]> | struct<`tau`:double, `note`:character, `RMST.arm1`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `RMST.arm0`:struct<`result`:^double[], `rmst`:double[], `rmtl`:double[], `tau`:double, `rmst.var`:double, `fit`:struct<`n`:integer, `time`:double[], `n.risk`:double[], `n.event`:double[], `n.censor`:double[], `surv`:double[], `std.err`:double[], `cumhaz`:double[], `std.chaz`:double[], `start.time`:double, `type`:character, `logse`:logical, `conf.int`:double, `conf.type`:character, `lower`:double[], `upper`:double[], `call`:language>>, `unadjusted.result`:^double[]>;
type `rmst2.sample.data` < > => struct<`time`:double[], `status`:double[], `arm`:double[], `age`:double[], `edema`:double[], `bili`:double[], `albumin`:double[], `protime`:double[]>;
