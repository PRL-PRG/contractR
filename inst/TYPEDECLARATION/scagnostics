type `filter` <character[]> => logical[];
type `fun` <any, any> => logical;
type `FUN` <integer> => class<`jarrayRef`> | <double[]> => class<`jarrayRef`> | <integer> => class<`jarrayRef`>;
type `scagnostics` <class<`data.frame`> | class<`matrix`> | double[], ...> => class<`scagnostics`>;
type `scagnostics.data.frame` <class<`data.frame`>, double, double, ...> => class<`scagnostics`>;
type `scagnostics.default` <double[], double[], double, double, ...> => class<`scagnostics`>;
type `scagnosticsExemplars` <class<`scagnostics`>> => logical[];
type `.scagnostics.for.data` <class<`jarrayRef`>, double, double, character[] | null> => class<`scagnostics`>;
type `scagnosticsGrid` <class<`scagnostics`>> => class<`data.frame`>;
type `scagnostics.matrix` <class<`matrix`>, double, double, ...> => class<`scagnostics`>;
type `scagnosticsOutliers` <class<`scagnostics`>> => logical[];
