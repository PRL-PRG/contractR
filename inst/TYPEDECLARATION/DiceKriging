type `branin` <class<`data.frame`>> => class<`data.frame`>;
type `checkNames` <class<`matrix`>, class<`data.frame`> | class<`matrix`>, character, character> => class<`matrix`>;
type `checkNamesList` <class<`matrix`>, list<double[]>, character, character> => list<double[]>;
type `computeAuxVariables` <class<`km`>> => class<`km`>;
type `compute.beta.hat` <class<`matrix`>, class<`matrix`>> => double[];
type `compute.sigma2.hat` <double[]> => double;
type `compute.z` <class<`matrix`>, class<`matrix`>, double[] | null> => double[];
type `covMat1Mat2` <class<`covIso`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`> | <class<`covIso`> | class<`covScaling`> | class<`covTensorProduct`> | class<`covUser`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`> | <class<`covTensorProduct`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`> | <class<`covScaling`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`> | <class<`covUser`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`>;
type `covMat1Mat2.covTensorProduct` <class<`covTensorProduct`>, class<`matrix`>, class<`matrix`>, logical> => class<`matrix`>;
type `covMat1Mat2.covUser` <class<`covUser`>, class<`matrix`>, class<`matrix`>> => class<`matrix`>;
type `covMatrix` <class<`covIso`> | class<`covScaling`> | class<`covTensorProduct`> | class<`covUser`>, class<`matrix`>, any> => list<class<`matrix`> | double[]> | <class<`covTensorProduct`>, class<`matrix`>, any> => list<class<`matrix`> | double[]> | <class<`covIso`>, class<`matrix`>, null> => list<class<`matrix`> | double[]> | <class<`covScaling`>, class<`matrix`>, null> => list<class<`matrix`> | double[]> | <class<`covUser`>, class<`matrix`>, double[] | null> => list<class<`matrix`> | double[]>;
type `covMatrix.covTensorProduct` <class<`covTensorProduct`>, class<`matrix`>, any> => list<class<`matrix`> | double[]>;
type `covMatrixcovUser` <class<`covUser`>, class<`matrix`>, double[] | null> => list<class<`matrix`> | double[]>;
type `covMatrixDerivative` <class<`covTensorProduct`>, class<`matrix`>, class<`matrix`>, integer, ...> => class<`matrix`> | <class<`covScaling`> | class<`covTensorProduct`>, class<`matrix`>, any, integer, ...> => class<`matrix`> | <class<`covScaling`>, class<`matrix`>, any, integer, ...> => class<`matrix`>;
type `covMatrixDerivative.covTensorProduct` <class<`covTensorProduct`>, class<`matrix`>, class<`matrix`>, integer> => class<`matrix`>;
type `covMatrixDerivative.dx.covTensorProduct` <class<`covTensorProduct`>, class<`matrix`>, class<`matrix`>, integer> => class<`matrix`>;
type `covparam2vect` <class<`covTensorProduct`>> => double[] | <class<`covTensorProduct`>> => double[];
type `covParametersBounds` <class<`covScaling`> | class<`covTensorProduct`>, class<`data.frame`>> => list<double[]> | <class<`covScaling`>, class<`data.frame`>> => list<double[]> | <class<`covTensorProduct`>, class<`data.frame`>> => list<double[]>;
type `covStruct.create` <character, any, any, any, any, any, null | double, any, any, any, any, any, any> => (class<`covScaling`> | class<`covTensorProduct`> | class<`covUser`>);
type `drop.response` <class<`formula`>, class<`data.frame`>> => class<`formula`>;
type `extract.covIso` <class<`covScaling`>> => class<`covIso`>;
type `km` <class<`formula`>, class<`data.frame`> | class<`matrix`>, class<`data.frame`> | double[] | class<`matrix`>, character, double[] | null, null | double[], double | null, null | double, logical, null | double[], character, null | list<any>, character, null | double[], null | double[], null> => class<`km`>;
type `kmData` <class<`formula`>, class<`data.frame`>, character[] | null, ...> => class<`km`>;
type `kmNoNugget.init` <class<`km`>, class<`function`>, double> => (list<class<`matrix`> | double[] | list<class<`covScaling`>>> | list<class<`matrix`> | double[] | list<class<`covTensorProduct`>>> | list<class<`matrix`> | double | list<class<`covTensorProduct`>>>);
type `kmNuggets.init` <class<`km`>> => list<class<`matrix`> | double[] | list<class<`covTensorProduct`>>>;
type `leaveOneOut.km` <class<`km`>, character, logical> => list<double[]>;
type `paramSample` <class<`covScaling`> | class<`covTensorProduct`>, double, ...> => class<`matrix`> | <class<`covTensorProduct`>, double, ...> => class<`matrix`> | <class<`covScaling`>, double, ...> => class<`matrix`>;
type `plot` <class<`km`>, any, ...> => list<double[]>;
type `plot.km` <class<`km`>, character, logical, ...> => list<double[]>;
type `predict` <class<`km`>, ...> => list<class<`matrix`> | double[]>;
type `predict.km` <class<`km`>, class<`data.frame`>, character, logical, logical, logical, any, logical, ...> => list<class<`matrix`> | double[]>;
type `SCAD` <double[], double> => double[];
type `scalingFun` <class<`matrix`>, list<double[]>, list<double[]> | class<`data.frame`>, logical> => class<`matrix`>;
type `scalingFun1d` <class<`matrix`> | double[], double[], double[]> => double[];
type `scalingFun1d.inside` <double[], double[], double[]> => double[];
type `scalingGrad` <class<`matrix`>, list<double[]>, integer> => class<`matrix`>;
type `scalingGrad1d` <double[], double[], logical> => class<`matrix`>;
type `simulate` <class<`km`>, double, null, ...> => class<`matrix`>;
type `simulate.km` <class<`km`>, double, null, class<`data.frame`> | null, logical, double, any, ...> => class<`matrix`>;
type `trend.deltax` <double[], class<`km`>, any> => class<`matrix`>;
type `update` <class<`km`>, ...> => class<`km`>;
type `update.km` <class<`km`>, class<`matrix`>, double, logical, logical, logical, logical, null, null, any> => class<`km`>;
type `vect2covparam` <class<`covScaling`>, double[]> => class<`covScaling`> | <class<`covTensorProduct`>, double[]> => class<`covTensorProduct`> | <class<`covScaling`> | class<`covTensorProduct`>, double[]> => (class<`covScaling`> | class<`covTensorProduct`>);
