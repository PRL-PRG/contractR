type `.subset2` <character, struct<`appname`:character, `secret`:character, `key`:character, `redirect_uri`:character>, character, logical, null> => environment;
type `cache_available` <character> => logical;
type `cat_line` <character, logical> => null;
type `cred_funs_add` <any => any> => null;
type `cred_funs_clear` < > => null;
type `cred_funs_list` < > => struct<`credentials_service_account`:any => any, `credentials_app_default`:any => any, `credentials_gce`:any => any, `credentials_byo_oauth2`:any => any, `credentials_user_oauth2`:any => any>;
type `cred_funs_set_default` < > => null;
type `filter` <character[]> => logical[];
type `fun` <symbol, symbol> => null;
type `FUN` <any => any> => logical;
type `gargle_api_key` < > => character;
type `gargle_default_oauth_cache_path` < > => character;
type `gargle_oauth_cache` < > => null | logical;
type `gargle_oauth_email` < > => null;
type `gargle_oob_default` < > => logical;
type `gargle_quiet` < > => logical;
type `init_AuthState` <character, struct<`appname`:character, `secret`:character, `key`:character, `redirect_uri`:character>, character, logical, null> => environment;
type `is_string` <character> => logical;
type `is.oauth_app` <struct<`appname`:character, `secret`:character, `key`:character, `redirect_uri`:character>> => logical;
type `isFALSE` <logical> => logical;
type `map_lgl` <struct<`one`:any => any, ``:any => any> | struct<`one`:any => any, `two`:any => any> | tuple<any => any> | struct<`credentials_app_default`:any => any> | struct<`credentials_byo_oauth2`:any => any> | struct<`credentials_gce`:any => any> | struct<`credentials_service_account`:any => any> | struct<`credentials_user_oauth2`:any => any> | struct<`one`:any => any>, any => any, null> => logical[];
type `map_mold` <struct<`one`:any => any, ``:any => any> | struct<`one`:any => any, `two`:any => any> | tuple<any => any> | struct<`credentials_app_default`:any => any> | struct<`credentials_byo_oauth2`:any => any> | struct<`credentials_gce`:any => any> | struct<`credentials_service_account`:any => any> | struct<`credentials_user_oauth2`:any => any> | struct<`one`:any => any>, any => any, logical, null> => logical[];
