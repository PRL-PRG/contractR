type `cache_allowed` <any> => logical;
type `cache_available` <class<`character`, `fs_path`>> => logical;
type `cache_establish` <null> => null;
type `cat_line` <..., logical> => null;
type `check_params` <list<character>, list<list<character | character | logical>> | list<list<character | logical | character[]>>> => list<character>;
type `cred_funs_add` <...> => null;
type `cred_funs_clear` < > => null;
type `cred_funs_list` < > => list<class<`function`>>;
type `cred_funs_set_default` < > => null;
type `extract_path_names` <class<`character`, `fs_path`>> => character;
type `gargle_api_key` < > => character;
type `gargle_default_oauth_cache_path` < > => class<`character`, `fs_path`>;
type `gargle_oauth_cache` < > => null;
type `gargle_oauth_email` < > => null;
type `gargle_oauth_sitrep` <null> => null;
type `gargle_oob_default` < > => logical;
type `gargle_quiet` < > => logical;
type `init_AuthState` <character, class<`oauth_app`>, character, logical, null> => class<`AuthState`, `R6`>;
type `isFALSE` <logical> => logical;
type `is.oauth_app` <class<`oauth_app`>> => logical;
type `is_string` <character> => logical;
type `map_lgl` <list<class<`function`>>, class<`function`>, ...> => logical[];
type `map_mold` <list<class<`function`>>, class<`function`>, logical, ...> => logical[];
type `partition_params` <list<character>, character[]> => list<list<any>>;
