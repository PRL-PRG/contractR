type `.add_prefix_and_remove_stars` <character[], logical | symbol, logical, null | character, character> => character[];
type `.capitalize` <character[]> => character[];
type `.check_component` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, character> => character;
type `.check_standardize_numeric` <double[], null | character | language, logical | symbol> => double[];
type `.ci_profiled` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, double> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[]>;
type `.ci_wald` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, double, null | double, symbol | character> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[]>;
type `.clean_confint` <struct<`(Intercept)`:double[], `gear`:double[], `wt`:double[], `cyl`:double[], `hp`:double[]>> => struct<`(Intercept)`:double[], `gear`:double[], `wt`:double[], `cyl`:double[], `hp`:double[]>;
type `.cohens_f` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>> => struct<`Parameter`:character[], `Cohens_f`:^double[]>;
type `.compact_list` <struct<`count`:^double[], `zero`:^double[]>> => struct<`count`:^double[], `zero`:^double[]>;
type `.data_frame` <character[]> => struct<`Component`:character[], `Eigenvalues`:double[], `Variance`:double[], `Variance_Cumulative`:double[]>;
type `.data_partition` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `Smell`:character[]>, double> => struct<`training`:integer[], `test`:integer[]>;
type `.efa_to_cfa` <struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>, null, null> => character;
type `.epsilon_squared` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>> => struct<`Parameter`:character[], `Epsilon_sq`:^double[]>;
type `.equivalence_test_frequentist` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `gear`:double[], `wt`:double[], `cyl`:double[], `hp`:double[]>>, character, double, symbol, null> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[], `ROPE_Percentage`:double[], `ROPE_Equivalence`:character[]>;
type `.eta_squared` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>, logical, null, symbol> => struct<`Parameter`:character[], `Eta_Sq_partial`:^double[]>;
type `.extract_cohens_f` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>, struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>> => struct<`Parameter`:character[], `Cohens_f`:^double[]>;
type `.extract_epsilon_squared` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>, struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>> => struct<`Parameter`:character[], `Epsilon_sq`:^double[]>;
type `.extract_eta_squared` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>, struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>, logical> => struct<`Parameter`:character[], `Eta_Sq_partial`:^double[]>;
type `.extract_omega_squared` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>, struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>, logical> => struct<`Parameter`:character[], `Omega_Sq_partial`:^double[]>;
type `.extract_parameters_anova` <struct<`(Intercept)`:struct<`coefficients`:^double[], `residuals`:double, `effects`:double, `rank`:integer, `fitted.values`:double, `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>, `Species`:struct<`coefficients`:double, `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer, `qr`:struct<`qr`:^double[], `qraux`:double, `pivot`:integer, `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>, `Within`:struct<`coefficients`:double, `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer, `qr`:struct<`qr`:^double[], `qraux`:double, `pivot`:integer, `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>> | struct<>> => struct<`Group`:character[], `Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>;
type `.extract_parameters_generic` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, double, character, character[], null> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `z`:double[], `p`:double[], `Component`:character[]>;
type `.extract_parameters_glm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, double, logical> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `t`:double[], `df_residual`:integer[], `p`:double[]>;
type `.extract_parameters_htest` <struct<`statistic`:double, `parameter`:double, `p.value`:double, `conf.int`:double[], `estimate`:double[], `null.value`:double, `alternative`:character, `method`:character, `data.name`:character>> => struct<`Parameter`:integer, `Group`:integer, `Mean_Group1`:double, `Mean_Group2`:double, `Difference`:double, `t`:double, `df`:double, `p`:double, `CI_low`:double, `CI_high`:double, `Method`:integer>;
type `.extract_parameters_lavaan` <double, logical, null> => struct<`To`:integer[], `Operator`:integer[], `From`:integer[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `p`:double[], `Type`:character[]>;
type `.filter_component` <struct<`Parameter`:character[], `p`:double[], `Component`:character[]>, character> => struct<`Parameter`:character[], `p`:double[], `Component`:character[]>;
type `.filter_loadings` <struct<`Variable`:integer[], `PC1`:double[], `PC2`:double[], `PC3`:double[], `PC4`:double[], `PC5`:double[], `PC6`:double[], `Complexity`:double[]>, double | character, null | integer[]> => struct<`Variable`:integer[], `PC1`:double[], `PC2`:^double[], `PC3`:^double[], `PC4`:^double[], `PC5`:^double[], `PC6`:^double[], `Complexity`:double[]>;
type `.format_ci` <^double[], ^double[], double, logical, null | integer> => character[];
type `.format_factor` <character, character> => character;
type `.format_number` <double> => character;
type `.format_poly` <language, character, language, character> => character;
type `.get_deviation` <struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, character, logical> => double;
type `.get_n_factors` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[]>, character | double, character, symbol | character, null> => double;
type `.get_se_from_summary` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Petal.Length`:double[], `Sepal.Length`:double[], `Species`:integer[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, null> => double[];
type `.get_statistic.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, character, null> => struct<`Parameter`:character[], `Statistic`:double[], `Component`:character[]>;
type `.list_factors_numerics` <struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>> => struct<`numeric`:character[], `factor`:character[], `levels`:character[], `levels_parent`:character[]> | struct<`numeric`:character[], `factor`:character[], `levels`:logical[], `levels_parent`:logical[]>;
type `.log_terms` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>> => character[];
type `.long_loadings` <struct<`Variable`:integer[], `PC1`:double[], `PC2`:double[], `PC3`:double[], `PC4`:double[], `PC5`:double[], `PC6`:double[], `Complexity`:double[]>, null | double, null> => struct<`Component`:character[], `Variable`:integer[], `Loading`:double[], `Complexity`:double[]>;
type `.n_factors_bartlett` <double[], character, integer> => struct<`n_Factors`:double[], `Method`:integer[], `Family`:integer[]>;
type `.n_factors_bentler` <double[], character, integer> => struct<`n_Factors`:double, `Method`:integer, `Family`:integer>;
type `.n_factors_cng` <double[], character> => struct<`n_Factors`:double, `Method`:integer, `Family`:integer>;
type `.n_factors_mreg` <double[], character> => struct<`n_Factors`:double[], `Method`:integer[], `Family`:integer[]>;
type `.n_factors_scree` <double[], character> => struct<`n_Factors`:double[], `Method`:integer[], `Family`:integer[]>;
type `.n_factors_sescree` <double[], character> => struct<`n_Factors`:double[], `Method`:integer[], `Family`:integer[]>;
type `.nBentler` <double[], integer, character, logical, double, logical, logical, null> => struct<`detail`:null, `nFactors`:double>;
type `.no_response_standardize` <struct<`is_binomial`:logical, `is_count`:logical, `is_poisson`:logical, `is_negbin`:logical, `is_beta`:logical, `is_betabinomial`:logical, `is_exponential`:logical, `is_logit`:logical, `is_probit`:logical, `is_censored`:logical, `is_truncated`:logical, `is_survival`:logical, `is_linear`:logical, `is_tweedie`:logical, `is_zeroinf`:logical, `is_zero_inflated`:logical, `is_hurdle`:logical, `is_ordinal`:logical, `is_categorical`:logical, `is_mixed`:logical, `is_multivariate`:logical, `is_trial`:logical, `is_bayesian`:logical, `is_anova`:logical, `is_ttest`:logical, `is_correlation`:logical, `is_meta`:logical, `link_function`:character, `family`:character, `n_obs`:integer, `model_terms`:struct<`response`:character, `conditional`:character[]>>> => logical;
type `.omega_squared` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>, logical, null, symbol> => struct<`Parameter`:character[], `Omega_Sq_partial`:^double[]>;
type `.parameters_standardize_posthoc` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>>, null, null, logical, character, symbol, null> => struct<`Parameter`:integer[], `Coefficient`:double[]>;
type `.parameters_standardize_refit` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, logical, character, symbol, logical, null> => struct<`Parameter`:character[], `Coefficient`:double[]>;
type `.parameters_type_table` <^character[], symbol, struct<`numeric`:character[], `factor`:character[], `levels`:character[], `levels_parent`:character[]> | struct<`numeric`:character[], `factor`:character[], `levels`:logical[], `levels_parent`:logical[]> | symbol> => struct<`Type`:character[], `Term`:character[], `Variable`:^character[], `Level`:^character[], `Secondary_Parameter`:^character[]>;
type `.prepare_values_aov` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>, double> => struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>;
type `.rename_values` <character[], character, character> => character[];
type `.sort_loadings` <struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>, null | integer[]> => struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>;
type `.standardize_names` <struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `t`:double[], `df_residual`:integer[], `p`:double[]>, character, null> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `Statistic`:double[], `df_residual`:integer[], `p`:double[]>;
type `.summary_bootstrap` <struct<`(Intercept)`:double[], `Speciesversicolor`:double[], `Speciesvirginica`:double[], `Petal.Width`:double[], `Speciesversicolor:Petal.Width`:double[], `Speciesvirginica:Petal.Width`:double[]>, character, character, double, character, null> => struct<`Parameter`:character[], `Coefficient`:double[], `CI_low`:double[], `CI_high`:double[], `p`:double[]>;
type `.values_aov` <struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>> => struct<`Mean_Square_residuals`:double, `Sum_Squares_residuals`:double, `Sum_Squares_total`:double, `n_terms`:double, `n`:double>;
type `.variance_predictor_smart` <character, character | language, struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]> | language, symbol, logical | symbol, null> => double;
type `.variance_response` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>>, logical | symbol, null> => double;
type `.wide_loadings` <struct<`Component`:character[], `Variable`:integer[], `Median`:^double[], `CI_low`:^double[], `CI_high`:^double[]>, character, character, character, null> => struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>;
type `check_factorstructure` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, logical, null> => struct<`KMO`:struct<`MSA`:double, `MSA_variable`:double[]>, `sphericity`:struct<`chisq`:double, `p`:double, `dof`:double>>;
type `check_kmo` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, logical, null> => struct<`MSA`:double, `MSA_variable`:double[]>;
type `check_sphericity` <struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, logical, null> => struct<`chisq`:double, `p`:double, `dof`:double>;
type `ci_wald` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, double, null | double, character> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[]>;
type `ci.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, double, character[], null> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[]>;
type `ci.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, double, null> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[]>;
type `ci.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, double, character, null> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[], `Component`:character[]>;
type `cmds` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]>, character, character, null> => struct<`CMDS1`:double[], `CMDS2`:double[], `CMDS3`:double[]>;
type `cohens_f.aov` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>> => struct<`Parameter`:character[], `Cohens_f`:^double[]>;
type `convert_data_to_numeric.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>, logical, null> => struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species.setosa`:double[], `Species.versicolor`:double[], `Species.virginica`:double[]>;
type `convert_data_to_numeric.double` <double[], symbol> => double[];
type `convert_data_to_numeric.factor` <integer[], logical, null> => struct<`setosa`:double[], `versicolor`:double[], `virginica`:double[]>;
type `convert_efa_to_cfa.parameters_efa` <struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>, null, null> => character;
type `d_to_r` <double, null> => double;
type `data_partition` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `Smell`:character[]>, double, null | character[]> => struct<`training`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `Smell`:character[]>, `test`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `Smell`:character[]>>;
type `describe_distribution.numeric` <double[], character, logical, logical, null> => struct<`Mean`:double, `SD`:double, `Min`:double, `Max`:double, `Skewness`:double, `Kurtosis`:double, `n`:integer, `n_Missing`:integer>;
type `DRR` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]>, environment, null> => struct<`DRR1`:double[], `DRR2`:double[], `DRR3`:double[]>;
type `epsilon_squared.anova` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>> => struct<`Parameter`:character[], `Epsilon_sq`:^double[]>;
type `epsilon_squared.aov` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>> => struct<`Parameter`:character[], `Epsilon_sq`:^double[]>;
type `equivalence_test.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `gear`:double[], `wt`:double[], `cyl`:double[], `hp`:double[]>>, character, double, logical, null> => struct<`Parameter`:character[], `CI`:double[], `CI_low`:double[], `CI_high`:double[], `ROPE_Percentage`:double[], `ROPE_Equivalence`:character[]>;
type `eta_squared.anova` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>, logical, null, double, null> => struct<`Parameter`:character[], `Eta_Sq_partial`:^double[]>;
type `eta_squared.aov` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>, logical, null, double, null> => struct<`Parameter`:character[], `Eta_Sq_partial`:^double[]>;
type `filter` <character[]> => logical[];
type `format_bf` <double[], logical, logical, null | character> => character[];
type `format_ci` <^double[], ^double[], null | double, double, logical, null | integer> => character[];
type `format_number` <double, logical, null> => character;
type `format_order` <double, logical, null> => character;
type `format_p` <double[], logical, logical, null | character, character> => character[];
type `format_parameters.default` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `poly(Sepal.Width# 2)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `poly(Sepal.Width# 2# raw = TRUE)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Length`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>> => character[];
type `format_pd` <double[], logical, logical, null | character> => character[];
type `format_rope` <double[], null | character> => character[];
type `format_standardize` <double[], double[], logical, null, null> => integer[];
type `FUN` <null | character | ^double[], symbol | double[], struct<`numeric`:character[], `factor`:character[], `levels`:character[], `levels_parent`:character[]> | struct<`numeric`:character[], `factor`:character[], `levels`:logical[], `levels_parent`:logical[]> | symbol> => null | double | struct<> | ^character[] | ^logical[];
type `helper` <double> => character;
type `ICA` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]>, character, null> => struct<`ICA1`:double[], `ICA2`:double[], `ICA3`:double[]>;
type `kurtosis.numeric` <double[], logical, null> => double;
type `makeNumber` <character[]> => double;
type `model_bootstrap.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, double, logical, null> => struct<`(Intercept)`:double[], `Speciesversicolor`:double[], `Speciesvirginica`:double[], `Petal.Width`:double[], `Speciesversicolor:Petal.Width`:double[], `Speciesvirginica:Petal.Width`:double[]>;
type `model_parameters.anova` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>, null | character, null | character, null | logical, null> => struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:integer[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>;
type `model_parameters.aov` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>, character, character, logical, null> => struct<`Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[], `Omega_Sq_partial`:^double[], `Eta_Sq_partial`:^double[], `Epsilon_sq`:^double[]>;
type `model_parameters.aovlist` <struct<`(Intercept)`:struct<`coefficients`:^double[], `residuals`:double, `effects`:double, `rank`:integer, `fitted.values`:double, `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>, `Species`:struct<`coefficients`:double, `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer, `qr`:struct<`qr`:^double[], `qraux`:double, `pivot`:integer, `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>, `Within`:struct<`coefficients`:double, `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer, `qr`:struct<`qr`:^double[], `qraux`:double, `pivot`:integer, `tol`:double, `rank`:integer>, `df.residual`:integer, `terms`:language>>, null, null, null, null> => struct<`Group`:character[], `Parameter`:character[], `Sum_Squares`:double[], `df`:double[], `Mean_Square`:double[], `F`:^double[], `p`:^double[]>;
type `model_parameters.befa` <struct<`alpha`:^double[], `sigma`:^double[], `R`:^double[], `dedic`:^integer[], `nfac`:integer[], `MHacc`:logical[]>, logical, character, logical, double, character, null, null> => struct<`Variable`:integer[], `F1`:^double[], `F2`:^double[], `F3`:^double[]>;
type `model_parameters.BFBayesFactor` <character, logical, double, character, character[], character, double, logical, null> => struct<`Parameter`:character, `Median`:double, `CI_low`:double, `CI_high`:double, `pd`:double, `ROPE_Percentage`:double, `Prior_Distribution`:character, `Prior_Location`:double, `Prior_Scale`:double, `BF`:double>;
type `model_parameters.glm` <struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>>, double, logical, logical, logical, double, null> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `z`:double[], `df_residual`:integer[], `p`:double[]>;
type `model_parameters.htest` <struct<`statistic`:double, `parameter`:double, `p.value`:double, `conf.int`:double[], `estimate`:double[], `null.value`:double, `alternative`:character, `method`:character, `data.name`:character>, logical, null> => struct<`Parameter`:integer, `Group`:integer, `Mean_Group1`:double, `Mean_Group2`:double, `Difference`:double, `t`:double, `df`:double, `p`:double, `CI_low`:double, `CI_high`:double, `Method`:integer>;
type `model_parameters.lavaan` <double, logical, character[], null> => struct<`To`:integer[], `Operator`:integer[], `From`:integer[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `p`:double[], `Type`:character[]>;
type `model_parameters.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>>, double, logical | character, logical, logical, double, null> => struct<`Parameter`:character[], `Coefficient`:double[], `CI_low`:double[], `CI_high`:double[], `p`:double[]>;
type `model_parameters.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, double, character, logical, logical, double, struct<`kid5`:double[], `phd`:double[]>, null> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `z`:double[], `p`:double[], `Component`:character[], `Std_Coefficient`:double[]>;
type `odds_to_d` <double, logical> => double;
type `odds_to_probs.double` <double, logical, null> => double;
type `omega_squared.anova` <struct<`Df`:integer[], `Sum Sq`:double[], `Mean Sq`:double[], `F value`:^double[], `Pr(>F)`:^double[]>, logical, null, double> => struct<`Parameter`:character[], `Omega_Sq_partial`:^double[]>;
type `omega_squared.aov` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Sepal.Big`:character>, `xlevels`:struct<`Sepal.Big`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Sepal.Big`:character[]>>, logical, null, double> => struct<`Parameter`:character[], `Omega_Sq_partial`:^double[]>;
type `p_value.data.frame` <struct<`(Intercept)`:double[], `Speciesversicolor`:double[], `Speciesvirginica`:double[], `Petal.Width`:double[], `Speciesversicolor:Petal.Width`:double[], `Speciesvirginica:Petal.Width`:double[]>, null> => struct<`Parameter`:character[], `p`:double[]>;
type `p_value.numeric` <double[], null> => double;
type `p_value.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, character, null> => struct<`Parameter`:character[], `p`:double[], `Component`:character[]>;
type `parameters_bootstrap` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, double, character, double, character, character, null> => struct<`Parameter`:character[], `Coefficient`:double[], `CI_low`:double[], `CI_high`:double[], `p`:double[]>;
type `parameters_reduction.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]>, character, character, null> => struct<`Petal.Length_0.99/Petal.Width_0.97/Species.setosa_-0.94/Sepal.Length_0.86/Species.virginica_0.73`:double[], `Species.versicolor_0.93`:double[], `Sepal.Width_0.62`:double[]>;
type `parameters_selection.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `wt`:double[]>>, character, double, double, null> => struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `wt`:double[]>, `anova`:struct<`Step`:character[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `qsec`:double[], `am`:double[]>, `anova`:struct<`Step`:character[], `Df`:^double[], `Deviance`:^double[], `Resid. Df`:double[], `Resid. Dev`:double[], `AIC`:double[]>>;
type `parameters_standardize` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, logical, character, logical, null> => struct<`Parameter`:character[], `Std_Coefficient`:double[]>;
type `parameters_table` <struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `t`:double[], `df_residual`:integer[], `p`:double[]>, logical, logical, null> => struct<`Parameter`:character[], `Coefficient`:integer[], `SE`:integer[], `95% CI`:character[], `t`:integer[], `df`:character[], `p`:character[]>;
type `parameters_type` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `poly(Sepal.Width# 2)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `poly(Sepal.Width# 2# raw = TRUE)`:^double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`vs`:double[], `wt`:double[], `cyl`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`mpg`:double[], `cyl`:double[], `disp`:double[], `hp`:double[], `drat`:double[], `wt`:double[], `qsec`:double[], `vs`:double[], `am`:double[], `gear`:double[], `carb`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:null, `xlevels`:tuple<>> | struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, null> => struct<`Parameter`:character[], `Type`:character[], `Term`:character[], `Variable`:^character[], `Level`:^character[], `Secondary_Parameter`:^character[], `Secondary_Type`:^character[], `Secondary_Term`:^character[], `Secondary_Variable`:^character[], `Secondary_Level`:^character[], `Tertiary_Parameter`:^character[]>;
type `principal_components.data.frame` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species.setosa`:double[], `Species.versicolor`:double[], `Species.virginica`:double[]>, double | character, character, logical, null | double, logical, null> => struct<`Variable`:integer[], `PC1`:double[], `PC2`:double[], `PC3`:double[], `PC4`:double[], `PC5`:double[], `PC6`:double[], `Complexity`:double[]>;
type `skewness.numeric` <double[], logical, null> => double;
type `smoothness` <double[], character, double> => double;
type `standard_error.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Petal.Length`:double[], `Sepal.Length`:double[], `Species`:integer[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Sepal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, null | symbol> => struct<`Parameter`:character[], `SE`:double[]>;
type `standard_error.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, character, null> => struct<`Parameter`:character[], `SE`:double[], `Component`:character[]>;
type `standardize_names.parameters_model` <struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `t`:double[], `df_residual`:integer[], `p`:double[]>, character[], null> => struct<`Parameter`:character[], `Coefficient`:double[], `SE`:double[], `CI_low`:double[], `CI_high`:double[], `Statistic`:double[], `df_residual`:integer[], `p`:double[]>;
type `standardize.data.frame` <struct<`fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, logical, character, null, null, symbol | logical, logical, null> => struct<`fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:double[], `phd`:double[]>;
type `standardize.factor` <integer[], logical, logical | symbol> => integer[];
type `standardize.lm` <struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[], `binary`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>, logical, character, logical, logical | symbol, null> => struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>, `call`:language, `terms`:language, `model`:struct<`Sepal.Length`:double[], `Species`:integer[], `Petal.Width`:double[]>> | struct<`coefficients`:double[], `residuals`:double[], `fitted.values`:double[], `effects`:double[], `R`:^double[], `rank`:integer, `qr`:struct<`qr`:^double[], `rank`:integer, `qraux`:double[], `pivot`:integer[], `tol`:double>, `family`:struct<`family`:character, `link`:character, `linkfun`:any => any, `linkinv`:any => any, `variance`:any => any, `dev.resids`:any => any, `aic`:any => any, `mu.eta`:any => any, `initialize`:expression, `validmu`:any => any, `valideta`:any => any, `simulate`:any => any>, `linear.predictors`:double[], `deviance`:double, `aic`:double, `null.deviance`:double, `iter`:integer, `weights`:double[], `prior.weights`:double[], `df.residual`:integer, `df.null`:integer, `y`:double[], `converged`:logical, `boundary`:logical, `model`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `call`:language, `formula`:language, `terms`:language, `data`:struct<`binary`:double[], `Species`:integer[], `Sepal.Length`:double[]>, `offset`:null, `control`:struct<`epsilon`:double, `maxit`:double, `trace`:logical>, `method`:character, `contrasts`:struct<`Species`:character>, `xlevels`:struct<`Species`:character[]>> | struct<`coefficients`:double[], `residuals`:double[], `effects`:double[], `rank`:integer, `fitted.values`:double[], `assign`:integer[], `qr`:struct<`qr`:^double[], `qraux`:double[], `pivot`:integer[], `tol`:double, `rank`:integer>, `df.residual`:integer, `xlevels`:tuple<>, `call`:language, `terms`:language, `model`:struct<`mpg`:double[], `wt`:double[], `cyl`:double[]>>;
type `standardize.numeric` <double[], logical, character, logical, logical | symbol> => double[];
type `standardize.zeroinfl` <struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:integer[], `phd`:double[]>, `y`:integer[]>, logical, character, logical, symbol, null> => struct<`coefficients`:struct<`count`:double[], `zero`:double[]>, `residuals`:double[], `fitted.values`:double[], `optim`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null, `hessian`:^double[]>, `method`:character, `control`:struct<`method`:character, `maxit`:double, `trace`:logical, `EM`:logical, `start`:null, `fnscale`:double, `hessian`:logical, `reltol`:double>, `start`:struct<`count`:double[], `zero`:double[]>, `weights`:double[], `offset`:struct<`count`:null, `zero`:null>, `n`:integer, `df.null`:double, `df.residual`:integer, `terms`:struct<`count`:language, `zero`:language, `full`:language>, `theta`:null, `SE.logtheta`:null, `loglik`:double, `vcov`:^double[], `dist`:character, `link`:character, `linkinv`:any => any, `converged`:logical, `call`:language, `formula`:language, `levels`:struct<`fem`:character[], `mar`:character[]>, `contrasts`:struct<`count`:struct<`fem`:character, `mar`:character>, `zero`:null>, `model`:struct<`art`:integer[], `fem`:integer[], `mar`:integer[], `kid5`:double[], `ment`:double[], `phd`:double[]>, `y`:integer[]>;
type `trim` <character> => character;
