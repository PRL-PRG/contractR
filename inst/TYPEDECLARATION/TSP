type `as.ATSP` <class<`dist`> | class<`TSP`, `dist`> | class<`matrix`>> => (class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`>);
type `as.ATSP.dist` <class<`dist`> | class<`TSP`, `dist`>> => class<`ATSP`, `ATSP`, `matrix`>;
type `as.ATSP.matrix` <class<`matrix`>> => class<`ATSP`, `matrix`>;
type `as.ETSP` <class<`data.frame`> | class<`matrix`>> => class<`ETSP`, `matrix`>;
type `as.ETSP.data.frame` <class<`data.frame`>> => class<`ETSP`, `matrix`>;
type `as.ETSP.matrix` <class<`matrix`>> => class<`ETSP`, `matrix`>;
type `as.matrix.ATSP` <class<`ATSP`, `matrix`> | class<`ATSP`, `ATSP`, `matrix`>, ...> => class<`matrix`>;
type `as.matrix.ETSP` <class<`ETSP`, `matrix`>, ...> => class<`matrix`>;
type `as.TOUR` <integer[]> => class<`TOUR`, `integer`>;
type `as.TOUR.integer` <integer[]> => class<`TOUR`, `integer`>;
type `as.TSP` <class<`dist`> | class<`ATSP`, `matrix`> | class<`matrix`> | class<`ETSP`, `matrix`>> => class<`TSP`, `dist`>;
type `as.TSP.dist` <class<`dist`>> => class<`TSP`, `dist`>;
type `as.TSP.ETSP` <class<`ETSP`, `matrix`>> => class<`TSP`, `dist`>;
type `as.TSP.matrix` <class<`ATSP`, `matrix`> | class<`matrix`>> => class<`TSP`, `dist`>;
type `ATSP` <class<`dist`> | class<`TSP`, `dist`> | class<`matrix`>, null, null> => (class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`>);
type `choose1` <integer[]> => integer;
type `choose1_max` <double[]> => integer;
type `choose1_min` <double[]> => integer;
type `cut_tour` <class<`TOUR`, `integer`>, character[], logical> => (integer[] | list<integer[]>);
type `cut_tour.TOUR` <class<`TOUR`, `integer`>, character[], logical> => (integer[] | list<integer[]>);
type `ETSP` <class<`data.frame`> | class<`matrix`>, null> => class<`ETSP`, `matrix`>;
type `filter` <character[]> => logical[];
type `FUN` <integer> => character[] | <integer[]> => double | <integer> => double | <class<`TOUR`, `integer`> | class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, ...> => (double | null) | <character[]> => character | <...> => integer[] | <integer[]> => double | <integer> => integer[] | <integer> => double;
type `.get_parameters` <list<any>, list<any>> => list<integer | integer[] | double | null | double>;
type `image.ATSP` <class<`ATSP`, `matrix`>, class<`TOUR`, `integer`>, character[], ...> => null;
type `image.TSP` <class<`TSP`, `dist`>, any, character[], ...> => null;
type `initial` < > => integer[];
type `insert_dummy` <class<`ATSP`, `ATSP`, `matrix`> | class<`TSP`, `dist`>, double, double, any, character> => (class<`ATSP`, `matrix`> | class<`TSP`, `dist`>);
type `insert_dummy.ATSP` <class<`ATSP`, `ATSP`, `matrix`>, double, double, any, character> => class<`ATSP`, `matrix`>;
type `insert_dummy.TSP` <class<`TSP`, `dist`>, double, double, double, character> => class<`TSP`, `dist`>;
type `.isSquare` <class<`matrix`>> => logical;
type `labels.ATSP` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`>, ...> => character[];
type `labels.ETSP` <class<`ETSP`, `matrix`>, ...> => character[];
type `labels.TSP` <class<`TSP`, `dist`>, ...> => (character[] | integer[]);
type `n_of_cities` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`dist`> | class<`ETSP`, `matrix`> | class<`TSP`, `dist`>> => integer;
type `n_of_cities.ATSP` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`ETSP`, `matrix`>> => integer;
type `n_of_cities.default` <class<`dist`> | class<`TSP`, `dist`>> => integer;
type `n_of_cities.ETSP` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`ETSP`, `matrix`>> => integer;
type `n_of_cities.TSP` <class<`dist`> | class<`TSP`, `dist`>> => integer;
type `plot.ETSP` <class<`ETSP`, `matrix`>, class<`TOUR`, `integer`>, null, double, character | double, ...> => null;
type `read_TSPLIB` <character, double> => (class<`ATSP`, `matrix`> | class<`ETSP`, `matrix`> | class<`TSP`, `dist`>);
type `reformulate_ATSP_as_TSP` <class<`ATSP`, `ATSP`, `matrix`>, double, double> => class<`TSP`, `dist`>;
type `.replaceInf` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, any, any> => (class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`TSP`, `dist`>);
type `.solve_TSP` <class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, character | null, null, ...> => class<`TOUR`, `integer`>;
type `solve_TSP` <class<`ATSP`, `matrix`> | class<`ETSP`, `matrix`> | class<`TSP`, `dist`>, character | null, null, ...> => class<`TOUR`, `integer`>;
type `solve_TSP.ATSP` <class<`ATSP`, `matrix`>, character, null, logical, ...> => class<`TOUR`, `integer`>;
type `solve_TSP.ETSP` <class<`ETSP`, `matrix`>, character | null, null, ...> => class<`TOUR`, `integer`>;
type `solve_TSP.TSP` <class<`TSP`, `dist`>, character | null, null, ...> => class<`TOUR`, `integer`>;
type `.solve_TSP_worker` <class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, character, list<any>> => class<`TOUR`, `integer`>;
type `TOUR` <integer[] | class<`TOUR`, `integer`>, null | character, null | class<`ATSP`, `matrix`> | class<`TSP`, `dist`> | class<`ATSP`, `ATSP`, `matrix`>> => class<`TOUR`, `integer`>;
type `tour_length` <class<`TOUR`, `integer`> | class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, ...> => (double | null);
type `tour_length.ATSP` <class<`ATSP`, `ATSP`, `matrix`> | class<`ATSP`, `matrix`>, class<`TOUR`, `integer`>, ...> => double;
type `tour_length.TOUR` <class<`TOUR`, `integer`>, class<`ATSP`, `matrix`> | class<`TSP`, `dist`> | null | class<`ATSP`, `ATSP`, `matrix`>, ...> => (double | null);
type `tour_length.TSP` <class<`TSP`, `dist`>, class<`TOUR`, `integer`> | integer[], ...> => double;
type `TSP` <class<`dist`> | class<`ATSP`, `matrix`> | class<`matrix`>, null, null> => class<`TSP`, `dist`>;
type `tsp_insertion` <class<`TSP`, `dist`>, character, list<any>> => integer[];
type `tsp_insertion_arbitrary` <class<`TSP`, `dist`>, list<any>> => integer[];
type `tsp_nn` <class<`ATSP`, `matrix`> | class<`TSP`, `dist`>, list<any>> => integer[];
type `tsp_repetitive_nn` <class<`TSP`, `dist`>, any> => integer[];
type `tsp_two_opt` <class<`TSP`, `dist`>, list<any>> => integer[];
type `write_TSPLIB` <class<`ATSP`, `ATSP`, `matrix`> | class<`ETSP`, `matrix`> | class<`TSP`, `dist`>, character, double, null, null> => integer;
type `write_TSPLIB.ATSP` <class<`ATSP`, `ATSP`, `matrix`>, character, double, null, null> => integer;
type `write_TSPLIB.ETSP` <class<`ETSP`, `matrix`>, character, double, null, null> => integer;
type `write_TSPLIB.TSP` <class<`TSP`, `dist`>, character, double, null, null> => integer;
