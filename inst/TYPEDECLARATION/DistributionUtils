type `besselRatio` <double, double, double, double> => double;
type `distCalcRange` <character, double[] | null, double, ...> => double[];
type `distIneqMassart` <character, double, double, ...> => list<double>;
type `distMode` <character, double[] | null, ...> => double;
type `distStepSize` <character, any, null | double[], character, ...> => double[];
type `FUN` <double, double, double, double> => double | <double, double, double, double, double> => double;
type `gammaTailPlotLine` <double[], double, double, double, character[], ...> => null;
type `incompleteBesselK` <double, double, double, double, double> => double;
type `integrateDens` <character, double, double, double, ...> => class<`integrate`>;
type `inversionTestpq` <character, double, double, double, null, character, ...> => list<double[]>;
type `inversionTestqp` <character, double[], double, double, character, ...> => list<double[]>;
type `is.wholenumber` <character[] | class<`matrix`> | complex[] | list<integer[]>, any> => logical;
type `kurtosis` <double[], logical> => double;
type `logHist` <double[], character, logical, logical, character, double[], null, character, character, null, character, ...> => list<double[] | character>;
type `momChangeAbout` <character | double, double[], double, double> => double[];
type `momIntegrated` <character, double[], double, double, logical, ...> => double;
type `momSE` <double, double, double[]> => double;
type `moranTest` <double[], character, null, ...> => class<`htest`>;
type `normTailPlotLine` <double[], double, double, character[], ...> => null;
type `pDist` <character, double[], double[] | null, double, logical, double, logical, ...> => double[];
type `qDist` <character, double[], null | double[], logical, character, double, double, double, double, ...> => double[];
type `safeIntegrate` <class<`function`>, double, double, any, any, any, logical, logical, null, ...> => class<`integrate`>;
type `skewness` <double[], logical> => double;
type `tailPlot` <double[], character, character[], null, null, null, ...> => null;
type `tailPlotLine` <double[], character, double[] | null, character[], ...> => null;
type `tsHessian` <double[], class<`function`>, ...> => class<`matrix`>;
type `tTailPlotLine` <double[], double, character[], ...> => null;
