type `blup.mvmeta` <class<`mvmeta`>, logical, logical, logical, double, character[], character[], ...> => (class<`matrix`> | list<class<`matrix`> | list<double[] | class<`matrix`>>>);
type `coef.mvmeta` <class<`mvmeta`>, character[], ...> => (class<`matrix`> | double[]);
type `fbtr` <class<`matrix`>, integer> => class<`matrix`>;
type `filter` <character[]> => logical[];
type `fn` <double[], list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any, any, integer, character, any> => double | <double[], list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any, any, integer, character, any> => double;
type `fun` <any, any> => null;
type `FUN` <logical[]> => class<`matrix`> | <integer> => double | <integer> => class<`matrix`> | <integer> => class<`matrix`> | <integer> => class<`matrix`> | <integer> => class<`matrix`> | <integer> => class<`matrix`> | <integer> => double | <integer> => double | <integer> => class<`matrix`> | <class<`matrix`>> => class<`matrix`> | <integer> => logical[] | <integer> => double[] | <integer> => class<`matrix`> | <class<`matrix`>> => class<`matrix`> | <class<`matrix`>> => double[] | <integer> => class<`matrix`> | <integer> => double[] | <integer> => class<`matrix`> | <integer> => double[] | <class<`matrix`>> => double | <integer> => class<`matrix`>;
type `glsfit` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, class<`matrix`>, logical> => list<double[] | class<`matrix`> | list<class<`matrix`>>>;
type `gr` <double[], list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any, any, integer, character, any> => double[] | <double[], list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any, any, integer, character, any> => double[];
type `gradchol.ml` <double[], class<`matrix`>, integer[], integer[], list<class<`matrix`>>, list<double[]>, list<logical[]>, integer, any> => double[];
type `gradchol.reml` <double[], class<`matrix`>, class<`matrix`>, integer[], integer[], list<class<`matrix`>>, list<class<`matrix`>>, list<class<`matrix`>>, list<logical[]>, integer, any> => double[];
type `initpar` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any, any, character, list<double | null | list<double> | null | double[] | list<double>>> => double[];
type `iter.igls` <class<`matrix`>, list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, any> => class<`matrix`>;
type `logLik.mvmeta` <class<`mvmeta`>, ...> => class<`logLik`>;
type `mkS` <class<`data.frame`> | class<`matrix`>, class<`matrix`>, null, null> => class<`matrix`>;
type `model.frame.mvmeta` <class<`mvmeta`>, ...> => class<`data.frame`, `data.frame.mvmeta`>;
type `model.matrix.mvmeta` <class<`mvmeta`>, ...> => class<`matrix`>;
type `mvmeta` <any, any, any, any, character, character, logical, null, any, any, any> => (class<`data.frame`, `data.frame.mvmeta`> | class<`mvmeta`>);
type `mvmeta.control` <list<any>, logical, double, null, null, double, double[], logical, double, double, logical, logical> => list<null | double[] | list<double> | double | null | list<double>>;
type `mvmeta.fit` <class<`matrix`>, class<`matrix`>, class<`matrix`>, null, character, character, list<any>> => list<any>;
type `mvmeta.fixed` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, integer, integer, integer, list<double | null | list<double>>, ...> => list<any>;
type `mvmeta.ml` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, integer, integer, integer, character, list<double | null | list<double>>, ...> => list<any>;
type `mvmeta.mm` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, integer, integer, integer, list<double | null | list<double>>, ...> => list<any>;
type `mvmeta.reml` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, integer, integer, integer, character, list<double | null | list<double> | null | double[] | list<double>>, ...> => list<any>;
type `mvmeta.vc` <list<class<`matrix`>>, list<double[]>, list<class<`matrix`>>, list<logical[]>, integer, integer, integer, integer, list<double | null | list<double>>, ...> => list<any>;
type `na.omit.data.frame.mvmeta` <class<`data.frame`, `data.frame.mvmeta`>, ...> => class<`data.frame`, `data.frame.mvmeta`>;
type `par2Psi` <double[], integer, character, any> => class<`matrix`>;
type `print.summary.mvmeta` <class<`summary.mvmeta`>, double, ...> => null;
type `qtest.mvmeta` <class<`mvmeta`>, ...> => class<`qtest.mvmeta`>;
type `sumlist` <list<class<`matrix`> | logical[]>> => (class<`matrix`> | double[]);
type `summary.mvmeta` <class<`mvmeta`>, double, ...> => class<`summary.mvmeta`>;
type `vcov.mvmeta` <class<`mvmeta`>, ...> => class<`matrix`>;
