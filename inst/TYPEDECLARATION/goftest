type `ad.test` <double[], character, ..., logical, any> => class<`htest`>;
type `AkOnFk` <integer, double[]> => double[];
type `braun` <double[], class<`function`>, double> => list<double | character>;
type `cvm.test` <double[], character, ..., logical, any> => class<`htest`>;
type `D2` <double[]> => double[];
type `D3` <double[]> => double[];
type `ED2` <double[]> => double[];
type `ED3` <double[]> => double[];
type `f` <double, any, double, any> => double | <double, double, double> => double;
type `filter` <character[]> => logical[];
type `FUN` <double[]> => list<double | character> | <double[]> => list<double | character>;
type `getCdf` <character, logical> => class<`function`>;
type `getfunky` <character> => class<`function`>;
type `pAD` <double, any, logical, any> => double;
type `pCvM` <double[], double, logical> => double[];
type `psi1` <double[]> => double[];
type `qAD` <double, double, logical, logical> => double;
type `qCvM` <double, double, logical> => double;
type `recogniseCdf` <character> => character;
type `simpleADtest` <double[]> => list<double | character>;
type `simpleCvMtest` <double[]> => list<double | character>;
type `Vinf` <double[]> => double[];
type `Vn` <double[], double> => double[];
