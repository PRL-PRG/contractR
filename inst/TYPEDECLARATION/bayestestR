type `area_under_curve` <double[], double[], character, ...> => double;
type `as.data.frame.density` <class<`density`>, ...> => class<`data.frame`>;
type `bayesfactor` <..., null | double[], character, double, null, any, logical, double, logical, null> => (class<`bayesfactor_inclusion`, `data.frame`> | class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`> | class<`bayesfactor_parameters`, `data.frame`, `see_bayesfactor_parameters`>);
type `bayesfactor_inclusion` <class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`>, logical, null, ...> => class<`bayesfactor_inclusion`, `data.frame`>;
type `bayesfactor_inclusion.bayesfactor_models` <class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`>, logical, null, ...> => class<`bayesfactor_inclusion`, `data.frame`>;
type `bayesfactor_models` <..., class<`lm`> | double, logical> => class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`>;
type `bayesfactor_models.default` <..., class<`lm`> | double, logical> => class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`>;
type `.bayesfactor_parameters` <double[], double[], double, double> => double;
type `bayesfactor_parameters` <double[], double[], character, double, any, ...> => class<`bayesfactor_parameters`, `data.frame`, `see_bayesfactor_parameters`>;
type `bayesfactor_parameters.data.frame` <class<`data.frame`>, class<`data.frame`>, character, double, logical, ...> => class<`bayesfactor_parameters`, `data.frame`, `see_bayesfactor_parameters`>;
type `bayesfactor_parameters.numeric` <double[], double[], character, double, any, ...> => class<`bayesfactor_parameters`, `data.frame`, `see_bayesfactor_parameters`>;
type `bayesfactor_restricted` <class<`data.frame`>, character[], class<`data.frame`>, logical, ...> => class<`bayesfactor_restricted`, `data.frame`>;
type `bayesfactor_restricted.data.frame` <class<`data.frame`>, character[], class<`data.frame`>, ...> => class<`bayesfactor_restricted`, `data.frame`>;
type `.check_ci_argument` <double[], double, any> => null;
type `ci` <double[] | class<`data.frame`>, ...> => (class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`> | class<`bayestestR_eti`, `data.frame`, `see_eti`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`>);
type `.ci_bayesian` <double[] | class<`data.frame`>, double[], character, any, any, null, any, any, ...> => (class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`> | class<`bayestestR_eti`, `data.frame`, `see_eti`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`>);
type `ci.data.frame` <class<`data.frame`> | double[], double[], character, logical, double, ...> => (class<`bayestestR_eti`, `data.frame`, `see_eti`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`> | class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>);
type `ci.numeric` <class<`data.frame`> | double[], double[], character, logical, double, ...> => (class<`bayestestR_eti`, `data.frame`, `see_eti`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`> | class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>);
type `.compact_list` <list<class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>>> => list<class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>>;
type `.compute_interval_dataframe` <class<`data.frame`>, double[], any, character> => (class<`bayestestR_eti`, `data.frame`, `see_eti`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`>);
type `distribution_normal` <double, double, double, logical, ...> => double[];
type `.estimate_density` <double[], character, double, logical, any, character, ...> => class<`data.frame`>;
type `estimate_density` <double[], character, any, logical, double, character, ...> => class<`data.frame`, `estimate_density`, `see_estimate_density`>;
type `estimate_density.numeric` <double[], character, double, logical, double, character, ...> => class<`data.frame`, `estimate_density`, `see_estimate_density`>;
type `estimate_samples_density` <class<`data.frame`>> => list<class<`data.frame`>>;
type `eti` <double[] | class<`data.frame`>, ...> => (class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_eti`, `data.frame`, `see_eti`>);
type `.eti` <double[], double, any> => class<`data.frame`>;
type `eti.data.frame` <class<`data.frame`>, double[], any, ...> => class<`bayestestR_eti`, `data.frame`, `see_eti`>;
type `eti.numeric` <double[], double[], any, ...> => class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`>;
type `filter` <character[]> => logical[];
type `FUN` <double[] | class<`data.frame`>, ...> => (class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_eti`, `data.frame`, `see_eti`>) | <integer> => double | <character> => character | <double[]> => logical | <character> => character | <double[] | class<`data.frame`>, ...> => (class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`>) | <list<class<`data.frame`> | list<double | class<`factor`>>>> => class<`data.frame`> | <class<`lm`>> => character | <double> => class<`data.frame`> | <list<class<`data.frame`> | list<double | class<`factor`>>>> => class<`data.frame`> | <class<`name`>> => character | <double> => class<`data.frame`> | <class<`call`>, class<`data.frame`>> => double | <class<`data.frame`>> => list<class<`data.frame`> | list<double | class<`factor`>>> | <class<`bayestestR_ci`, `bayestestR_eti`, `data.frame`, `see_ci`, `see_eti`> | class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>> => logical;
type `.get_direction` <character> => double;
type `.get_model_table` <class<`bayesfactor_models`, `data.frame`, `see_bayesfactor_models`>, null, ...> => class<`data.frame`>;
type `hdi` <double[] | class<`data.frame`>, ...> => (class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`> | class<`bayestestR_hdi`, `data.frame`, `see_hdi`>);
type `.hdi` <double[], double, any> => class<`data.frame`>;
type `hdi.data.frame` <class<`data.frame`>, double[], any, ...> => class<`bayestestR_hdi`, `data.frame`, `see_hdi`>;
type `hdi.numeric` <double[], double[], any, ...> => class<`bayestestR_ci`, `bayestestR_hdi`, `data.frame`, `see_ci`, `see_hdi`>;
type `.make_BF_plot_data` <class<`data.frame`>, class<`data.frame`>, double, double> => list<class<`data.frame`>>;
type `make_terms` <character> => character[];
type `relative_density` <double[]> => double;
type `.safe_deparse` <class<`name`>> => character;
