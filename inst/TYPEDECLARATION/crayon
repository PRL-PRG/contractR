type `$` <...> => character;
type `%+%` <character[], character[]> => character[];
type `alert` <...> => character;
type `as` <...> => character;
type `bg` <...> => character;
type `bgMaroon` <...> => character;
type `blue` <...> => character;
type `bold` <...> => character;
type `chr` <integer[], ...> => character[];
type `col_align` <character, double, character, character> => character;
type `col_nchar` <character, ...> => integer;
type `col_strsplit` <character, character, ...> => list<character[]>;
type `col_substr` <character[], double[], double[]> => character[];
type `col_substring` <character, double[], double[]> => character[];
type `combine_styles` <...> => class<`crayon`>;
type `$.crayon` <class<`crayon`>, character> => class<`crayon`>;
type `define_style` <character, list<character>> => list<character>;
type `drop_style` <character> => null;
type `error` <...> => character;
type `filter` <character[]> => logical[];
type `finish` <class<`crayon`>, ...> => character;
type `finish.crayon` <class<`crayon`>, ...> => character;
type `fun` <any, any> => double;
type `FUN` <integer> => class<`matrix`> | <character | class<`crayon`> | null, logical> => class<`crayon`> | <class<`matrix`>> => class<`matrix`> | <integer[]> => class<`matrix`>;
type `green` <...> => character;
type `has_color` < > => logical;
type `has_style` <character> => logical;
type `i_num_colors` < > => double;
type `is_builtin_style` <character> => logical;
type `is_r_color` <character> => logical;
type `is_string` <character> => logical;
type `make_crayon` <list<list<character>>> => class<`crayon`>;
type `make_space` <double, character> => character;
type `make_style` <..., logical, logical, double> => class<`crayon`>;
type `mapper` <integer[]> => double[];
type `map_to_ansi` <any, list<class<`matrix`>>> => class<`function`>;
type `mypaste` <..., character> => character;
type `non_matching` <list<class<`matrix`>>, character[], logical> => list<class<`matrix`>>;
type `note` <...> => character;
type `num_colors` <logical> => double;
type `pink` <...> => character;
type `red` <...> => character;
type `re_table` <...> => list<class<`matrix`>>;
type `rstudio_initialized` < > => logical;
type `rstudio_with_ansi_support` < > => logical;
type `start.crayon` <class<`crayon`>, ...> => character;
type `strip_style` <character[]> => character[];
type `strrep` <character, double> => character;
type `style` <character, character | class<`crayon`>, character | null> => character;
type `style_8_from_rgb` <class<`matrix`>, logical> => list<character>;
type `style_from_r_color` <character, logical, double, any> => list<character>;
type `style_from_rgb` <class<`matrix`>, logical, double, any> => list<character>;
type `styles` < > => list<list<character>>;
type `underline` <...> => character;
type `use_or_make_style` <character | class<`crayon`> | null, logical> => class<`crayon`>;
type `warn` <...> => character;
