type `activeSet` <class<`matrix`>, character | class<`function`>, integer[] | null, double, logical, double, ...> => class<`activeset`>;
type `aTx` <class<`matrix`>, double[]> => double[];
type `b2a` <class<`matrix`>, integer> => class<`matrix`>;
type `checkSol` <any, double[], any, double[], ^double[], ^double[], any> => ^double[];
type `combine` <integer> => integer | <integer> => integer;
type `filter` <character[]> => logical[];
type `fn` <double[]> => double;
type `fobj` <double[]> => double | <double[]> => double | <double[]> => double | <double[]> => double | <double[]> => double | <double[]> => double;
type `fSolver` <double[], class<`matrix`> | integer[] | null, list<class<`function`> | class<`function`> | double[] | double[] | class<`function`>>> => list<double[]>;
type `FUN` <list<double[]>> => double[] | <list<double[]>> => double[] | <integer> => double[];
type `gobj` <double[]> => double[] | <double[]> => double[] | <double[]> => double[] | <double[]> => double[] | <double[]> => double[] | <double[]> => double[];
type `gpava` <double[] | null, class<`data.frame`> | class<`matrix`> | double[], null, class<`function`>, character, null | double> => class<`gpava`>;
type `gr` <double[]> => double[];
type `is.active` <double[], double> => integer[];
type `is.pos` <double, double> => logical;
type `mkIndi` <class<`matrix`>, integer> => class<`matrix`>;
type `mkLagrange` <class<`matrix`>, double[]> => ^double[];
type `mregnn` <class<`matrix`>, double[], class<`matrix`>> => list<double[]>;
type `mregnnM` <class<`matrix`>, double[]> => list<double[]>;
type `mySolver` <double[], class<`matrix`> | integer[] | null, list<class<`function`> | class<`function`> | double[] | double[] | class<`function`>>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[] | class<`matrix`>>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<^double[]> | <double[], class<`matrix`> | integer[] | null, list<integer[]>> => list<double[]> | <double[], class<`matrix`>, list<double[]>> => list<double[]>;
type `plot.gpava` <class<`gpava`>, character, character, character, character, ...> => null;
type `solver` <double[], double[], double> => double | <double[], double[]> => double;
type `summary.activeset` <class<`activeset`>, ...> => null;
type `taTx` <class<`matrix`>, ^double[], integer> => ^double[];
type `warshall` <class<`matrix`>> => class<`matrix`>;
type `weighted.fractile` <double[], double[], double> => double;
type `weightedFractile` <double[], double[], double, double> => double;
type `weighted.median` <double[], double[]> => double;
type `weightedMedian` <double[], double[]> => double;
type `weightedMidRange` <double[], double[]> => double;
