type `abort_if_irregular` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => null;
type `abort_not_chr` <character, character> => null;
type `abort_not_lst` <class<`data.frame`> | class<`Date`> | class<`POSIXct`, `POSIXt`> | ^double[] | list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | integer[]>, any> => null;
type `abort_unknown_interval` <class<`interval`>> => null;
type `angle_brackets` <character> => character;
type `append_row` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `append_row.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `are_duplicated` <class<`data.frame`, `tbl`, `tbl_df`>, any, any, logical> => logical[];
type `arrange.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `as.data.frame.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, null, logical, ...> => class<`data.frame`>;
type `as.Date.yearmonth` <class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`Date`, `yearweek`>, ...> => class<`Date`>;
type `as.Date.yearquarter` <class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`Date`, `yearweek`>, ...> => class<`Date`>;
type `as.Date.yearweek` <class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`Date`, `yearweek`>, ...> => class<`Date`>;
type `as.POSIXlt.yearquarter` <class<`Date`, `yearquarter`>, any, ...> => class<`POSIXlt`, `POSIXt`>;
type `assert_key_data` <class<`data.frame`, `tbl`, `tbl_df`>> => null;
type `as_tibble.grouped_df` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`>, ...> => class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`>;
type `as_tibble.grouped_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`>;
type `as_tibble.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `tbl`, `tbl_df`>;
type `as_tsibble` <class<`matrix`, `mts`, `ts`> | class<`ts`> | class<`data.frame`, `tbl`, `tbl_df`>, any, any, logical, logical, logical, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `as_tsibble.mts` <class<`matrix`, `mts`, `ts`>, ..., character, logical, any> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `as_tsibble.tbl_df` <class<`data.frame`, `tbl`, `tbl_df`>, any, any, logical, logical, logical, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `as_tsibble.ts` <class<`ts`>, ..., character> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `as.ts.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, any, double | null, null, ...> => (class<`matrix`, `mts`, `ts`> | class<`ts`>);
type `backticks` <character[]> => character;
type `bad_by` <double> => null;
type `bad_step_function` <double> => null;
type `bad_window_function` <double> => null;
type `big_mark` <integer, ...> => character;
type `bind_df` <list<null | list<double[]>>, double, null, null, logical> => class<`data.frame`, `tbl`, `tbl_df`>;
type `bind_lst` <list<list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>>>> => list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>>;
type `brackets` <character> => character;
type `build_tsibble` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`Date`, `yearmonth`> | character[] | double[] | class<`POSIXct`, `POSIXt`> | character[] | double[]>, any, class<`data.frame`, `tbl`, `tbl_df`> | null, any, any, any, class<`interval`> | logical, logical, any> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `build_tsibble_meta` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>, class<`data.frame`, `tbl`, `tbl_df`>, character, character, logical, class<`interval`>> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `by_row` <class<`function`>, class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, logical, ..., logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `check_slider_input` <class<`Date`> | class<`POSIXct`, `POSIXt`> | ^double[] | class<`data.frame`> | list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | integer[]>, double, double, any> => (class<`Date`> | class<`POSIXct`, `POSIXt`> | ^double[] | list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | integer[]>);
type `check_valid_window` <double, any> => null;
type `comma` <...> => character;
type `count_gaps` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, logical, character[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `c.yearweek` <..., logical> => class<`Date`, `yearweek`>;
type `difference` <double[], double, double, null, integer[] | null> => ^double[];
type `diff_impl` <double[], double, double, null> => ^double[];
type `dim_tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character;
type `duplicated_key_index` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, any, character | class<`name`>, class<`data.frame`, `tbl`, `tbl_df`> | null> => logical;
type `duplicates` <class<`data.frame`, `tbl`, `tbl_df`>, any, any> => class<`data.frame`, `tbl`, `tbl_df`>;
type `easter_break` <double | integer[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `end.POSIXct` <class<`POSIXct`, `POSIXt`>, character | null, ...> => class<`POSIXct`, `POSIXt`>;
type `f` <double, double> => double;
type `.f` <integer, ...> => character | <integer[] | class<`Date`, `yearmonth`> | class<`POSIXct`, `POSIXt`>> => logical;
type `fill_gaps` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `fill_gaps.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `fill.grouped_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, ..., character> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `fill.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, ..., character> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `filter_index` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `filter.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `finalise_ts` <class<`data.frame`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`name`>, double | null> => (class<`matrix`, `mts`, `ts`> | class<`ts`>);
type `format.interval` <class<`interval`>, null, ...> => character;
type `format.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., null, null, null> => character[];
type `format_tz` <class<`POSIXct`, `POSIXt`>> => character;
type `format.yearmonth` <class<`Date`, `yearmonth`>, character, ...> => character[];
type `format.yearquarter` <class<`Date`, `yearquarter`>, character, ...> => character;
type `format.yearweek` <class<`Date`, `yearweek`>, character, ...> => character[];
type `fun` <double[], double, double, null> => ^double[];
type `gather.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, any, any, ..., logical, logical, logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `gcd` <double, double> => double;
type `gcd_interval` <double[]> => double;
type `gcd_vector` <double[]> => double;
type `group_by_drop_default` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `group_by_key` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `group_by.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical, any> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `guess_frequency` <class<`Date`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`POSIXct`, `POSIXt`>> => double;
type `guess_frequency.Date` <class<`Date`>> => double;
type `guess_frequency.POSIXt` <class<`POSIXct`, `POSIXt`>> => double;
type `guess_frequency.yearmonth` <class<`Date`, `yearmonth`>> => double;
type `guess_frequency.yearquarter` <class<`Date`, `yearquarter`>> => double;
type `has_all_key` <character[], class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `has_any_key` <character, class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `has_gaps` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, logical, character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `has_index` <character[], class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `has_tz` <class<`POSIXct`, `POSIXt`>> => logical;
type `holiday_aus` <double | integer[], character> => class<`data.frame`, `tbl`, `tbl_df`>;
type `holiday_aus_act` <integer[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `holiday_aus_national` <double | integer[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `holiday_aus_vic` <double> => class<`data.frame`, `tbl`, `tbl_df`>;
type `incr` <double, any> => class<`function`>;
type `index` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => class<`name`>;
type `index2` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => class<`name`>;
type `index2_var` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character;
type `index_by` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `index_by.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `index_valid` <class<`Date`>> => logical;
type `index_valid.Date` <class<`Date`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => logical;
type `index_valid.default` <^character[]> => logical;
type `index_valid.difftime` <class<`Date`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => logical;
type `index_valid.integer` <^double[]> => null;
type `index_valid.numeric` <^double[]> => null;
type `index_valid.POSIXt` <class<`Date`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => logical;
type `index_valid.yearmonth` <class<`Date`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => logical;
type `index_valid.yearquarter` <class<`Date`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => logical;
type `index_var` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character;
type `init_interval` <double, double, double, double, double, double, double, double, double, double, double, double> => class<`interval`>;
type `interval` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => class<`interval`>;
type `[.interval` <class<`interval`>, character[], any, logical> => list<double>;
type `[[.interval` <class<`interval`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character | integer, any, ..., logical> => (character[] | class<`Date`> | class<`Date`, `yearmonth`> | class<`POSIXct`, `POSIXt`> | double[] | ^integer[]);
type `interval_pull` <class<`Date`> | class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`difftime`> | class<`POSIXct`, `POSIXt`> | double[]> => class<`interval`>;
type `interval_pull.Date` <class<`Date`>> => class<`interval`>;
type `interval_pull.difftime` <class<`difftime`>> => class<`interval`>;
type `interval_pull.numeric` <double[]> => class<`interval`>;
type `interval_pull.POSIXt` <class<`POSIXct`, `POSIXt`>> => class<`interval`>;
type `interval_pull.yearmonth` <class<`Date`, `yearmonth`>> => class<`interval`>;
type `interval_pull.yearquarter` <class<`Date`, `yearquarter`>> => class<`interval`>;
type `irregular` < > => class<`interval`>;
type `is_53weeks` <integer[]> => logical[];
type `is_dot_null` <character | class<`name`> | null> => (character | null);
type `is_duplicated` <class<`data.frame`, `tbl`, `tbl_df`>, any, any> => logical;
type `is_even` <double> => logical;
type `is_grouped_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `is_index_null` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => null;
type `is_key_dropped` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `is_latex_output` < > => logical;
type `is_ordered` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `is_regular` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `is_tsibble` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `is_utf8_output` < > => logical;
type `is_yearmonth` <class<`Date`, `yearmonth`> | integer[]> => logical;
type `is_yearquarter` <class<`Date`, `yearquarter`> | integer[]> => logical;
type `is_yearweek` <class<`Date`, `yearweek`> | integer[]> => logical;
type `key` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>> => list<any>;
type `key_data` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `key_data.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>> => class<`data.frame`, `tbl`, `tbl_df`>;
type `key_drop_default` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | list<class<`Date`, `yearmonth`> | character[] | double[] | class<`POSIXct`, `POSIXt`> | character[] | double[]>> => logical;
type `key_drop_default.default` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | list<class<`Date`, `yearmonth`> | character[] | double[] | class<`POSIXct`, `POSIXt`> | character[] | double[]>> => logical;
type `key_drop_default.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => logical;
type `key_rows` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => list<integer[]>;
type `key.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>> => list<any>;
type `key_vars` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character[];
type `key_vars.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character[];
type `left_join.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`data.frame`, `tbl`, `tbl_df`>, character, logical, any, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `make_index_explicit` <class<`matrix`, `mts`, `ts`>, any> => class<`data.frame`, `tbl`, `tbl_df`>;
type `max0` <...> => double;
type `measured_vars` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character[];
type `measured_vars.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character[];
type `measures` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => list<class<`name`>>;
type `measures.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => list<class<`name`>>;
type `min0` <...> => double;
type `mutate_index2` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character[]> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `mutate.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `nest.grouped_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => (class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>);
type `nest.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => (class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>);
type `new_data` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `new_data.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, logical, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `new_interval` <...> => class<`interval`>;
type `new_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., character[]> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `new_yearmonth` <class<`Date`> | class<`Date`, `yearmonth`>> => class<`Date`, `yearmonth`>;
type `new_yearquarter` <class<`Date`> | class<`Date`, `yearquarter`>> => class<`Date`, `yearquarter`>;
type `new_yearweek` <class<`Date`>> => class<`Date`, `yearweek`>;
type `n_keys` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => integer;
type `not_tsibble` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => null;
type `nrow2` <class<`data.frame`> | integer[] | list<integer[]>> => integer;
type `pad_slide` <^double[] | list<integer | list<double[]>>, double, double, null, character, any, logical> => (^double[] | list<any>);
type `pad_stretch` <double[] | list<integer | class<`data.frame`, `tbl`, `tbl_df`> | list<integer[]>>, any, any, null, any> => (^double[] | list<any>);
type `partial_slider` <^double[], double, double, null, character, logical> => list<^double[]>;
type `paste_inline` <...> => character;
type `pivot_longer_tsibble` <class<`matrix`, `mts`, `ts`>, any> => list<class<`Date`, `yearmonth`> | character[] | double[] | class<`POSIXct`, `POSIXt`> | character[] | double[]>;
type `pivot_wider_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, null> => class<`data.frame`>;
type `pslide` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | list<integer[] | list<integer[]>>, class<`formula`> | class<`function`>, ..., double, double, null, logical, character, logical> => list<integer | null | list<double[]> | null | list<integer[]>>;
type `pslide_dbl` <class<`data.frame`, `tbl`, `tbl_df`>, class<`function`>, ..., double, double, null, logical, character, logical> => ^double[];
type `pslide_dfr` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`function`>, ..., double, double, null, logical, character, logical, null> => class<`data.frame`, `tbl`, `tbl_df`>;
type `pslider` <..., double, double, logical> => list<list<any>>;
type `pstretch` <class<`data.frame`> | list<integer[] | list<integer[]>>, class<`function`> | class<`formula`>, ..., double, double, null, logical> => list<integer | null | class<`data.frame`, `tbl`, `tbl_df`> | null | list<integer[]>>;
type `pstretcher` <..., double, double, logical> => list<list<integer[] | class<`Date`> | integer[] | list<integer[]>>>;
type `ptile` <list<integer[] | list<integer[]>>, class<`function`> | class<`formula`>, ..., double, logical> => list<integer | list<integer[]>>;
type `ptiler` <..., double, logical> => list<list<class<`data.frame`> | integer[] | list<integer[]>>>;
type `queens_birthday` <double | integer[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `recycle` <list<any>> => list<any>;
type `register_s3_method` <character, character, character, null> => null;
type `remove_key` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character[]> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `remove_tsibble_attrs` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `rename_join_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`data.frame`, `tbl`, `tbl_df`>, character, any> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `rep.yearmonth` <class<`Date`, `yearmonth`>, ...> => class<`Date`, `yearmonth`>;
type `rep.yearquarter` <class<`Date`, `yearquarter`>, ...> => class<`Date`, `yearquarter`>;
type `restore_index_class` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `retain_tsibble` <class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character[] | list<class<`name`>>, class<`name`>> => (class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `roll_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, list<list<integer[]>>, character> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `scan_gaps` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `scan_gaps.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `select_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `seq_date` <class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`Date`, `yearweek`>, any, character, double | null, null, ...> => class<`Date`>;
type `seq_generator` <class<`POSIXct`, `POSIXt`> | double[], class<`interval`>> => (class<`POSIXct`, `POSIXt`> | double[]);
type `seq.yearmonth` <class<`Date`, `yearmonth`>, any, double, double, null, ...> => class<`Date`, `yearmonth`>;
type `seq.yearquarter` <class<`Date`, `yearquarter`>, any, double, double, null, ...> => class<`Date`, `yearquarter`>;
type `seq.yearweek` <class<`Date`, `yearweek`>, class<`Date`, `yearweek`>, double, null, null, ...> => class<`Date`, `yearweek`>;
type `slice.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ..., logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `slide` <list<integer[]>, class<`formula`>, ..., double, double, null, logical, character, logical> => list<null | list<integer[]>>;
type `slide2` <integer[] | class<`data.frame`> | list<integer[]>, integer[] | class<`data.frame`> | list<integer[]>, class<`function`> | class<`formula`>, ..., double, double, null, logical, character, logical> => list<null | integer | null | list<integer[]>>;
type `slide_dbl` <^integer[] | list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>>, class<`function`> | class<`formula`>, ..., double, double, null, logical, character, logical> => ^double[];
type `slide_lgl` <integer[], class<`formula`>, ..., double, double, null, logical, character, logical> => ^logical[];
type `slider` <class<`Date`> | class<`POSIXct`, `POSIXt`> | ^double[] | class<`data.frame`> | list<class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`> | integer[]>, double, double, logical> => list<any>;
type `slide_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, double, character> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `split_period` <double> => list<double>;
type `spread.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, any, any, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `start.POSIXct` <class<`POSIXct`, `POSIXt`>, character | null, ...> => class<`POSIXct`, `POSIXt`>;
type `stretch` <list<integer[]>, class<`formula`>, ..., double, double, null, logical, any> => list<list<integer[]>>;
type `stretch2` <integer[] | class<`data.frame`> | list<integer[]>, integer[] | class<`data.frame`> | list<integer[]>, class<`function`> | class<`formula`>, ..., double, double, null, logical> => list<integer | null | null | list<integer[]>>;
type `stretch_dbl` <integer[], class<`function`>, ..., double, double, null, logical, any> => ^double[];
type `stretcher` <class<`Date`> | integer[] | class<`data.frame`> | list<integer[]>, double, double, logical> => list<class<`Date`> | integer[] | list<integer[]>>;
type `stretch_lgl` <integer[], class<`formula`>, ..., double, double, null, logical, any> => ^logical[];
type `stretch_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, double, character> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `summarise.tbl_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `tbl_gaps` <class<`POSIXct`, `POSIXt`>, class<`POSIXct`, `POSIXt`>, character[]> => class<`data.frame`, `tbl`, `tbl_df`>;
type `tbl_sum.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>> => character[];
type `[.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, integer[], any, logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `[[.tbl_ts` <class<`interval`> | class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character | integer, any, ..., logical> => (character[] | class<`Date`> | class<`Date`, `yearmonth`> | class<`POSIXct`, `POSIXt`> | double[] | ^integer[]);
type `$.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, character> => (class<`POSIXct`, `POSIXt`> | ^integer[]);
type `tile` <list<integer[]>, class<`formula`>, ..., double, logical> => list<list<integer[]>>;
type `tile2` <class<`data.frame`> | integer[] | list<integer[]>, class<`data.frame`> | integer[] | list<integer[]>, class<`formula`> | class<`function`>, ..., double, logical> => list<class<`data.frame`> | integer | list<integer[]>>;
type `tile_dbl` <integer[], class<`function`>, ..., double, logical> => double[];
type `tile_lgl` <integer[], class<`formula`>, ..., double, logical> => logical[];
type `tiler` <class<`data.frame`> | integer[] | list<integer[]>, double, logical> => list<class<`data.frame`> | integer[] | list<integer[]>>;
type `tile_tsibble` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, double, character> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `time_in` <class<`POSIXct`, `POSIXt`>, ...> => logical[];
type `time.POSIXt` <class<`POSIXct`, `POSIXt`>, null, ...> => class<`ts`>;
type `time_to_date` <class<`matrix`, `mts`, `ts`> | class<`ts`>, ...> => (class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`POSIXct`, `POSIXt`> | double[]);
type `time_to_date.ts` <class<`matrix`, `mts`, `ts`> | class<`ts`>, any, ...> => (class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`> | class<`POSIXct`, `POSIXt`> | double[]);
type `time_unit` <class<`interval`>> => double;
type `time.yearmonth` <class<`Date`, `yearmonth`>, ...> => class<`ts`>;
type `translate_interval` <class<`interval`>> => list<double>;
type `tsibble` <..., any, any, logical, logical> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `ungroup.grouped_ts` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `ungroup.tbl_ts` <class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, ...> => class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>;
type `units_since` <class<`Date`, `yearmonth`> | class<`Date`, `yearquarter`>> => double[];
type `units_since.yearmonth` <class<`Date`, `yearmonth`>> => double[];
type `units_since.yearquarter` <class<`Date`, `yearquarter`>> => double[];
type `unknown_interval` <class<`interval`>> => logical;
type `unwrap` <class<`data.frame`, `tbl`, `tbl_df`>, any> => class<`data.frame`, `tbl`, `tbl_df`>;
type `update_meta` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, null | logical, class<`interval`> | logical, logical> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `update_meta2` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>, logical, class<`interval`>, logical> => class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`>;
type `update_tsibble` <class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>, any, any, logical, logical, logical> => (class<`data.frame`, `grouped_df`, `grouped_ts`, `tbl`, `tbl_df`, `tbl_ts`> | class<`data.frame`, `tbl`, `tbl_df`, `tbl_ts`>);
type `use_id` <any, any> => character[];
type `validate_index` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>, any> => character;
type `validate_index_order` <class<`data.frame`, `tbl`, `tbl_df`>, class<`data.frame`, `tbl`, `tbl_df`>, character> => logical;
type `validate_interval` <class<`data.frame`, `tbl`, `tbl_df`> | class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`>, any, any, logical | class<`interval`>> => class<`interval`>;
type `validate_order` <integer[] | class<`Date`, `yearmonth`> | class<`POSIXct`, `POSIXt`>> => logical;
type `validate_tsibble` <class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>, any, character, class<`data.frame`, `tbl`, `tbl_df`>> => (class<`data.frame`, `grouped_df`, `tbl`, `tbl_df`> | class<`data.frame`, `tbl`, `tbl_df`>);
type `yearmonth` <class<`Date`> | class<`Date`, `yearweek`> | class<`POSIXct`, `POSIXt`> | double[] | character[]> => class<`Date`, `yearmonth`>;
type `[.yearmonth` <class<`Date`, `yearmonth`>, ..., logical> => class<`Date`, `yearmonth`>;
type `+.yearmonth` <class<`Date`, `yearmonth`>, integer[]> => class<`Date`, `yearmonth`>;
type `yearmonth.character` <character[]> => class<`Date`, `yearmonth`>;
type `yearmonth.Date` <class<`Date`>> => class<`Date`, `yearmonth`>;
type `yearmonth.numeric` <double[]> => class<`Date`, `yearmonth`>;
type `yearmonth.POSIXt` <class<`POSIXct`, `POSIXt`> | class<`Date`, `yearweek`>> => class<`Date`, `yearmonth`>;
type `yearmonth.yearweek` <class<`POSIXct`, `POSIXt`> | class<`Date`, `yearweek`>> => class<`Date`, `yearmonth`>;
type `yearquarter` <character[] | class<`Date`> | class<`Date`, `yearmonth`> | double[]> => class<`Date`, `yearquarter`>;
type `[.yearquarter` <class<`Date`, `yearquarter`>, ..., logical> => class<`Date`, `yearquarter`>;
type `+.yearquarter` <class<`Date`, `yearquarter`>, integer[]> => class<`Date`, `yearquarter`>;
type `yearquarter.character` <character[]> => class<`Date`, `yearquarter`>;
type `yearquarter.Date` <class<`Date`> | class<`Date`, `yearmonth`>> => class<`Date`, `yearquarter`>;
type `yearquarter.numeric` <double[]> => class<`Date`, `yearquarter`>;
type `yearquarter.yearmonth` <class<`Date`> | class<`Date`, `yearmonth`>> => class<`Date`, `yearquarter`>;
type `yearweek` <character[] | class<`Date`>> => class<`Date`, `yearweek`>;
type `+.yearweek` <class<`Date`, `yearweek`>, integer[]> => class<`Date`, `yearweek`>;
type `yearweek.character` <character[]> => class<`Date`, `yearweek`>;
type `yearweek.Date` <class<`Date`>> => class<`Date`, `yearweek`>;
