type `filter` <character[]> => logical[];
type `predict.svm` <struct<`call`:language, `type`:double, `kernel`:double, `cost`:double, `degree`:double, `gamma`:double, `coef0`:double, `nu`:double, `epsilon`:double, `sparse`:logical, `scaled`:logical[], `x.scale`:struct<`scaled:center`:double[], `scaled:scale`:double[]>, `y.scale`:null, `nclasses`:integer, `levels`:character[], `tot.nSV`:integer, `nSV`:integer[], `labels`:integer[], `SV`:^double[], `index`:integer[], `rho`:double[], `compprob`:logical, `probA`:null, `probB`:null, `sigma`:null, `coefs`:^double[], `na.action`:null>, struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[], `Species`:integer[]> | ^double[], logical, logical, character | null, any => any> => integer[];
type `svm.default` <^double[], integer[], logical[], null, character, double, double, double, double, double, null, double, double, double, logical, double, logical, logical, null> => struct<`call`:language, `type`:double, `kernel`:double, `cost`:double, `degree`:double, `gamma`:double, `coef0`:double, `nu`:double, `epsilon`:double, `sparse`:logical, `scaled`:logical[], `x.scale`:struct<`scaled:center`:double[], `scaled:scale`:double[]>, `y.scale`:null, `nclasses`:integer, `levels`:character[], `tot.nSV`:integer, `nSV`:integer[], `labels`:integer[], `SV`:^double[], `index`:integer[], `rho`:double[], `compprob`:logical, `probA`:null, `probB`:null, `sigma`:null, `coefs`:^double[], `na.action`:null, `fitted`:integer[], `decision.values`:^double[]>;
type `bincombinations` <double> => ^double[];
type `convexcoeff` <double[], double[]> => double[];
type `interpolate` <^double[], double[], tuple<double[], double[], double[]>, character> => double[];
type `kurtosis` <double[], logical, double> => double;
type `skewness` <double[], logical, double> => double;
type `bclust` <double[] | struct<>, double, double, double, character, character, character, double, logical, logical, logical, logical, null, double, null> => struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>;
type `centers.bclust` <struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:null, `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:null, `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>, double> => ^double[];
type `hclust.bclust` <struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:null, `members`:null, `cluster`:null, `centers`:null, `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:null, `members`:null, `cluster`:null, `centers`:null, `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>, symbol, double, character, character, logical, logical, double> => struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>;
type `plot.bclust` <struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double, `colnames`:null, `dist.method`:character, `hclust.method`:character, `maxcluster`:double> | struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>, double, character, null> => integer;
type `permutations` <integer> => ^double[];
type `boxplot.bclust` <struct<`allcenters`:^double[], `allcluster`:integer[], `hclust`:struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, `members`:^integer[], `cluster`:integer[], `centers`:^double[], `iter.base`:double, `base.centers`:double, `prcomp`:null, `datamean`:double[], `colnames`:character[], `dist.method`:character, `hclust.method`:character, `maxcluster`:double>, integer, logical, language, logical, integer[], null> => null;
type `classAgreement` <^integer[], logical> => struct<`diag`:double, `kappa`:double, `rand`:double, `crand`:double>;
type `print.fclust` <struct<`centers`:^double[], `size`:integer[], `cluster`:integer[], `membership`:^double[], `iter`:double, `withinerror`:double, `call`:language>, null> => struct<`centers`:^double[], `size`:integer[], `cluster`:integer[], `membership`:^double[], `iter`:double, `withinerror`:double, `call`:language>;
type `rdiscrete` <double, double[], character[] | integer[], null> => character[] | integer[];
type `::` <^double[], logical, double> => double;
