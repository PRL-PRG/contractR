type `.add.color.table` < > => character;
type `.add.font.table` < > => character;
type `.add.header` <character, character, double, double, null> => character;
type `addHeader` <...> => character;
type `addHeader.RTF` <class<`Object`, `RTF`>, character, character, null, null, ...> => character;
type `.add.merged.table.row` <character[], double[], character, double, logical, double, logical, logical> => character;
type `.add.newline` <double, double> => character;
type `addNewLine` <...> => character;
type `addNewLine.RTF` <class<`Object`, `RTF`>, double, ...> => character;
type `.add.page.break` <double, double, double[]> => character;
type `addPageBreak` <...> => double;
type `addPageBreak.RTF` <class<`Object`, `RTF`>, double, double, double[], ...> => double;
type `.add.page.margins` <double[]> => character;
type `.add.page.numbers` < > => character;
type `.add.paper.size` <double, double> => character;
type `addParagraph` <...> => character;
type `addParagraph.RTF` <class<`Object`, `RTF`>, ...> => character;
type `addPlot` <...> => integer;
type `addPlot.RTF` <class<`Object`, `RTF`>, class<`function`>, double, double, double, ...> => integer;
type `.add.png` <character, any, any, logical> => any;
type `addSessionInfo` <...> => double;
type `addSessionInfo.RTF` <class<`Object`, `RTF`>, logical, ...> => double;
type `.add.table` <class<`data.frame`> | class<`table`>, double[] | null, null, any, double, any, double, any, any, null, null> => character;
type `addTable` <...> => character;
type `.add.table.header.row` <character[], double[], null, double, logical, double> => character;
type `.add.table.row` <character[], double[], null, double, logical, double, logical, logical, null, null> => character;
type `addTable.RTF` <class<`Object`, `RTF`>, class<`data.frame`> | class<`table`>, double[] | null, null, null, double, logical, character, null, null, ...> => character;
type `.add.text` <character> => character;
type `addText` <...> => character;
type `addText.RTF` <class<`Object`, `RTF`>, ..., logical, logical> => character;
type `addTrellisObject` <...> => any;
type `addTrellisObject.RTF` <class<`Object`, `RTF`>, class<`trellis`>, double, double, double, null, ...> => any;
type `constructor` <character, double, double, double[], double> => class<`Object`, `RTF`>;
type `.convert` <character[]> => character[];
type `decreaseIndent` <...> => double;
type `decreaseIndent.RTF` <class<`Object`, `RTF`>, ...> => double;
type `done` <...> => null;
type `done.RTF` <class<`Object`, `RTF`>, ...> => null;
type `.end.paragraph` < > => character;
type `endParagraph` <...> => character;
type `endParagraph.RTF` <class<`Object`, `RTF`>, ...> => character;
type `.end.rtf` < > => character;
type `.get.space.before.after` <null, null> => character;
type `.get.TOC.level` <null> => character;
type `increaseIndent` <...> => double;
type `increaseIndent.RTF` <class<`Object`, `RTF`>, ...> => double;
type `.max.col.nchar` <class<`data.frame`>, logical, logical> => integer[];
type `.optimize.col.widths` <class<`data.frame`>, logical, double, double, double> => double[];
type `RTF` <character, double, double, double[], double> => class<`Object`, `RTF`>;
type `.rtf.plot` <class<`function`>, character, double, double, double, ...> => character;
type `.rtf.trellis.object` <class<`trellis`>, character, double, double, double, null, ...> => any;
type `.start.paragraph` <double, double> => character;
type `startParagraph` <...> => character;
type `startParagraph.RTF` <class<`Object`, `RTF`>, ...> => character;
type `.start.rtf` <double, double, double[]> => character;
