type `CIsim` <double, double, double, double, double, character> => null;
type `colMatrix` <double> => class<`matrix`>;
type `Combinations` <double, double> => class<`matrix`>;
type `EDA` <double[] | ^integer[], double> => double[];
type `filter` <character[]> => logical[];
type `normarea` <double, double, double, double> => list<double[]>;
type `nsize` <double, double | null, double, double, character> => null;
type `ntester` <double[]> => list<character>;
type `rowMatrix` <double> => class<`matrix`>;
type `SIGN.test` <double[] | ^integer[], null, double, character, double, ...> => class<`htest_S`>;
type `SIGN.test.default` <double[] | ^integer[], null, double, character, double, ...> => class<`htest_S`>;
type `SRS` <double[], double> => class<`matrix`>;
type `tsum.test` <double, double, double, double | null, double | null, double | null, character, double, logical, double> => class<`htest`>;
type `zsum.test` <double, double, double, double | null, double | null, double | null, character, double, double> => class<`htest`>;
type `z.test` <double[], double[] | null, character, double, double, double | null, double> => class<`htest`>;
