type `arrangeGrob` <..., list<class<`gDesc`, `grob`, `rect`>>, any, null, character, logical, logical, character, null, null, null, null> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `cbind_2` <class<`gDesc`, `gTree`, `grob`, `gtable`>, class<`gDesc`, `gTree`, `grob`, `gtable`>, character> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `col_widths` <class<`matrix`>> => class<`unit`, `unit.list`>;
type `ellipseGrob` <class<`unit`, `unit.arithmetic`>, class<`unit`, `unit.arithmetic`>, double, double[], double, double, class<`gpar`>, ..., character, character> => class<`gDesc`, `grob`, `polygon`>;
type `filter` <character[]> => logical[];
type `FUN` <character[] | double | null, integer, any, integer> => (character[] | double[] | ^logical[]) | <list<class<`gDesc`, `grob`, `text`>>> => class<`unit`, `unit.arithmetic`> | <list<class<`gDesc`, `grob`, `text`>>> => class<`unit`, `unit.arithmetic`>;
type `grid.arrange` <..., logical> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `gtable_table` <character[] | class<`data.frame`> | class<`matrix`>, any, any, class<`function`>, list<character | double>, class<`function`>, list<null | double | character | character[] | double | character | double>, class<`unit`>, character, null> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `insert.unit` <class<`unit`, `unit.arithmetic`>, class<`unit`, `unit.arithmetic`> | class<`unit`, `unit.list`>, integer> => class<`unit`, `unit.list`>;
type `ngonGrob` <class<`unit`, `unit.arithmetic`>, class<`unit`, `unit.arithmetic`>, double[], double[], double, double[], integer[] | double, class<`gpar`>, ..., character, character> => class<`gDesc`, `grob`, `polygon`>;
type `polygon_regular` <double, double> => class<`matrix`>;
type `rbind_2` <class<`gDesc`, `gTree`, `grob`, `gtable`>, class<`gDesc`, `gTree`, `grob`, `gtable`>, character> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `row_heights` <class<`matrix`>> => class<`unit`, `unit.list`>;
type `tableGrob` <class<`data.frame`>, character[], character[], list<list<class<`function`> | class<`unit`> | list<character | double | character[] | double> | class<`function`> | class<`unit`> | list<character | double> | class<`function`> | class<`unit`> | list<character | double | null | double | character>>>, null, ...> => class<`gDesc`, `gTree`, `grob`, `gtable`>;
type `ttheme_default` <double, character, character, logical, class<`unit`>, ...> => list<list<class<`function`> | class<`unit`> | list<character | double | character[] | double> | class<`function`> | class<`unit`> | list<character | double> | class<`function`> | class<`unit`> | list<character | double | null | double | character>>>;
