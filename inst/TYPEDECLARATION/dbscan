type `::` <^double[], double, logical, character | integer, double, character | integer[], double> => struct<`dist`:^double[], `id`:^integer[], `k`:integer, `sort`:logical>;
type `.predict_frNN` <^double[], ^double[], integer[], double, ???> => integer[];
type `adjacencylist.frNN` <struct<`dist`:list<double[]>, `id`:list<integer[]>, `eps`:double, `sort`:logical>, ???> => list<integer[]>;
type `adjacencylist.kNN` <struct<`dist`:^double[], `id`:^integer[], `k`:integer, `sort`:logical>, ???> => list<integer[]>;
type `all_children` <struct<`0`:integer[], `2`:integer[], `4`:integer[], `5`:integer[], `6`:integer[]>, double, logical> => integer[];
type `computeStability` <struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `dist.method`:character>, double, logical> => struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>>;
type `dbscan` <^double[] | struct<`dist`:list<double[]>, `id`:list<integer[]>, `eps`:double, `sort`:logical> | struct<`ids`:tuple<double[], double[], double[], double[], double[]>, `eps`:double>, double | ???, double, null, logical, ???> => struct<`cluster`:integer[], `eps`:double, `minPts`:double>;
type `dbscan_density_int` <^double[], double, integer, integer, integer, double> => integer[];
type `dbscan_int` <^double[], double, integer, double[], integer, integer, integer, integer, double, tuple<> | tuple<double[], double[], double[], double[], double[]> | list<integer[]>> => integer[];
type `distToAdjacency` <integer[], integer> => struct<`100`:integer[], `99`:integer[], `98`:integer[], `97`:integer[], `96`:integer[], `95`:integer[], `94`:integer[], `93`:integer[], `92`:integer[], `91`:integer[], `90`:integer[], `89`:integer[], `88`:integer[], `87`:integer[], `86`:integer[], `85`:integer[], `84`:integer[], `83`:integer[], `82`:integer[], `81`:integer[], `80`:integer[], `79`:integer[], `36`:integer[], `35`:integer[], `34`:integer[], `33`:integer[], `32`:integer[], `31`:integer[], `30`:integer[], `29`:integer[], `28`:integer[], `27`:integer[], `26`:integer[], `25`:integer[], `24`:integer[], `23`:integer[], `22`:integer[], `21`:integer[], `20`:integer[], `19`:integer[], `18`:integer[], `17`:integer[], `6`:integer[], `5`:integer[], `4`:integer[], `3`:integer[], `1`:integer[], `2`:integer[], `7`:integer[], `8`:integer[], `9`:integer[], `10`:integer[], `11`:integer[], `12`:integer[], `13`:integer[], `14`:integer[], `15`:integer[], `16`:integer[], `37`:integer[], `38`:integer[], `39`:integer[], `40`:integer[], `41`:integer[], `42`:integer[], `43`:integer[], `44`:integer[], `45`:integer[], `46`:integer[], `47`:integer[], `48`:integer[], `49`:integer[], `50`:integer[], `51`:integer[], `52`:integer[], `53`:integer[], `54`:integer[], `55`:integer[], `56`:integer[], `57`:integer[], `58`:integer[], `59`:integer[], `60`:integer[], `61`:integer[], `62`:integer[], `63`:integer[], `64`:integer[], `65`:integer[], `66`:integer[], `67`:integer[], `68`:integer[], `69`:integer[], `70`:integer[], `71`:integer[], `72`:integer[], `73`:integer[], `74`:integer[], `75`:integer[], `76`:integer[], `77`:integer[], `78`:integer[]>;
type `extractDBSCAN` <struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:null, `xi`:null>, double> => struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:double, `xi`:null, `cluster`:integer[]>;
type `extractSemiSupervised` <struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>>, struct<`12`:double[]>, double, logical> => struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `vscore`:double>>;
type `extractUnsupervised` <struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>> | struct<`20`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `18`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `17`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `16`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `13`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `21`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `11`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `22`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `12`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `10`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `14`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `19`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `15`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>>, logical> => struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>> | struct<`20`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `18`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `17`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `16`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `13`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `21`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `11`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `22`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `12`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `10`:struct<`contains`:integer, `eps`:double, `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `14`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `19`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `15`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>>;
type `extractXi` <struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:null, `xi`:null>, double, logical, logical> => struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:null, `xi`:double, `clusters_xi`:struct<`start`:double[], `end`:double[], `cluster_id`:integer[]>, `cluster`:double[]>;
type `filter` <character[]> => logical[];
type `frNN` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]> | ^double[], double, logical, character, double, character, double> => struct<`dist`:list<double[]>, `id`:list<integer[]>, `eps`:double, `sort`:logical>;
type `frNN_int` <^double[], double, integer, integer, integer, double> => struct<`dist`:list<double[]>, `id`:list<integer[]>, `eps`:double>;
type `FUN` <struct<`s`:double, `e`:double, `maximum`:double, `mib`:double> | double | integer[]> => double[] | struct<`s`:double, `e`:double, `maximum`:double, `mib`:double>;
type `glosh` <^double[] | struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `call`:language, `dist.method`:character>, double, ???> => double[];
type `hclustMergeOrder` <^double[], integer[]> => struct<`merge`:^integer[], `height`:double[], `order`:integer[], `labels`:null, `method`:character, `dist.method`:character>;
type `hullplot` <^double[], integer[] | struct<`cluster`:integer[], `centers`:^double[], `totss`:double, `withinss`:double[], `tot.withinss`:double, `betweenss`:double, `size`:integer[], `iter`:integer, `ifault`:integer> | struct<`cluster`:integer[], `eps`:double, `minPts`:double> | struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:null, `xi`:double, `clusters_xi`:struct<`start`:double[], `end`:double[], `cluster_id`:integer[]>, `cluster`:double[]>, ? character, double, double, double, logical, double, character, ? integer[] | ???> => null;
type `JP_int` <^integer[], integer> => integer[];
type `jpclust` <struct<`X`:double[], `Y`:double[]> | struct<`dist`:^double[], `id`:^integer[], `k`:integer, `sort`:logical>, double, double, ???> => struct<`cluster`:integer[], `type`:character, `param`:struct<`k`:double, `kt`:double>>;
type `kNN` <struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]> | ^double[], double, logical, character | symbol, double, character, double> => struct<`dist`:^double[], `id`:^integer[], `k`:integer, `sort`:logical>;
type `kNN_int` <^double[], integer, integer, integer, integer, double> => struct<`dist`:^double[], `id`:^integer[], `k`:integer>;
type `kNNdist` <^double[], double, logical, ???> => double[];
type `kNNdistplot` <^double[], double, ???> => null;
type `mrd` <double[], double[]> => double[];
type `node_xy` <struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>>, struct<`0`:integer[], `2`:integer[], `4`:integer[], `5`:integer[], `6`:integer[]>, integer> => ^double[];
type `normalize` <integer[]> => double[];
type `optics` <^double[], double, double, ???> => struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[], `minPts`:double, `eps`:double, `eps_cl`:null, `xi`:null>;
type `optics_int` <^double[], double, integer, integer, integer, integer, double, tuple<>> => struct<`order`:integer[], `reachdist`:double[], `coredist`:double[], `predecessor`:^integer[]>;
type `plot.NN` <struct<`dist`:^double[], `id`:^integer[], `k`:integer, `sort`:logical> | struct<`dist`:list<double[]>, `id`:list<integer[]>, `eps`:double, `sort`:logical>, struct<`Sepal.Length`:double[], `Sepal.Width`:double[], `Petal.Length`:double[], `Petal.Width`:double[]>, symbol | struct<>, ???> => null;
type `pointdensity` <struct<`X`:double[], `Y`:double[]>, double, character, character, double, character, double> => integer[];
type `predict.dbscan_fast` <struct<`cluster`:integer[], `eps`:double, `minPts`:double>, ^double[], ^double[], ???> => integer[];
type `prims` <double[], integer> => ^double[];
type `simplifiedTree` <struct<`10`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `7`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `6`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `8`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `5`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `0`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `9`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `4`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `1`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>, `2`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer, `score`:double>, `3`:struct<`contains`:integer[], `eps`:double[], `eps_birth`:double, `eps_death`:double, `stability`:double, `n_children`:integer>>> => tuple<integer, tuple<integer, tuple<tuple<integer, integer>, tuple<integer, integer>>>> | tuple<tuple<integer, tuple<tuple<integer, integer>, integer>>, tuple<tuple<tuple<integer, integer>, tuple<integer, tuple<integer, integer>>>, tuple<tuple<integer, tuple<tuple<integer, integer>, integer>>, tuple<tuple<integer, integer>, tuple<integer, integer>>>>>;
type `updateFilterSDASet` <symbol | double, tuple<> | tuple<struct<`s`:double, `e`:double, `maximum`:double, `mib`:double>>, language | double> => tuple<> | tuple<struct<`s`:double, `e`:double, `maximum`:double, `mib`:double>>;
