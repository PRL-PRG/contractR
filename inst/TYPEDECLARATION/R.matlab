type `::` <...> => list<class<`matrix`> | class<`matrix`> | class<`array`> | list<null>>;
type `[[` <any> => double;
type `$` <...> => integer;
type `as.character.Matlab` <class<`Matlab`, `Object`>, ...> => character;
type `asSafeMatlabName` <character> => character;
type `asSafeRName` <character> => character;
type `charConverter` <character> => class<`function`>;
type `charToInt` <character[]> => double[];
type `close.Matlab` <class<`Matlab`, `Object`>, ...> => null;
type `constructor` <character, double, logical> => class<`Matlab`, `Object`>;
type `convertUTF8` <integer[]> => character;
type `crc` <raw[]> => raw[];
type `eatRawBuffer` <double> => null;
type `evaluate` <...> => any;
type `evaluate.Matlab` <class<`Matlab`, `Object`>, ..., character, logical> => any;
type `fillRawBuffer` <double> => null;
type `filter` <character[]> => logical[];
type `finalize.Matlab` <class<`Matlab`, `Object`>, ...> => null;
type `fun` <any, character> => null | <any, character> => class<`Object`, `Package`>;
type `getCommandByte` <any, character> => any;
type `getOption.Matlab` <class<`Matlab`, `Object`>, ...> => (double | null);
type `getVariable` <...> => any;
type `getVariable.Matlab` <class<`Matlab`, `Object`>, character, any, ...> => any;
type `intToChar` <integer[]> => character[];
type `isMat4` <integer[]> => logical;
type `isOpen` <...> => logical;
type `isOpen.Matlab` <class<`Matlab`, `Object`>, ...> => logical;
type `mat5ReadArrayFlags` <any> => list<character | integer | character | null | integer>;
type `mat5ReadDimensionsArray` <any> => list<integer[] | list<character | integer[]>>;
type `mat5ReadMiMATRIX` <any, list<character | null | integer>> => list<class<`matrix`> | class<`array`> | list<null>>;
type `mat5ReadName` <any> => list<character | list<character | integer[] | double> | character | list<character | integer[]>>;
type `mat5ReadTag` <any> => (null | list<character | integer[] | character | integer[] | double | character | null | integer>);
type `mat5ReadValues` <any, logical> => list<integer[] | list<character | integer[]>>;
type `Matlab` <character, double, logical> => class<`Matlab`, `Object`>;
type `matToString` <integer[], character> => character;
type `open.Matlab` <class<`Matlab`, `Object`>, integer, double, double, ...> => list<any>;
type `pushBackRawMat` <any, raw[]> => null;
type `readBinMat` <any, any, double, double, logical, any> => (integer[] | null | raw[]);
type `readCharMat` <any, integer> => character;
type `readMat` <...> => list<class<`matrix`> | class<`matrix`> | class<`array`> | list<null>>;
type `readMat5` <any, any, integer[]> => list<class<`matrix`> | class<`array`> | class<`matrix`> | list<null>>;
type `readMat5DataElement` <any> => (null | list<class<`matrix`> | class<`array`> | list<null>>);
type `readMat5or73Header` <any, integer[]> => list<character>;
type `readMat.default` <character, null, logical, character, character[], double, ...> => list<class<`matrix`> | class<`array`> | class<`matrix`> | list<null>>;
type `readRawBuffer` <any> => raw[];
type `readResult` <...> => any;
type `readResult.Matlab` <class<`Matlab`, `Object`>, ...> => any;
type `setFunction` <...> => any;
type `setFunction.Matlab` <class<`Matlab`, `Object`>, character, null, character, ...> => list<any>;
type `setOption.Matlab` <class<`Matlab`, `Object`>, ...> => null;
type `setVariable` <...> => any;
type `setVariable.Matlab` <class<`Matlab`, `Object`>, ..., logical> => list<any>;
type `setVerbose` <...> => double;
type `setVerbose.Matlab` <class<`Matlab`, `Object`>, double, ...> => double;
type `shortenRawBuffer` < > => null;
type `startServer` <...> => integer;
type `startServer.Matlab` <class<`Matlab`, `Object`>, null, double, logical, character[], character, ...> => integer;
type `stop_if_not` <...> => null;
type `typeOfCompression` <raw[], ...> => character;
type `uncompress` <raw[], character, logical, character[], ...> => raw[];
type `uncompressZlib` <raw[], ..., logical, double> => raw[];
type `writeAll` <class<`connection`, `file`>, list<class<`matrix`> | class<`array`> | class<`matrix`> | class<`array`>>> => double;
type `writeArrayFlags` <character, logical, logical, logical> => double;
type `writeArrayName` <character> => double;
type `writeBinMat` <class<`connection`, `file`> | null, double | integer[], double, logical, character> => double;
type `writeCharMat` <class<`connection`, `file`>, character, integer> => integer;
type `writeCommand` <...> => any;
type `writeCommand.Matlab` <class<`Matlab`, `Object`>, character, ...> => any;
type `writeDataElement` <class<`connection`, `file`> | null, list<class<`matrix`> | class<`array`>>, null | double> => double;
type `writeDimensionsArray` <integer[]> => double;
type `writeHeader` <class<`connection`, `file`>> => double;
type `writeMat` <...> => any;
type `writeMat5` <class<`connection`, `file`>, list<class<`matrix`> | class<`array`> | class<`matrix`> | double>, null, character> => double;
type `writeMat.default` <character, ..., logical, character, null, logical> => any;
type `writeNumericArray` <character, class<`array`> | class<`matrix`>> => double;
type `writeNumericPart` <class<`array`> | class<`matrix`>> => double;
type `writePadding` <double, ...> => double;
type `writeTag` <character, double, logical> => double;
