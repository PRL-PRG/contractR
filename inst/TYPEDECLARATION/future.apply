type `future_by` <class<`data.frame`>, class<`factor`>, class<`function`>, ..., logical> => any;
type `future_by.data.frame` <class<`data.frame`>, class<`factor`>, class<`function`>, ..., logical> => any;
type `future_by_internal` <class<`data.frame`>, class<`factor`>, class<`function`>, ..., any, class<`function`>, any, character, character> => any;
type `future_lapply` <list<class<`data.frame`>>, class<`function`>, ..., logical, null, logical, null, logical, logical, double, null, character> => any;
type `future_version` < > => class<`numeric_version`, `package_version`>;
type `future_xapply` <class<`function`>, integer, list<class<`data.frame`>>, list<any>, null, class<`{`>, environment, logical, null, double, null, logical, null, logical, logical, character, class<`function`>, any, any, ...> => any;
type `getGlobalsAndPackagesXApply` <any, list<any>, any, environment, logical, null, logical> => list<class<`FutureGlobals`, `Globals`, `list`> | character | logical>;
type `getOption` <character, logical | null> => (logical | null);
type `import_from` <character, any, character> => class<`function`>;
type `import_future` <character, null> => class<`function`>;
type `isFALSE` <logical> => logical;
type `makeChunks` <integer, integer, double, null> => list<integer>;
type `make_rng_seeds` <any, logical, any> => null;
type `stop_if_not` <...> => null;
