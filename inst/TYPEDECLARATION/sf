type `aggregate.sf` <class<`data.frame`, `sf`>, class<`sfc`, `sfc_POLYGON`>, class<`function`>, ..., logical, logical, class<`function`>> => class<`data.frame`, `sf`>;
type `as.data.frame.sf` <class<`data.frame`, `sf`>, ...> => class<`data.frame`>;
type `asMethod` <class<`sfc`, `sfc_MULTIPOLYGON`>, character, logical> => class<`SpatialPolygons`> | <class<`data.frame`, `sf`>, character, logical> => class<`SpatialPolygonsDataFrame`> | <class<`SpatialPolygonsDataFrame`>, character, logical> => class<`data.frame`, `sf`>;
type `.as_Spatial` <class<`sfc`, `sfc_MULTIPOLYGON`>, logical, character[]> => class<`SpatialPolygons`>;
type `as_Spatial` <class<`sfc`, `sfc_MULTIPOLYGON`> | class<`data.frame`, `sf`>, logical, any> => (class<`SpatialPolygons`> | class<`SpatialPolygonsDataFrame`>);
type `bbox.MtrxSet` <class<`sfc`, `sfc_LINESTRING`>, ...> => class<`bbox`>;
type `bbox.MtrxSetSet` <class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_POLYGON`>, ...> => class<`bbox`>;
type `bbox.MtrxSetSetSet` <class<`sfc`, `sfc_MULTIPOLYGON`>, ...> => class<`bbox`>;
type `bbox.Set` <class<`sfc`, `sfc_POINT`>, ...> => class<`bbox`>;
type `bb_wrap` <class<`bbox`> | double[]> => class<`bbox`>;
type `cbind` <..., double, character | null> => class<`data.frame`, `sf`>;
type `compute_bbox` <class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>> => class<`bbox`>;
type `compute_z_range` <class<`sfc`, `sfc_LINESTRING`>> => class<`z_range`>;
type `CPL_crs_from_epsg` <integer> => class<`crs`>;
type `CPL_crs_from_proj4string` <character> => class<`crs`>;
type `CPL_gdal_dimension` <class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, logical> => integer[];
type `CPL_gdalinfo` <character, character[], character[]> => character;
type `CPL_gdal_init` < > => null;
type `CPL_gdalvectortranslate` <character, character, character[], character[], character[]> => logical;
type `CPL_gdal_version` <character> => character;
type `CPL_gdal_with_geos` < > => logical;
type `CPL_geos_binop` <class<`sfc`, `sfc_POLYGON`>, class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, character, double, null, logical> => list<integer[]>;
type `CPL_geos_is_empty` <class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POLYGON`>> => logical[];
type `CPL_geos_op` <character, class<`sfc`, `sfc_POINT`>, double[], double[], double[], logical[], integer, integer, integer, integer> => list<class<`POLYGON`, `XY`, `sfg`>>;
type `CPL_geos_version` <logical, logical> => character;
type `CPL_get_bbox` <class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POLYGON`> | list<class<`POINT`, `XY`, `sfg`>>, double> => double[];
type `CPL_get_z_range` <class<`sfc`, `sfc_LINESTRING`>, double> => double[];
type `CPL_proj_h` <logical> => logical;
type `CPL_proj_is_valid` <character> => list<logical | character>;
type `CPL_proj_version` <logical> => character;
type `CPL_read_ogr` <character, character[], null, character[], logical, double, character[], character[], character[], logical, logical, logical> => list<double[] | character[] | class<`sfc`> | class<`sfc`>>;
type `$.crs` <class<`crs`> | list<character>, character> => (null | character | integer);
type `expBB` <double[], double[]> => double[];
type `filter` <character[]> => logical[];
type `fun` <any, any> => null | <any, any> => null | <...> => class<`matrix`>;
type `FUN` <character[]> => character | <character[] | double[]> => (character[] | double[]) | <list<class<`matrix`>>> => logical | <class<`data.frame`, `sf`>> => logical | <class<`Polygons`>> => logical | <^double[]> => logical | <class<`MULTIPOLYGON`, `XY`, `sfg`>> => character | <list<class<`matrix`>>> => list<class<`Polygon`>> | <class<`factor`> | class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`> | ^double[]> => logical | <class<`data.frame`, `sf`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ...> => class<`bbox`> | <class<`Polygons`>> => class<`MULTIPOLYGON`, `XY`, `sfg`> | <class<`MULTIPOLYGON`, `XY`, `sfg`>> => class<`Polygons`> | <class<`matrix`>> => null | <character[]> => (character | logical) | <character[] | class<`sfc`> | double[]> => logical | <integer> => list<class<`matrix`>> | <list<class<`matrix`>>> => double | <class<`matrix`>> => logical | <class<`name`>> => character | <class<`LINESTRING`, `XY`, `sfg`> | class<`LINESTRING`, `XYZ`, `sfg`> | class<`MULTILINESTRING`, `XY`, `sfg`> | class<`MULTIPOLYGON`, `XY`, `sfg`> | class<`POINT`, `XY`, `sfg`> | class<`POLYGON`, `XY`, `sfg`>> => logical | <class<`LINESTRING`, `XY`, `sfg`> | class<`MULTILINESTRING`, `XY`, `sfg`> | class<`MULTIPOLYGON`, `XY`, `sfg`> | class<`POINT`, `XY`, `sfg`> | class<`POLYGON`, `XY`, `sfg`>> => logical | <integer> => class<`Polygon`> | <class<`MULTIPOLYGON`, `XY`, `sfg`>> => character | <class<`Polygon`>> => logical | <class<`POINT`, `XY`, `sfg`>> => logical | <class<`Polygon`>> => class<`matrix`> | <list<class<`matrix`>>> => list<null> | <integer> => null | <class<`factor`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | double[]> => logical | <list<class<`matrix`>>> => integer;
type `gdal_utils` <character, character, any, character[], logical, any, any> => (character | logical);
type `getClassDim` <any, integer, any, character> => character[];
type `get_comment` <class<`MULTIPOLYGON`, `XY`, `sfg`>> => double[];
type `get_key_pos` <class<`data.frame`, `sf`>, ...> => double;
type `handle_bbox` <class<`sfc`, `sfc_MULTIPOLYGON`>, class<`SpatialPolygons`>> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `.image_scale` <^double[], character[], double[], double, logical, null, ..., logical, double, logical> => double[];
type `is_db_driver` <character> => logical;
type `is.na.bbox` <class<`bbox`>> => logical;
type `is.na.crs` <class<`crs`>> => logical;
type `is_symmetric` <character, null> => logical;
type `join` <class<`sfc`, `sfc_POLYGON`>, class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, logical, ...> => class<`sgbp`>;
type `kl_lim` <double[], double> => double[];
type `load_gdal` < > => null;
type `localTitle` <..., any, any, any, any, any, any, any, any, any, any, any> => null | <..., any, any, any, any, any, any, any, any, any, any, any> => null;
type `make_crs` <character | class<`crs`> | double, logical> => class<`crs`>;
type `moreThanOneOuterRing` <list<class<`Polygon`>>> => logical;
type `Mtrx` <class<`matrix`>, any, character> => class<`LINESTRING`, `XY`, `sfg`>;
type `MtrxSet` <list<class<`matrix`>>, any, character, logical> => (class<`MULTILINESTRING`, `XY`, `sfg`> | class<`POLYGON`, `XY`, `sfg`>);
type `MtrxSetSet` <list<list<class<`matrix`>>>, any, character, logical> => class<`MULTIPOLYGON`, `XY`, `sfg`>;
type `Ops.crs` <class<`crs`>, class<`crs`>> => logical;
type `pal` <double> => character[];
type `p_bind` <class<`POLYGON`, `XY`, `sfg`>> => class<`matrix`>;
type `plot_sf` <class<`sfc`, `sfc_POLYGON`>, null, null, null, logical, character, ..., any, any, any, logical, null> => null;
type `plot.sf` <class<`data.frame`, `sf`>, any, ..., any, null, double, character, any, any, double, any, logical> => (null | list<character | double[] | null>);
type `plot.sfc_POINT` <class<`sfc`, `sfc_POINT`>, any, ..., double, double, character[], double, double, double, character, logical> => null;
type `plot.sfc_POLYGON` <class<`sfc`, `sfc_POLYGON`>, any, ..., double, double, ^character[] | null, double, null, double, logical, character> => null;
type `points_cpp` <class<`matrix`>, character> => list<class<`POINT`, `XY`, `sfg`>>;
type `points_rcpp` <class<`matrix`>, character, ...> => list<class<`POINT`, `XY`, `sfg`>>;
type `Polygons2MULTIPOLYGON` <list<class<`Polygon`>>, character> => list<list<class<`matrix`>>>;
type `Polygons2POLYGON` <list<class<`Polygon`>>> => list<class<`matrix`>>;
type `print.sf` <class<`data.frame`, `sf`>, ..., double> => class<`data.frame`, `sf`>;
type `print.sfc` <class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`>, ..., double, character, character> => (class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`>);
type `process_cpl_read_ogr` <list<double[] | character[] | class<`sfc`> | class<`sfc`>>, logical, ..., logical, any, integer, logical> => class<`data.frame`, `sf`>;
type `.process_style_opts` <character, character, double> => list<logical | null>;
type `rbind` <..., double> => class<`data.frame`, `sf`>;
type `register_all_s3_methods` < > => null;
type `register_s3_method` <character, character, character, null> => null;
type `register_vctrs_methods` < > => null;
type `set_utf8` <list<double[] | character[]>> => list<double[] | character[]>;
type `[.sf` <class<`data.frame`, `sf`>, integer, any, ..., logical, any> => class<`data.frame`, `sf`>;
type `[[<-.sf` <class<`data.frame`, `sf`>, character, class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`> | null> => class<`data.frame`, `sf`>;
type `[<-.sfc` <class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_GEOMETRY`>, integer, class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_POINT`>> => (class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_POINT`>);
type `sfc2SpatialPolygons` <class<`sfc`, `sfc_MULTIPOLYGON`>, character[]> => class<`SpatialPolygons`>;
type `sf.colors` <double, double[], double, logical> => character[];
type `sf_extSoftVersion` < > => character[];
type `sgbp` <list<integer[]>, character, character[], integer> => class<`sgbp`>;
type `st_agr` <class<`data.frame`, `sf`> | class<`factor`>, ...> => class<`factor`>;
type `st_agr<-` <class<`data.frame`, `sf`>, class<`factor`>> => class<`data.frame`, `sf`>;
type `st_agr.factor` <class<`factor`>, ...> => class<`factor`>;
type `st_agr<-.sf` <class<`data.frame`, `sf`>, class<`factor`>> => class<`data.frame`, `sf`>;
type `st_agr.sf` <class<`data.frame`, `sf`>, ...> => class<`factor`>;
type `st_as_sf` <class<`data.frame`> | class<`SpatialPolygonsDataFrame`>, ...> => class<`data.frame`, `sf`>;
type `st_as_sfc` <class<`SpatialPolygons`>, ...> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `st_as_sfc.SpatialPolygons` <class<`SpatialPolygons`>, ..., double, logical> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `st_as_sf.data.frame` <class<`data.frame`>, ..., class<`factor`>, any, any, character, logical, logical, null | character> => class<`data.frame`, `sf`>;
type `st_as_sf.Spatial` <class<`SpatialPolygonsDataFrame`>, ...> => class<`data.frame`, `sf`>;
type `st_bbox` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ...> => class<`bbox`>;
type `st_bbox.sf` <class<`data.frame`, `sf`>, ...> => class<`bbox`>;
type `st_bbox.sfc` <class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ...> => class<`bbox`>;
type `st_buffer` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_POINT`>, double, double, character, character, double> => (class<`data.frame`, `sf`> | class<`sfc`, `sfc_POLYGON`>);
type `st_buffer.sf` <class<`data.frame`, `sf`>, double, double, character, character, double> => class<`data.frame`, `sf`>;
type `st_buffer.sfc` <class<`sfc`, `sfc_POINT`>, double, double, character, character, double> => class<`sfc`, `sfc_POLYGON`>;
type `st_cast` <class<`sfc`, `sfc_MULTIPOLYGON`>, any, ...> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `st_cast.sfc` <class<`sfc`, `sfc_MULTIPOLYGON`>, any, ..., any, logical> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `st_cast_sfc_default` <class<`sfc`, `sfc_MULTIPOLYGON`>> => class<`sfc`, `sfc_MULTIPOLYGON`>;
type `st_crs` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`> | double, ...> => class<`crs`>;
type `st_crs<-` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, class<`crs`> | character> => (class<`data.frame`, `sf`> | class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `st_crs.numeric` <double, character, logical, ...> => class<`crs`>;
type `st_crs<-.sf` <class<`data.frame`, `sf`>, class<`crs`>> => class<`data.frame`, `sf`>;
type `st_crs.sf` <class<`data.frame`, `sf`>, ...> => class<`crs`>;
type `st_crs<-.sfc` <class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, class<`crs`> | character> => (class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `st_crs.sfc` <class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ..., logical> => class<`crs`>;
type `st_dimension` <class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, logical> => integer[];
type `st_geometry` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ...> => (class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `st_geometry<-` <class<`data.frame`, `sf`> | class<`data.frame`>, null | class<`sfc`, `sfc_POLYGON`> | class<`sfc`, `sfc_GEOMETRY`>> => (class<`data.frame`> | class<`data.frame`, `sf`>);
type `st_geometry<-.data.frame` <class<`data.frame`>, class<`sfc`, `sfc_POLYGON`>> => class<`data.frame`, `sf`>;
type `st_geometry<-.sf` <class<`data.frame`, `sf`>, null | class<`sfc`, `sfc_POLYGON`> | class<`sfc`, `sfc_GEOMETRY`>> => (class<`data.frame`> | class<`data.frame`, `sf`>);
type `st_geometry.sf` <class<`data.frame`, `sf`>, ...> => (class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `st_geometry.sfc` <class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, ...> => (class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `st_geos_binop` <character, class<`sfc`, `sfc_POLYGON`>, class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, double, null, logical, logical> => class<`sgbp`>;
type `st_intersects.sfc` <class<`sfc`, `sfc_POLYGON`>, class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>, logical, logical, ...> => class<`sgbp`>;
type `st_is_empty` <class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POLYGON`>> => logical[];
type `st_is_longlat` <class<`data.frame`, `sf`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>> => null;
type `st_is_within_distance` <class<`sfc`, `sfc_POLYGON`>, class<`sfc`, `sfc_POINT`>, double, logical> => class<`sgbp`>;
type `st_linestring` <class<`matrix`>, character> => class<`LINESTRING`, `XY`, `sfg`>;
type `st_multilinestring` <list<class<`matrix`>>, any> => class<`MULTILINESTRING`, `XY`, `sfg`>;
type `st_multipolygon` <list<list<class<`matrix`>>>, any> => class<`MULTIPOLYGON`, `XY`, `sfg`>;
type `StopZ` <character> => null;
type `st_point` <integer[], character> => class<`POINT`, `XY`, `sfg`>;
type `st_polygon` <list<class<`matrix`>>, any> => class<`POLYGON`, `XY`, `sfg`>;
type `st_read` <character, any, ...> => class<`data.frame`, `sf`>;
type `st_read.character` <character, any, ..., null, null, logical, integer, double, logical, any, logical, logical> => class<`data.frame`, `sf`>;
type `st_set_agr` <class<`data.frame`, `sf`>, class<`factor`>> => class<`data.frame`, `sf`>;
type `st_set_geometry` <class<`data.frame`>, class<`sfc`, `sfc_POLYGON`>> => class<`data.frame`, `sf`>;
type `st_sf` <..., class<`factor`>, any, any, any, any, character | null, logical, logical> => class<`data.frame`, `sf`>;
type `st_sfc` <..., class<`crs`> | character, double, logical> => (class<`sfc`, `sfc_GEOMETRY`> | class<`sfc`, `sfc_LINESTRING`> | class<`sfc`, `sfc_MULTILINESTRING`> | class<`sfc`, `sfc_MULTIPOLYGON`> | class<`sfc`, `sfc_POINT`> | class<`sfc`, `sfc_POLYGON`>);
type `tryNum` <character> => character;
type `valid_numeric_matrix` <class<`matrix`>> => null;
type `valid_proj4string` <character> => list<logical | character>;
type `zb_wrap` <class<`z_range`> | double[]> => class<`z_range`>;
type `z_range.MtrxSet` <class<`sfc`, `sfc_LINESTRING`>, ...> => class<`z_range`>;
