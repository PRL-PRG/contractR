type `as.tensor` <class<`array`> | class<`matrix`> | double[], logical> => class<`Tensor`>;
type `cp` <class<`Tensor`>, double, double, double> => list<double[] | class<`Tensor`> | list<class<`matrix`>>>;
type `fnorm` <class<`Tensor`>> => double | <class<`Tensor`>> => double;
type `fold` <class<`matrix`> | class<`Tensor`>, double | integer[], double[], double[]> => class<`Tensor`>;
type `hadamard_list` <list<class<`matrix`>>> => class<`matrix`>;
type `head` <class<`Tensor`>, ...> => double[];
type `hosvd` <class<`Tensor`>, double[] | null> => list<class<`Tensor`> | double | list<class<`matrix`>>>;
type `innerProd` <class<`Tensor`>, class<`Tensor`>> => double | <class<`Tensor`>, class<`Tensor`>> => double;
type `.is_zero_tensor` <class<`Tensor`>> => logical;
type `k_fold` <class<`Tensor`> | class<`matrix`>, double, double[]> => class<`Tensor`>;
type `khatri_rao` <class<`matrix`>, class<`matrix`>> => class<`matrix`>;
type `khatri_rao_list` <list<class<`matrix`>>, logical> => class<`matrix`>;
type `kronecker_list` <list<double[] | class<`matrix`>>> => (class<`array`> | class<`matrix`>);
type `k_unfold` <class<`Tensor`>, double> => class<`Tensor`> | <class<`Tensor`>, double> => class<`Tensor`>;
type `matvec` <class<`Tensor`>> => class<`Tensor`> | <class<`Tensor`>> => class<`Tensor`>;
type `modeMean` <class<`Tensor`>, double, logical> => class<`Tensor`> | <class<`Tensor`>, double, logical> => class<`Tensor`>;
type `modeSum` <class<`Tensor`>, double, logical> => class<`Tensor`> | <class<`Tensor`>, double, logical> => class<`Tensor`>;
type `mpca` <class<`Tensor`>, double[], double, double> => list<class<`Tensor`> | double[] | list<class<`matrix`> | null>>;
type `plot_orl` <double, double> => null;
type `print` <class<`Tensor`>, ...> => double[];
type `pvd` <class<`Tensor`>, double[], double[], double, double> => list<any>;
type `rand_tensor` <double[], logical> => class<`Tensor`>;
type `rs_fold` <class<`Tensor`> | class<`matrix`>, double, double[]> => class<`Tensor`>;
type `rs_unfold` <class<`Tensor`>, double> => class<`Tensor`> | <class<`Tensor`>, double> => class<`Tensor`>;
type `.superdiagonal_tensor` <integer, double, double[]> => class<`Tensor`>;
type `t` <class<`Tensor`>> => class<`Tensor`>;
type `tail` <class<`Tensor`>, ...> => double[];
type `t_mult` <class<`Tensor`>, class<`Tensor`>> => class<`Tensor`>;
type `tperm` <class<`Tensor`>, any, ...> => class<`Tensor`> | <class<`Tensor`>, any, ...> => class<`Tensor`>;
type `t_svd` <class<`Tensor`>> => list<class<`Tensor`>>;
type `t_svd_reconstruct` <list<class<`Tensor`>>> => class<`Tensor`>;
type `ttl` <class<`Tensor`>, list<class<`matrix`>>, double[]> => class<`Tensor`>;
type `ttm` <class<`Tensor`>, class<`matrix`>, double> => class<`Tensor`>;
type `tucker` <class<`Tensor`>, double[], double, double> => list<class<`Tensor`> | double[] | list<class<`matrix`>>>;
type `unfold` <class<`Tensor`>, double[], double[]> => class<`Tensor`> | <class<`Tensor`>, double[], double[]> => class<`Tensor`>;
type `unmatvec` <class<`Tensor`>, double[]> => class<`Tensor`>;
type `vec` <class<`Tensor`>> => double[] | <class<`Tensor`>> => double[];
