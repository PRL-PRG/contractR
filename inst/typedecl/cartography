type `barscale` <double | ???, double, double, character | double[], character> => null;
type `carto.pal.info` < > => character[];
type `choroLayer` <struct<`id`:integer[], `gridarea`:double[], `POP`:double[], `geometry`:list<tuple<tuple<^double[]>>>, `POPDENSG`:double[]> | ???, ???, ???, null, null, character, ? double[], character, ? double, ? character[], ? character, double, character, character, character, double, double, double, character> => null;
type `discLayer` <struct<`id`:character[], `id1`:character[], `id2`:character[], `geometry`:list<tuple<^double[]> | list<^double[]>>>, struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>>, null, character, character, double, double, character, double, double, character, character, character, double, double, double, logical, logical, ???> => struct<`id1`:character[], `id2`:character[], `id`:character[], `MED1`:double[], `MED2`:double[], `geometry`:list<tuple<^double[]> | list<^double[]>>, `disc`:double[]>;
type `display.carto.all` <double> => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bg`:character, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `fin`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mai`:double[], `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `new`:logical, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pin`:double[], `plt`:double[], `ps`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `display.carto.pal` <character> => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bg`:character, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `fin`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mai`:double[], `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `new`:logical, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pin`:double[], `plt`:double[], `ps`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `dotDensityLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>>, ???, ???, null, null, character, double, double, double, double, character, character, character, null, double, character, logical, logical> => struct<`rect`:struct<`w`:double, `h`:double, `left`:double, `top`:double>, `text`:struct<`x`:double, `y`:double>>;
type `filter` <character[]> => logical[];
type `FUN` <tuple<tuple<^double[]>> | struct<> | integer[], double, double, logical, double> => ? tuple<list<^double[]>> | tuple<tuple<^double[]>> | tuple<tuple<tuple<^double[]>, tuple<^double[]>>> | character[] | logical;
type `gradLinkLayer` <struct<`i`:integer[], `j`:integer[], `geometry`:list<^double[]>>, struct<`i`:integer[], `j`:integer[], `fij`:integer[], `sj`:integer[]>, null, null, character, double[], double[], character, character, character, double, double, double, logical, logical, ???, ???, ???, ???> => null;
type `gradLinkTypoLayer` <struct<`i`:integer[], `j`:integer[], `geometry`:list<^double[]>>, struct<`i`:integer[], `j`:integer[], `fij`:integer[], `sj`:integer[]>, ? character[], ? character[], character, double[], double[], character, ? character[], character, double, double, double, character, character, logical, character, character, null> => null;
type `is_overlap` <double, double, double, double, tuple<> | list<double[]> | tuple<double[]>> => logical;
type `labelLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:tuple<tuple<tuple<^double[]>>, tuple<tuple<^double[]>>, tuple<tuple<^double[]>>, tuple<tuple<^double[]>>>>, ???, ???, null, null, character, character, double, logical, logical, logical, character, double, ??? | double> => null;
type `layoutLayer` <character, character, character, logical, character, character, ? character, null, character | double, character, logical, logical, logical, null, logical, character> => null;
type `legendBarsSymbols` <character, character, double, double, character, double, double, double[], double, character, logical, double, character> => null;
type `legendChoro` <character, character, double, double, character[] | double[], character[], double, double, logical, character | symbol, character | symbol, logical, character, character, logical> => null;
type `legendCirclesSymbols` <character | double[], character, double, double, character, double, double, double[], double, ? character, logical, double, character> => null;
type `legendGradLines` <character, character, double, double, double, double[], double[], character, double, logical> => null;
type `legendPropLines` <character, character, double, double, double, double[], double, character, logical, double> => null;
type `legendPropTriangles` <character, character, character, character, double, double, double, double[], double[], double[], double[], character, character, logical, double, character> => null;
type `legendSquaresSymbols` <character, character, double, double, character, double, double, double[], double, character, logical, double, character> => null;
type `legendTypo` <character | double[], character, double, double, character[], character[] | integer[], double, logical, character | symbol, character | symbol, logical, character> => null;
type `north` <character | double[], character, logical, null> => null;
type `propLinkLayer` <struct<`i`:integer[], `j`:integer[], `geometry`:list<^double[]>>, struct<`i`:integer[], `j`:integer[], `fij`:integer[], `sj`:integer[]>, null, null, character, double, character, character, character, double, double, double, logical, logical, ???, ???, ???, ???, ???> => null;
type `propSymbolsChoroLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>>, ???, ???, null, null, character, double, null, character, character, double, character, null, character, ? double, character[], character, double, double> => null;
type `propSymbolsLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>> | ???, ???, ??? | struct<>, ? character, ? character, character, double, null, character, ? character, character, double, character | double[], character | symbol, double, double, double, character, logical> => null;
type `propSymbolsTypoLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>>, ???, ???, null, null, character, double, null, character, character, double, character, character[], character, double, double, character, character, double> => null;
type `propTrianglesLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>, `OCC`:double[]>, ???, ???, null, null, character, character, character, character, double, character, character, double, character, character, double, double, character, logical> => null;
type `shadowtext` <double[], double[], integer[], character, character, double[], double, double> => null;
type `tilesLayer` <logical> => null;
type `typoLayer` <struct<`INSEE_COM`:integer[], `STATUS`:integer[], `LIBGEO`:integer[], `POP`:double[], `MED`:double[], `CHOM`:double[], `ACT`:double[], `geom`:list<tuple<tuple<^double[]>>>>, ???, ???, null, null, character, character[], character, double, character, character, character, double, double, character[], character, logical, logical> => null;
type `wordlayout` <double[], double[], integer[], double, double[], double[], double, double, ???> => ^double[];
