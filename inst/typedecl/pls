type `cvsegments` <double, double | ???, double, double, character[]> => struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[]> | struct<`V1`:double[], `V2`:double[], `V3`:double[], `V4`:double[], `V5`:double[], `V6`:double[], `V7`:double[], `V8`:double[], `V9`:double[], `V10`:double[], `V11`:double[], `V12`:double[], `V13`:double[], `V14`:double[], `V15`:double[], `V16`:double[], `V17`:double[], `V18`:double[], `V19`:double[], `V20`:double[], `V21`:double[], `V22`:double[], `V23`:double[], `V24`:double[], `V25`:double[]>;
type `delete.intercept` <^double[]> => ^double[];
type `filter` <character[]> => logical[];
type `fitFunc` <^double[], ^double[], double, ? ^double[], logical, symbol | language | logical, double, symbol | language | double, logical, null, ???> => struct<`coefficients`:double[], `Xmeans`:double[], `Ymeans`:double[]>;
type `FUN` <^double[]> => double[];
type `mvr` <language, double, ???, symbol | ??? | language, ??? | symbol, ??? | symbol, character, logical, logical, character[], logical, logical, logical, ??? | double> => struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`y`:double[], `X`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`Y`:^double[], `X`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>>;
type `mvrCv` <^double[], ^double[], double, null, null, character, logical, double | list<integer> | symbol, character[] | language, ???, logical, logical, logical> => struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double> | struct<`method`:character, `pred`:double[], `coefficients`:double[], `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double> | struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:list<double[]>, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double> | struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>;
type `::` <language, double | ???, ??? | symbol, symbol | language, ??? | symbol, ???, character, logical, logical, character[], logical, logical, logical, ??? | language | double> => struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `gammas`:double[], `canonical.correlations`:double[], `smallNorm`:double[], `A`:^double[], `trunc.pow`:logical, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`dummy`:^double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `scale`:double[], `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:double[], `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `stdize(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>;
type `cancorr` <^double[], ^double[], null, logical> => struct<`A`:^double[], `r`:double>;
type `cppls` <language, ??? | symbol, ???, character> => struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `gammas`:double[], `canonical.correlations`:double[], `smallNorm`:double[], `A`:^double[], `trunc.pow`:logical, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`dummy`:^double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `gammas`:double[], `canonical.correlations`:double[], `smallNorm`:double[], `A`:^double[], `trunc.pow`:logical, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:list<double[]>, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>>;
type `explvar` <^double[] | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>>> => double[];
type `fitted.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, ???> => double[];
type `jack.test` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:double[], `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>>, double, logical> => struct<`coefficients`:double[], `sd`:double[], `tvalues`:double[], `df`:double, `pvalues`:double[]>;
type `loadingplot.default` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, integer[], logical, character, logical, ???, ???, null, ???, null, ???, character, character, ???, logical, ???, ???> => null;
type `loadings.default` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, ???> => ^double[];
type `lower.panel` <double[], double[], ???> => null;
type `makepredictcall.msc` <^double[], language> => language;
type `makepredictcall.stdized` <^double[], language> => language;
type `model.frame.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>>, ???> => struct<`density`:double[], `NIR`:^double[]>;
type `norm` <^double[]> => double;
type `pcr` <language, character> => struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `scale`:double[], `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:double[], `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>>;
type `plot.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, character[], double | integer[] | ???> => ? ^double[];
type `plot.mvrVal` <struct<`val`:double[], `type`:character, `comps`:double[], `cumulative`:logical, `call`:language>, ???, ???, character, integer[], double, integer[], double, integer[], character, character, character, ???, language, ???> => null;
type `plotFunc` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, integer[] | double, ???, logical | ???, logical | ???, double[] | ???, ??? | logical | character, ??? | character, character | ???, character | ??? | language, ??? | double, ? ???, ???, null, ???, character, character, character, ???> => ? ^double[];
type `pls.options` <character | struct<`plsralg`:character, `mvralg`:character>> => struct<`mvralg`:character, `plsralg`:character, `cpplsalg`:character, `pcralg`:character, `parallel`:null, `w.tol`:double, `X.tol`:double>;
type `plsr` <language, character> => struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `stdize(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>;
type `predict.msc` <^double[], ^double[], ???> => ^double[];
type `predict.stdized` <^double[], ^double[], ???> => ^double[];
type `prednames` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, logical> => character[];
type `predplot.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, double, ???, struct<`octane`:double[], `NIR`:^double[]>, ???, ???, character, character, ???, language, double, ???, ???> => ^double[];
type `predplotXy` <double[], double[], logical, ???, character, character, character, character, character, null, null, integer> => ^double[];
type `print.mvrVal` <struct<`val`:double[], `type`:character, `comps`:double[], `cumulative`:logical, `call`:language>, double, double, ???> => struct<`val`:double[], `type`:character, `comps`:double[], `cumulative`:logical, `call`:language>;
type `randomiz.test` <double[], double[], double> => double;
type `Rcal` <^double[], ^double[], ^double[], null> => struct<`w`:^double[], `cc`:double, `a`:double[]>;
type `residuals.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, ???> => double[];
type `respnames` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>> => character;
type `RMSEP.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `loading.weights`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double[], `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double[], `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`sensory`:^double[], `chemical`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, ??? | character | symbol> => struct<`val`:double[], `type`:character, `comps`:double[], `cumulative`:logical, `call`:language>;
type `scoreplot.default` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, integer[], ???, logical, character, ???, ???, ???> => null;
type `scores.default` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, ???> => ^double[];
type `selectNcomp` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `scale`:double[], `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>>, character, double, double, double, logical, double[] | ???> => double;
type `simpls.fit` <^double[], double[], double, logical, logical, ???> => struct<`coefficients`:double[], `Xmeans`:double[], `Ymeans`:double>;
type `summary.mvr` <struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`density`:double[], `NIR`:^double[]>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `msc(NIR)`:^double[]>, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:struct<`V1`:integer[], `V2`:integer[], `V3`:integer[], `V4`:integer[], `V5`:integer[], `V6`:integer[], `V7`:integer[], `V8`:integer[], `V9`:integer[], `V10`:integer[]>, `ncomp`:double>> | struct<`coefficients`:double[], `scores`:^double[], `loadings`:^double[], `Yscores`:^double[], `Yloadings`:^double[], `projection`:^double[], `Xmeans`:double[], `Ymeans`:double, `fitted.values`:double[], `residuals`:double[], `Xvar`:double[], `Xtotvar`:double, `fit.time`:double, `ncomp`:double, `method`:character, `validation`:struct<`method`:character, `pred`:double[], `coefficients`:null, `gammas`:null, `PRESS0`:double, `PRESS`:^double[], `adj`:^double[], `segments`:list<integer>, `ncomp`:double>, `call`:language, `terms`:language, `model`:struct<`octane`:double[], `NIR`:^double[]>>, character[], double, double, ???> => null;
type `upper.panel` <double[], double[], ???> => null;
