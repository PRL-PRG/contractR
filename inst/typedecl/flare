type `coef.slim` <struct<`beta0`:tuple<double[], double[], double[], double[], double[]>, `beta`:^double[], `intercept`:^double[], `intercept0`:^double[], `Y`:^double[], `X`:^double[], `lambda`:double[], `nlambda`:double, `df`:double[], `method`:character, `q`:double, `ite`:tuple<integer[], integer[], integer[]>, `verbose`:logical, `runtime`:double>, integer[], integer[], ???> => null;
type `filter` <character[]> => logical[];
type `plot.select` <struct<`cov.input`:logical, `lambda`:double[], `nlambda`:double, `ite`:tuple<^double[], ^double[], ^double[]>, `beta`:tuple<null, null, null, null, null>, `path`:tuple<null, null, null, null, null>, `df`:^double[], `sparsity`:double[], `runtime`:double, `icov`:tuple<^double[], ^double[], ^double[], ^double[], ^double[]>, `icov1`:tuple<^double[], ^double[], ^double[], ^double[], ^double[]>, `sigma2`:^double[], `sigma`:^double[], `data`:^double[], `method`:character, `sym`:character, `verbose`:logical, `standardize`:logical, `perturb`:logical, `opt.lambda`:double, `opt.index`:integer, `refit`:null, `opt.sparsity`:double, `opt.icov`:^double[], `criterion`:character>, ???> => null;
type `plot.sim` <struct<`data`:^double[], `sigma`:^double[], `sigmahat`:^double[], `omega`:^double[], `theta`:null, `sparsity`:double, `graph.type`:character, `prob`:null>, ???> => null;
type `plot.slim` <struct<`beta0`:tuple<double[], double[], double[], double[], double[]>, `beta`:^double[], `intercept`:^double[], `intercept0`:^double[], `Y`:^double[], `X`:^double[], `lambda`:double[], `nlambda`:double, `df`:double[], `method`:character, `q`:double, `ite`:tuple<integer[], integer[], integer[]>, `verbose`:logical, `runtime`:double>, ???> => null;
type `plot.sugm` <struct<`cov.input`:logical, `lambda`:double[], `nlambda`:double, `ite`:tuple<^double[], ^double[], ^double[]>, `beta`:tuple<null, null, null, null, null>, `path`:tuple<null, null, null, null, null>, `df`:^double[], `sparsity`:double[], `runtime`:double, `icov`:tuple<^double[], ^double[], ^double[], ^double[], ^double[]>, `icov1`:tuple<^double[], ^double[], ^double[], ^double[], ^double[]>, `sigma2`:^double[], `sigma`:^double[], `data`:^double[], `method`:character, `sym`:character, `verbose`:logical, `standardize`:logical, `perturb`:double>, logical, ???> => null;
type `print.slim` <struct<`beta0`:tuple<double[], double[], double[]>, `beta`:^double[], `intercept`:^double[], `intercept0`:^double[], `Y`:^double[], `X`:^double[], `lambda`:double[], `nlambda`:integer, `df`:double[], `method`:character, `q`:double, `ite`:tuple<integer[], integer[], integer[]>, `verbose`:logical, `runtime`:double> | struct<`beta0`:tuple<double[], double[], double[], double[], double[]>, `beta`:^double[], `intercept`:^double[], `intercept0`:^double[], `Y`:^double[], `X`:^double[], `lambda`:double[], `nlambda`:double, `df`:double[], `method`:character, `q`:character, `ite`:tuple<integer[], integer[], integer[]>, `verbose`:logical, `runtime`:double> | struct<`beta0`:tuple<double[], double[], double[], double[], double[]>, `beta`:^double[], `intercept`:^double[], `intercept0`:^double[], `Y`:^double[], `X`:^double[], `lambda`:double[], `nlambda`:double, `df`:double[], `method`:character, `q`:double, `ite`:tuple<integer[], integer[], integer[]>, `verbose`:logical, `runtime`:double>, ???> => null;
type `sugm.plot` <logical, character, double, null> => null;
