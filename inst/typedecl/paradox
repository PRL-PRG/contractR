type `.subset2` <tuple<> | tuple<environment> | list<environment> | character | environment, ? character[] | tuple<> | double | struct<>, character[] | double | environment, ? tuple<> | character[], double | environment | character[], character[]> => ? character | double | struct<`ratio`:environment, `letters`:environment> | environment | struct<>;
type `$` <? symbol | struct<`folds`:double> | struct<`message_train`:double, `save_tasks`:logical> | struct<`method`:character> | struct<`ratio`:double> | struct<`robust`:logical> | struct<`xval`:integer> | double[] | environment | character[], ? any => any | tuple<> | language | struct<`ratio`:environment, `letters`:environment>, ? character | double | environment, character[]> => ? struct<`method`:character> | struct<`robust`:logical> | struct<`save_tasks`:logical> | struct<`xval`:integer> | struct<`message_train`:character, `message_predict`:character, `warning_train`:character, `warning_predict`:character, `error_train`:character, `error_predict`:character, `segfault_train`:character, `segfault_predict`:character, `predict_missing`:character, `save_tasks`:character[], `x`:character> | struct<`minsplit`:character, `cp`:character, `maxcompete`:character, `maxsurrogate`:character, `maxdepth`:character, `xval`:character> | struct<`robust`:character> | struct<`stratify`:character[], `folds`:character> | struct<`stratify`:character[], `ratio`:character> | environment | character[] | struct<`folds`:double> | struct<`ratio`:double> | double[] | struct<> | struct<`ratio`:environment, `letters`:environment> | struct<`d`:character[], `f`:character[], `i`:character[]>;
type `assert_id` <character> => character;
type `assert_param_set` <environment, character, logical, logical, logical> => environment;
type `copy_slice` <null, struct<`enclosing`:environment, `binding`:environment>, tuple<struct<`old`:environment, `new`:environment>>, logical> => null;
type `filter` <character[]> => logical[];
type `fun` <symbol, character> => logical;
type `FUN` <? character[] | any => any | struct<> | double | environment | tuple<> | struct<`method`:character> | struct<`method`:environment> | struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment> | struct<`xval`:integer> | struct<`letters`:environment> | struct<`ratio`:environment>, character[]> => ? character[] | any => any | struct<> | environment | tuple<> | struct<`method`:character> | struct<`method`:environment> | struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment> | struct<`xval`:integer> | struct<`letters`:environment> | struct<`ratio`:environment> | double[];
type `is_method` <? character[] | any => any | struct<> | double | environment | tuple<> | struct<`method`:character> | struct<`method`:environment> | struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment> | struct<`xval`:integer> | struct<`letters`:environment> | struct<`ratio`:environment>, tuple<environment>> => logical;
type `is_nodefault` <? character | double | environment> => logical;
type `list2env2` <struct<`.check`:any => any, `.qunif`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`method`:character>, `.params`:struct<`method`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`xval`:integer>, `.params`:struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.qunif`:any => any, `.check`:any => any> | struct<`.qunif`:any => any, `.check`:any => any, `clone`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any, `initialize`:any => any> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:character, `tags`:character, `levels`:character[]> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:double, `tags`:character, `lower`:double, `upper`:double> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:double> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:integer> | struct<`clone`:any => any, `initialize`:any => any> | struct<`clone`:any => any, `print`:any => any, `add_dep`:any => any, `assert`:any => any, `test`:any => any, `check`:any => any, `subset`:any => any, `get_values`:any => any, `ids`:any => any, `add`:any => any, `initialize`:any => any> | struct<`custom_check`:any => any, `tags`:character[], `default`:null, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`initialize`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `clone`:any => any, `.check`:any => any, `.qunif`:any => any> | struct<`levels`:character[], `tags`:character, `default`:character, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`tags`:character[], `default`:logical, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`upper`:double, `lower`:double, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`letters`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`ratio`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `levels`:character[]> | struct<`check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `lower`:double, `upper`:double> | struct<`initialize`:any => any, `clone`:any => any> | struct<`levels`:character[], `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`upper`:double, `lower`:double, `tags`:character[], `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any>, environment, language, language, language, logical> => environment;
type `make_first_new_slice` <struct<`enclosing`:environment, `binding`:environment>, logical> => struct<`enclosing`:environment, `binding`:environment>;
type `make_new_slice` <language, environment, environment> => struct<`enclosing`:environment, `binding`:environment>;
type `remap_func_envs` <struct<`.check`:any => any, `.qunif`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`method`:character>, `.params`:struct<`method`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`xval`:integer>, `.params`:struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.qunif`:any => any, `.check`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `initialize`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `clone`:any => any, `.check`:any => any, `.qunif`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:double, `tags`:character, `lower`:double, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:integer> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `lower`:any => any, `upper`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:character, `tags`:character, `levels`:character[]> | struct<`clone`:any => any, `initialize`:any => any> | struct<`extra_values`:any => any, `has_deps`:any => any, `values`:any => any, `has_trafo`:any => any, `trafo`:any => any, `is_categ`:any => any, `is_number`:any => any, `storage_type`:any => any, `tags`:any => any, `default`:any => any, `special_vals`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `class`:any => any, `is_empty`:any => any, `length`:any => any, `set_id`:any => any, `deps`:any => any, `params`:any => any, `clone`:any => any, `print`:any => any, `add_dep`:any => any, `assert`:any => any, `test`:any => any, `check`:any => any, `subset`:any => any, `get_values`:any => any, `ids`:any => any, `add`:any => any, `initialize`:any => any> | struct<`has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `.qunif`:any => any, `.check`:any => any, `clone`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any, `initialize`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character, `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character, `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character[], `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character, `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character, `default`:integer, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:integer, `lower`:integer, `tags`:character, `default`:integer, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `custom_check`:any => any, `tags`:character[], `default`:null, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `tags`:character[], `default`:logical, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `tags`:character, `default`:logical, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `levels`:character[], `tags`:character, `default`:character, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`letters`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`ratio`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `lower`:double, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `lower`:any => any, `upper`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `levels`:character[]> | struct<`initialize`:any => any, `clone`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character[], `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:integer, `lower`:integer, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `levels`:character[], `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any>, tuple<struct<`old`:environment, `new`:environment>>> => struct<`.check`:any => any, `.qunif`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`method`:character>, `.params`:struct<`method`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:struct<`xval`:integer>, `.params`:struct<`minsplit`:environment, `cp`:environment, `maxcompete`:environment, `maxsurrogate`:environment, `maxdepth`:environment, `xval`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.qunif`:any => any, `.check`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `initialize`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `clone`:any => any, `.check`:any => any, `.qunif`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:double, `tags`:character, `lower`:double, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:integer, `tags`:character, `lower`:integer, `upper`:integer> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `lower`:any => any, `upper`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:character, `tags`:character, `levels`:character[]> | struct<`clone`:any => any, `initialize`:any => any> | struct<`extra_values`:any => any, `has_deps`:any => any, `values`:any => any, `has_trafo`:any => any, `trafo`:any => any, `is_categ`:any => any, `is_number`:any => any, `storage_type`:any => any, `tags`:any => any, `default`:any => any, `special_vals`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `class`:any => any, `is_empty`:any => any, `length`:any => any, `set_id`:any => any, `deps`:any => any, `params`:any => any, `clone`:any => any, `print`:any => any, `add_dep`:any => any, `assert`:any => any, `test`:any => any, `check`:any => any, `subset`:any => any, `get_values`:any => any, `ids`:any => any, `add`:any => any, `initialize`:any => any> | struct<`has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `.qunif`:any => any, `.check`:any => any, `clone`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any, `initialize`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character, `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character, `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character[], `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character, `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:integer, `tags`:character, `default`:integer, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:integer, `lower`:integer, `tags`:character, `default`:integer, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `custom_check`:any => any, `tags`:character[], `default`:null, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `tags`:character[], `default`:logical, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `tags`:character, `default`:logical, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `levels`:character[], `tags`:character, `default`:character, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`letters`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`.deps`:struct<`id`:character[], `on`:character[], `cond`:tuple<>>, `.values`:tuple<>, `.params`:struct<`ratio`:environment>, `.trafo`:null, `.set_id`:character, `deep_clone`:any => any, `get_member_with_idnames`:any => any> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `levels`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `lower`:double, `upper`:double> | struct<`class`:any => any, `is_number`:any => any, `is_categ`:any => any, `has_default`:any => any, `lower`:any => any, `upper`:any => any, `nlevels`:any => any, `is_bounded`:any => any, `storage_type`:any => any, `check`:any => any, `assert`:any => any, `test`:any => any, `rep`:any => any, `print`:any => any, `qunif`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `special_vals`:tuple<>, `default`:environment, `tags`:character[], `levels`:character[]> | struct<`initialize`:any => any, `clone`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:double, `lower`:double, `tags`:character[], `default`:double, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `levels`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `upper`:integer, `lower`:integer, `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any> | struct<`storage_type`:any => any, `is_bounded`:any => any, `nlevels`:any => any, `upper`:any => any, `lower`:any => any, `has_default`:any => any, `is_categ`:any => any, `is_number`:any => any, `class`:any => any, `levels`:character[], `tags`:character[], `default`:environment, `special_vals`:tuple<>, `id`:character, `clone`:any => any, `initialize`:any => any, `qunif`:any => any, `print`:any => any, `rep`:any => any, `test`:any => any, `assert`:any => any, `check`:any => any>;
type `assert_param` <environment, character, logical, logical> => environment;
type `generate_design_grid` <environment, double, null> => environment;
type `generate_design_lhs` <environment, double, null> => environment;
type `generate_design_random` <environment, double> => environment;
