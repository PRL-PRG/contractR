type `.f` <environment, environment> => struct<`frame`:struct<`var`:integer[], `n`:integer[], `wt`:double[], `dev`:double[], `yval`:double[], `complexity`:double[], `ncompete`:integer[], `nsurrogate`:integer[], `yval2`:^double[]>, `where`:integer[], `call`:language, `terms`:language, `cptable`:^double[], `method`:character, `parms`:struct<`prior`:double[], `loss`:^double[], `split`:double>, `control`:struct<`minsplit`:integer, `minbucket`:double, `cp`:double, `maxcompete`:integer, `maxsurrogate`:integer, `usesurrogate`:integer, `surrogatestyle`:integer, `maxdepth`:integer, `xval`:integer>, `functions`:struct<`summary`:any => any, `print`:any => any, `text`:any => any>, `numresp`:integer, `splits`:^double[], `variable.importance`:double[], `y`:integer[], `ordered`:logical[]> | struct<`frame`:struct<`var`:integer[], `n`:integer[], `wt`:double[], `dev`:double[], `yval`:double[], `complexity`:double[], `ncompete`:integer[], `nsurrogate`:integer[], `yval2`:^double[]>, `where`:integer[], `call`:language, `terms`:language, `cptable`:^double[], `method`:character, `parms`:struct<`prior`:double[], `loss`:^double[], `split`:double>, `control`:struct<`minsplit`:integer, `minbucket`:double, `cp`:double, `maxcompete`:integer, `maxsurrogate`:integer, `usesurrogate`:integer, `surrogatestyle`:integer, `maxdepth`:integer, `xval`:integer>, `functions`:struct<`summary`:any => any, `print`:any => any, `text`:any => any>, `numresp`:integer, `splits`:^double[], `csplit`:^integer[], `variable.importance`:double[], `y`:integer[], `ordered`:logical[]> | struct<`location`:double, `dispersion`:double, `features`:character[]> | struct<`response`:character, `task_train`:environment> | struct<`tab`:integer[], `features`:character[]>;
type `.subset2` <? character | struct<> | environment | ^double[], ? character[] | integer[] | struct<> | environment, double[] | character | struct<>, ? double[] | character[], ? ^double[]> => ? character[] | struct<> | ^double[];
type `$` <? tuple<> | environment | any => any | character[] | double[] | struct<> | struct<`b1`:environment, `b2`:environment> | tuple<environment, environment>, ? character[] | symbol | double[] | environment | tuple<integer[], integer[]>, ? environment | character[] | tuple<integer[], integer[]> | double[] | struct<> | symbol, ? character[] | logical | environment, ? character[], character[], character[], character[], character[], character[]> => struct<`hair`:logical, `feathers`:logical, `eggs`:logical, `milk`:logical, `airborne`:logical, `aquatic`:logical, `predator`:logical, `toothed`:logical, `backbone`:logical, `breathes`:logical, `venomous`:logical, `fins`:logical, `legs`:integer, `tail`:logical, `domestic`:logical, `catsize`:logical, `type`:integer, `..row_id`:character> | double[] | environment | tuple<> | struct<`Class`:character[]> | struct<`classes`:character[]> | struct<`diabetes`:character[]> | struct<`Species`:character[]> | struct<`status`:character[], `credit_history`:character[], `purpose`:character[], `savings`:character[], `employment_duration`:character[], `personal_status_sex`:character[], `other_debtors`:character[], `property`:character[], `other_installment_plans`:character[], `housing`:character[], `job`:character[], `telephone`:character[], `foreign_worker`:character[], `credit_risk`:character[]> | struct<`town`:character[], `chas`:character[]> | struct<`type`:character[]> | struct<`y`:character[]> | struct<`train`:tuple<integer[], integer[]>, `row_ids`:integer[]> | struct<`train`:list<integer[]>, `row_ids`:integer[]> | struct<`location`:double, `dispersion`:double, `features`:character[]> | struct<`tab`:integer[], `features`:character[]> | struct<`train`:integer[], `test`:integer[]> | character[] | struct<`row_ids`:integer[], `M`:^integer[]> | language | struct<`frame`:struct<`var`:integer[], `n`:integer[], `wt`:double[], `dev`:double[], `yval`:double[], `complexity`:double[], `ncompete`:integer[], `nsurrogate`:integer[], `yval2`:^double[]>, `where`:integer[], `call`:language, `terms`:language, `cptable`:^double[], `method`:character, `parms`:struct<`prior`:double[], `loss`:^double[], `split`:double>, `control`:struct<`minsplit`:integer, `minbucket`:double, `cp`:double, `maxcompete`:integer, `maxsurrogate`:integer, `usesurrogate`:integer, `surrogatestyle`:integer, `maxdepth`:integer, `xval`:integer>, `functions`:struct<`summary`:any => any, `print`:any => any, `text`:any => any>, `numresp`:integer, `splits`:^double[], `variable.importance`:double[], `y`:integer[], `ordered`:logical[]> | struct<`frame`:struct<`var`:integer[], `n`:integer[], `wt`:double[], `dev`:double[], `yval`:double[], `complexity`:double[], `ncompete`:integer[], `nsurrogate`:integer[], `yval2`:^double[]>, `where`:integer[], `call`:language, `terms`:language, `cptable`:^double[], `method`:character, `parms`:struct<`prior`:double[], `loss`:^double[], `split`:double>, `control`:struct<`minsplit`:integer, `minbucket`:double, `cp`:double, `maxcompete`:integer, `maxsurrogate`:integer, `usesurrogate`:integer, `surrogatestyle`:integer, `maxdepth`:integer, `xval`:integer>, `functions`:struct<`summary`:any => any, `print`:any => any, `text`:any => any>, `numresp`:integer, `splits`:^double[], `csplit`:^integer[], `variable.importance`:double[], `y`:integer[], `ordered`:logical[]> | struct<`response`:character, `task_train`:environment> | tuple<environment, environment, environment> | list<environment>;
type `append_log` <? struct<`stage`:integer[], `class`:integer[], `msg`:character[]>, character, language, character[]> => struct<`stage`:integer[], `class`:integer[], `msg`:character[]>;
type `as_benchmark_result.ResampleResult` <environment, ???> => environment;
type `as_data_backend.data.frame` <struct<`important1`:double[], `important2`:double[], `important3`:double[], `important4`:double[], `important5`:double[], `unimportant1`:double[], `unimportant2`:double[], `unimportant3`:double[], `unimportant4`:double[], `unimportant5`:double[], `y`:double[]>, null, ???> => environment;
type `as_data_backend.Matrix` <???> => environment;
type `as_learner.Learner` <environment, logical> => environment;
type `as_learners.list` <tuple<environment, environment>, logical> => tuple<environment, environment>;
type `as_measure.Measure` <environment, null, logical> => environment;
type `as_measures.list` <tuple<> | tuple<environment, environment>, language, logical> => tuple<> | tuple<environment, environment>;
type `as_measures.Measure` <environment, ? language, logical> => tuple<environment>;
type `as_measures.NULL` <null, character, logical> => struct<`classif.ce`:environment>;
type `as_resampling.Resampling` <environment, logical> => environment;
type `as_resamplings.list` <tuple<environment, environment>, logical> => tuple<environment, environment>;
type `as_resamplings.Resampling` <environment, logical> => tuple<environment>;
type `as_task.Task` <environment, logical> => environment;
type `as_tasks.list` <tuple<environment, environment>, logical> => tuple<environment, environment>;
type `as.data.table.BenchmarkResult` <environment, language | ???> => struct<`uhash`:character[], `task`:list<environment>, `learner`:list<environment>, `resampling`:list<environment>, `iteration`:integer[], `prediction`:list<struct<`test`:environment>>>;
type `as.data.table.DictionaryLearner` <environment, ???> => struct<`key`:character[], `feature_types`:tuple<character[], character[], character[], character[], character[]>, `packages`:tuple<character[], character[], character, character, character>, `properties`:tuple<character[], character[], character[], character[], character[]>, `predict_types`:tuple<character[], character[], character[], character[], character>>;
type `as.data.table.DictionaryMeasure` <environment, ???> => struct<`key`:character[], `task_type`:^character[], `packages`:list<character[]>, `predict_type`:character[], `task_properties`:list<character[]>>;
type `as.data.table.DictionaryResampling` <environment, ???> => struct<`key`:character[], `params`:list<character[]>, `iters`:integer[]>;
type `as.data.table.DictionaryTask` <environment, ???> => struct<`key`:character[], `task_type`:character[], `nrow`:integer[], `ncol`:integer[], `lgl`:integer[], `int`:integer[], `dbl`:integer[], `chr`:integer[], `fct`:integer[], `ord`:integer[], `pxc`:integer[]>;
type `as.data.table.PredictionClassif` <environment, ???> => struct<`row_id`:integer[], `truth`:integer[], `response`:integer[]>;
type `as.data.table.PredictionRegr` <environment, ???> => struct<`row_id`:integer[], `truth`:double[], `response`:double[], `se`:double[]>;
type `assert_backend` <environment, language> => environment;
type `assert_benchmark_result` <environment, language> => environment;
type `assert_cost_matrix` <^double[], ? environment> => ^double[];
type `assert_learner` <environment, environment, character, language> => environment;
type `assert_learners` <tuple<environment, environment>, null, character[], language> => tuple<environment, environment>;
type `assert_measures` <tuple<> | tuple<environment> | struct<`classif.ce`:environment>, ? language | environment, ? language | environment, language> => tuple<> | tuple<environment> | struct<`classif.ce`:environment>;
type `assert_prediction` <environment, language> => environment;
type `assert_range` <double[], language> => double[];
type `assert_resampling` <environment, null, language> => environment;
type `assert_resamplings` <tuple<environment>, logical, language> => tuple<environment>;
type `assert_row_ids` <integer[], ? character, language> => integer[];
type `assert_set` <character[], logical, language> => character[];
type `assert_task` <environment, ? character, ? character[], null, language> => environment;
type `assert_tasks` <tuple<environment, environment>, null, null, null, language> => tuple<environment, environment>;
type `benchmark` <struct<`task`:tuple<environment, environment>, `learner`:tuple<environment, environment>, `resampling`:tuple<environment, environment>>, logical> => environment;
type `benchmark_grid` <tuple<environment, environment>, tuple<environment, environment>, environment | tuple<environment, environment>> => struct<`task`:tuple<environment, environment, environment, environment>, `learner`:tuple<environment, environment, environment, environment>, `resampling`:tuple<environment, environment, environment, environment>>;
type `c.PredictionClassif` <environment, logical> => environment;
type `col_info.data.table` <struct<`foo`:integer[], `..row_id`:integer[]>, character[], ???> => struct<`id`:character[], `type`:character[], `levels`:tuple<null, null>>;
type `col_info.DataBackend` <environment, ???> => struct<`id`:character[], `type`:character[], `levels`:tuple<null, character[], null, null>>;
type `confusion_measures` <^integer[], ? character> => double[];
type `copy_slice` <struct<`binding`:environment, `enclosing`:environment>, struct<`enclosing`:environment, `binding`:environment>, tuple<struct<`old`:environment, `new`:environment>>, logical> => null;
type `default_measures` <character> => struct<`classif.ce`:environment> | struct<`regr.mse`:environment>;
type `div` <integer, integer> => double;
type `filter` <character[]> => logical[];
type `fun` <symbol, character> => null;
type `FUN` <? environment | character[] | any => any | struct<> | struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]> | struct<`train`:integer[], `test`:integer[]> | struct<`use`:integer[], `validation`:integer[]> | struct<`learner_state`:struct<`log`:struct<`stage`:integer[], `class`:integer[], `msg`:character[]>, `train_time`:double, `predict_time`:double>, `prediction`:struct<`test`:environment>> | double[] | struct<`test`:environment>, ? environment | ??? | character | logical, ? character[] | environment | symbol, ? symbol | environment, ? symbol, logical> => ? struct<`key`:character, `params`:tuple<character[]>, `iters`:integer> | environment | character[] | any => any | struct<> | struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]> | struct<`train`:integer[], `test`:integer[]> | struct<`use`:integer[], `validation`:integer[]> | struct<`key`:character, `feature_types`:tuple<character[]>, `packages`:tuple<character[]>, `properties`:tuple<character[]>, `predict_types`:tuple<character[]>> | struct<`learner`:tuple<environment>, `prediction`:tuple<struct<`test`:environment>>> | struct<`key`:character, `task_type`:character, `packages`:tuple<character[]>, `predict_type`:character, `task_properties`:tuple<character[]>> | struct<`key`:character, `task_type`:null, `packages`:tuple<character[]>, `predict_type`:character, `task_properties`:tuple<character[]>> | struct<`key`:character, `task_type`:character, `nrow`:integer, `ncol`:integer, `lgl`:integer, `int`:integer, `dbl`:integer, `chr`:integer, `fct`:integer, `ord`:integer, `pxc`:integer> | double | tuple<> | struct<`classif.ce`:double> | struct<`learner_state`:struct<`log`:struct<`stage`:integer[], `class`:integer[], `msg`:character[]>, `train_time`:double, `predict_time`:double>, `prediction`:struct<`test`:environment>> | integer[] | struct<`method`:character> | struct<`xval`:integer> | struct<`msg`:character[]>;
type `getter` <integer | symbol> => integer[];
type `hash` <character[] | tuple<character[], character, struct<`folds`:double>, struct<`row_id`:integer[], `fold`:integer[]>> | tuple<character[], character, struct<`ratio`:double>, struct<`train`:integer[], `test`:integer[]>>> => character;
type `hashes` <tuple<environment, environment> | list<environment>> => character[];
type `ids` <tuple<> | list<environment> | tuple<environment> | struct<`classif.ce`:environment>> => character[];
type `is_method` <? character[] | struct<> | environment | integer | struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]> | struct<`train`:integer[], `test`:integer[]> | struct<`use`:integer[], `validation`:integer[]>, tuple<environment, environment>> => logical;
type `learner_print` <environment> => null;
type `learner_train` <environment, environment, ? integer[]> => environment;
type `list2env2` <struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `.groups`:null> | struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `deep_clone`:any => any, `.groups`:null> | struct<`.get_set`:any => any, `clone`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`.groups`:null, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`.groups`:null, `deep_clone`:any => any, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`col_info`:struct<`id`:character[], `type`:character[], `levels`:list<? character[]>>, `col_roles`:struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]>, `row_roles`:struct<`use`:integer[], `validation`:integer[]>, `properties`:character, `backend`:environment, `task_type`:character, `id`:character, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any> | struct<`deep_clone`:any => any> | struct<`deep_clone`:any => any, `.encapsulate`:character[], `.predict_type`:character, `.param_set`:environment> | struct<`deep_clone`:any => any, `clone`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`deep_clone`:any => any, `clone`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`deep_clone`:any => any, `clone`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`deep_clone`:any => any, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any> | struct<`duplicated_ids`:logical, `task_hash`:character, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`duplicated_ids`:logical, `task_hash`:null, `instance`:null, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`fallback`:null, `predict_sets`:character, `packages`:character[], `data_formats`:character, `properties`:character[], `feature_types`:character[], `predict_types`:character[], `task_type`:character, `state`:null, `id`:character, `clone`:any => any, `selected_features`:any => any, `importance`:any => any, `predict_internal`:any => any, `train_internal`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `task_hash`:character, `duplicated_ids`:logical> | struct<`format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`train`:integer[], `test`:integer[]>, `task_hash`:character, `duplicated_ids`:logical, `iters`:integer> | struct<`format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `clone`:any => any, `deep_clone`:any => any> | struct<`format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character[], `predict_sets`:character, `fallback`:null> | struct<`format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character, `predict_sets`:character, `fallback`:null> | struct<`initialize`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `clone`:any => any, `.get_set`:any => any> | struct<`initialize`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `clone`:any => any, `deep_clone`:any => any>, environment, language, language, language, logical> => environment;
type `lookup` <character> => logical;
type `lrn` <character, ??? | character | double> => environment;
type `make_first_new_slice` <struct<`enclosing`:environment, `binding`:environment, `private`:environment>, logical> => struct<`enclosing`:environment, `binding`:environment, `private`:environment>;
type `make_new_slice` <language, environment, environment> => struct<`enclosing`:environment, `binding`:environment>;
type `measure_score` <environment, struct<`test`:environment> | environment, symbol | environment, symbol, language | symbol> => double;
type `measure_score_data` <environment, struct<`task`:tuple<environment, environment, environment>, `learner`:tuple<environment, environment, environment>, `resampling`:tuple<environment, environment, environment>, `iteration`:integer[], `prediction`:tuple<struct<`test`:environment>, struct<`test`:environment>, struct<`test`:environment>>>> => double[];
type `msr` <character, ??? | character> => environment;
type `remap_func_envs` <struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `.groups`:null> | struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `deep_clone`:any => any, `.groups`:null> | struct<`.groups`:null, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`.groups`:null, `deep_clone`:any => any, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`deep_clone`:any => any> | struct<`deep_clone`:any => any, `.encapsulate`:character[], `.predict_type`:character, `.param_set`:environment> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `deep_clone`:any => any, `clone`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `deep_clone`:any => any, `clone`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `fallback`:null, `predict_sets`:character, `packages`:character[], `data_formats`:character, `properties`:character[], `feature_types`:character[], `predict_types`:character[], `task_type`:character, `state`:null, `id`:character, `clone`:any => any, `selected_features`:any => any, `importance`:any => any, `predict_internal`:any => any, `train_internal`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `fallback`:null, `predict_sets`:character, `packages`:character, `data_formats`:character, `properties`:character[], `feature_types`:character[], `predict_types`:character[], `task_type`:character, `state`:null, `id`:character, `clone`:any => any, `selected_features`:any => any, `importance`:any => any, `predict_internal`:any => any, `train_internal`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`hash`:any => any, `is_instantiated`:any => any, `.get_set`:any => any, `clone`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`hash`:any => any, `is_instantiated`:any => any, `iters`:integer, `duplicated_ids`:logical, `task_hash`:null, `instance`:null, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`is_instantiated`:any => any, `hash`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`train`:integer[], `test`:integer[]>, `task_hash`:character, `duplicated_ids`:logical, `iters`:integer> | struct<`is_instantiated`:any => any, `hash`:any => any, `initialize`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `clone`:any => any, `.get_set`:any => any> | struct<`is_instantiated`:any => any, `hash`:any => any, `iters`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `task_hash`:character, `duplicated_ids`:logical> | struct<`iters`:any => any, `hash`:any => any, `is_instantiated`:any => any, `duplicated_ids`:logical, `task_hash`:character, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`iters`:any => any, `hash`:any => any, `is_instantiated`:any => any, `duplicated_ids`:logical, `task_hash`:null, `instance`:null, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `clone`:any => any, `deep_clone`:any => any> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character[], `predict_sets`:character, `fallback`:null> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character, `predict_sets`:character, `fallback`:null> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `initialize`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `clone`:any => any, `deep_clone`:any => any> | struct<`negative`:any => any, `positive`:any => any, `class_names`:any => any, `weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `col_info`:struct<`id`:character[], `type`:character[], `levels`:list<? character[]>>, `col_roles`:struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]>, `row_roles`:struct<`use`:integer[], `validation`:integer[]>, `properties`:character, `backend`:environment, `task_type`:character, `id`:character, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any> | struct<`weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `deep_clone`:any => any, `clone`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `deep_clone`:any => any, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any>, tuple<struct<`old`:environment, `new`:environment>>> => struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `.groups`:null> | struct<`.get_set`:any => any, `.sample`:any => any, `.get_train`:any => any, `.get_test`:any => any, `.combine`:any => any, `deep_clone`:any => any, `.groups`:null> | struct<`.groups`:null, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`.groups`:null, `deep_clone`:any => any, `.combine`:any => any, `.get_test`:any => any, `.get_train`:any => any, `.sample`:any => any, `.get_set`:any => any> | struct<`deep_clone`:any => any> | struct<`deep_clone`:any => any, `.encapsulate`:character[], `.predict_type`:character, `.param_set`:environment> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `deep_clone`:any => any, `clone`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `deep_clone`:any => any, `clone`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `fallback`:null, `predict_sets`:character, `packages`:character[], `data_formats`:character, `properties`:character[], `feature_types`:character[], `predict_types`:character[], `task_type`:character, `state`:null, `id`:character, `clone`:any => any, `selected_features`:any => any, `importance`:any => any, `predict_internal`:any => any, `train_internal`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`encapsulate`:any => any, `param_set`:any => any, `predict_type`:any => any, `hash`:any => any, `errors`:any => any, `warnings`:any => any, `log`:any => any, `timings`:any => any, `model`:any => any, `fallback`:null, `predict_sets`:character, `packages`:character, `data_formats`:character, `properties`:character[], `feature_types`:character[], `predict_types`:character[], `task_type`:character, `state`:null, `id`:character, `clone`:any => any, `selected_features`:any => any, `importance`:any => any, `predict_internal`:any => any, `train_internal`:any => any, `initialize`:any => any, `predict_newdata`:any => any, `predict`:any => any, `train`:any => any, `print`:any => any, `format`:any => any> | struct<`hash`:any => any, `is_instantiated`:any => any, `.get_set`:any => any, `clone`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`hash`:any => any, `is_instantiated`:any => any, `iters`:integer, `duplicated_ids`:logical, `task_hash`:null, `instance`:null, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`is_instantiated`:any => any, `hash`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`train`:integer[], `test`:integer[]>, `task_hash`:character, `duplicated_ids`:logical, `iters`:integer> | struct<`is_instantiated`:any => any, `hash`:any => any, `initialize`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `clone`:any => any, `.get_set`:any => any> | struct<`is_instantiated`:any => any, `hash`:any => any, `iters`:any => any, `format`:any => any, `print`:any => any, `instantiate`:any => any, `train_set`:any => any, `test_set`:any => any, `initialize`:any => any, `clone`:any => any, `id`:character, `param_set`:environment, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `task_hash`:character, `duplicated_ids`:logical> | struct<`iters`:any => any, `hash`:any => any, `is_instantiated`:any => any, `duplicated_ids`:logical, `task_hash`:character, `instance`:struct<`row_id`:integer[], `fold`:integer[]>, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`iters`:any => any, `hash`:any => any, `is_instantiated`:any => any, `duplicated_ids`:logical, `task_hash`:null, `instance`:null, `param_set`:environment, `id`:character, `clone`:any => any, `initialize`:any => any, `test_set`:any => any, `train_set`:any => any, `instantiate`:any => any, `print`:any => any, `format`:any => any> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `clone`:any => any, `deep_clone`:any => any> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character[], `predict_sets`:character, `fallback`:null> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `initialize`:any => any, `train_internal`:any => any, `predict_internal`:any => any, `importance`:any => any, `selected_features`:any => any, `clone`:any => any, `id`:character, `state`:null, `task_type`:character, `predict_types`:character[], `feature_types`:character[], `properties`:character[], `data_formats`:character, `packages`:character, `predict_sets`:character, `fallback`:null> | struct<`model`:any => any, `timings`:any => any, `log`:any => any, `warnings`:any => any, `errors`:any => any, `hash`:any => any, `predict_type`:any => any, `param_set`:any => any, `encapsulate`:any => any, `initialize`:any => any, `format`:any => any, `print`:any => any, `train`:any => any, `predict`:any => any, `predict_newdata`:any => any, `clone`:any => any, `deep_clone`:any => any> | struct<`negative`:any => any, `positive`:any => any, `class_names`:any => any, `weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `col_info`:struct<`id`:character[], `type`:character[], `levels`:list<? character[]>>, `col_roles`:struct<`feature`:character[], `target`:character, `label`:character[], `order`:character[], `groups`:character[], `weights`:character[]>, `row_roles`:struct<`use`:integer[], `validation`:integer[]>, `properties`:character, `backend`:environment, `task_type`:character, `id`:character, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any> | struct<`weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `deep_clone`:any => any, `clone`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any, `initialize`:any => any> | struct<`weights`:any => any, `groups`:any => any, `data_formats`:any => any, `feature_types`:any => any, `ncol`:any => any, `nrow`:any => any, `target_names`:any => any, `feature_names`:any => any, `row_ids`:any => any, `hash`:any => any, `deep_clone`:any => any, `clone`:any => any, `truth`:any => any, `initialize`:any => any, `droplevels`:any => any, `set_col_role`:any => any, `set_row_role`:any => any, `rename`:any => any, `cbind`:any => any, `rbind`:any => any, `select`:any => any, `filter`:any => any, `missings`:any => any, `levels`:any => any, `head`:any => any, `formula`:any => any, `data`:any => any, `print`:any => any, `format`:any => any>;
type `resample` <environment, environment, environment, logical> => environment;
type `rsmp` <character, double | ???> => environment;
type `task_cbind` <environment, struct<`foo`:integer[]>> => environment;
type `task_set_col_role` <environment, character, character[], logical> => null;
type `tgen` <character, ???> => environment;
type `translate_types` <character[]> => integer[];
type `tsk` <character, character | ???> => environment;
type `ujoin` <struct<`id`:character[], `type`:character[], `levels`:list<? character[]>>, struct<`id`:character[], `type`:character[], `levels`:tuple<null, null>>, character> => struct<`id`:character[], `type`:character[], `levels`:list<? character[]>>;
