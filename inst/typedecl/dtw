type `dtwPlot` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]>, character, character> => null;
type `dtwPlotAlignment` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]> | struct<`stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[]>, character, character, character, character | ???> => null;
type `dtwPlotDensity` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]>, logical, character, character, character | ???> => null;
type `dtwPlotThreeWay` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]>, null, null, character, character, ? integer[], double, double, double, character, character, character, ???> => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bg`:character, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `fin`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mai`:double[], `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `new`:logical, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pin`:double[], `plt`:double[], `ps`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `dtwPlotTwoWay` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]>, null, null, double, character, double, ? double | integer[], character, double, character, character, ??? | double | character> => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bg`:character, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `fin`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mai`:double[], `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `new`:logical, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pin`:double[], `plt`:double[], `ps`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `dtwWindow.plot` <any => any, double, double, double | character> => null;
type `filter` <character[]> => logical[];
type `fun` <symbol, symbol> => character;
type `plot.dtw` <struct<`costMatrix`:^double[], `directionMatrix`:^integer[], `stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[], `localCostMatrix`:^double[], `query`:^double[], `reference`:^double[]> | struct<`stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[]>, character, character | ??? | double> => ? struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bg`:character, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `fin`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mai`:double[], `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `new`:logical, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pin`:double[], `plt`:double[], `ps`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `plot.stepPattern` <^double[], ??? | character> => null;
type `print.stepPattern` <^double[], ???> => null;
type `warpArea` <struct<`stepPattern`:^double[], `N`:integer, `M`:integer, `call`:language, `openEnd`:logical, `openBegin`:logical, `windowFunction`:any => any, `jmin`:integer, `distance`:double, `normalizedDistance`:double, `index1`:double[], `index2`:double[], `index1s`:double[], `index2s`:double[], `stepsTaken`:integer[]>> => double;
