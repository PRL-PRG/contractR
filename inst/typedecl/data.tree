type `.parentSeparator` <environment> => character;
type `.Prune` <environment, any => any, logical> => null;
type `.subset2` <character | integer, character[] | logical, ??? | double[]> => environment;
type `$` <character[] | double[] | any => any | environment, character[] | ??? | logical, ? character[] | ???, ? any => any, ? any => any, logical | any => any, logical, character[] | logical> => ? environment | character[] | ^double[] | struct<`1`:struct<`arrowhead`:character, `label`:any => any, `fontname`:character, `penwidth`:any => any, `color`:any => any>, `2`:null, `3`:null, `4`:null, `5`:null, `6`:null, `7`:null, `8`:null> | struct<`1`:struct<`label`:any => any, `tooltip`:any => any, `fontname`:character>, `2`:null, `3`:struct<`shape`:character, `color`:character, `fillcolor`:character, `style`:character, `penwidth`:double>, `4`:struct<`shape`:character, `color`:character, `fillcolor`:character, `style`:character, `penwidth`:double>, `5`:struct<`shape`:character, `color`:character, `fillcolor`:character, `style`:character, `penwidth`:double>, `6`:null, `7`:struct<`shape`:character, `color`:character, `fillcolor`:character, `style`:character, `penwidth`:double>, `8`:struct<`shape`:character, `color`:character, `fillcolor`:character, `style`:character, `penwidth`:double>> | struct<`Acme Inc.`:struct<`arrowhead`:character, `color`:character, `penwidth`:double>, `Accounting`:null, `New Software`:null, `New Accounting Standards`:null, `Research`:null, `New Product Line`:null, `New Labs`:struct<`color`:character, `label`:character, `penwidth`:double, `fontcolor`:character>, `IT`:null, `Outsource`:null, `Go agile`:null, `Switch to R`:null> | struct<`Acme Inc.`:struct<`label`:any => any>, `Accounting`:struct<`fillcolor`:character, `fontcolor`:character, `tooltip`:character>, `New Software`:struct<`shape`:character>, `New Accounting Standards`:struct<`shape`:character>, `Research`:null, `New Product Line`:struct<`shape`:character>, `New Labs`:struct<`shape`:character>, `IT`:struct<`fillcolor`:character, `penwidth`:character>, `Outsource`:struct<`shape`:character>, `Go agile`:struct<`shape`:character>, `Switch to R`:struct<`shape`:character>> | struct<`Acme Inc.`:struct<`style`:character, `shape`:character, `fillcolor`:character, `fontname`:character, `tooltip`:any => any>, `Accounting`:struct<`fillcolor`:character, `fontcolor`:character, `tooltip`:character>, `New Software`:struct<`shape`:character>, `New Accounting Standards`:struct<`shape`:character>, `Research`:null, `New Product Line`:struct<`shape`:character>, `New Labs`:struct<`shape`:character>, `IT`:struct<`fillcolor`:character, `penwidth`:character>, `Outsource`:struct<`shape`:character>, `Go agile`:struct<`shape`:character>, `Switch to R`:struct<`shape`:character>> | list<environment>;
type `AddChildren` <environment> => null;
type `AreNamesUnique` <environment> => logical;
type `as.Node.BinaryTree` <???> => environment;
type `assign_func_envs` <struct<`IT`:environment, `Research`:environment, `Accounting`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Accounting Standards`:environment, `New Software`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Labs`:environment, `New Product Line`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:null, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`New Product Line`:environment, `New Labs`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`New Software`:environment, `New Accounting Standards`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`Outsource`:environment, `Go agile`:environment, `Switch to R`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`Accounting`:environment, `Research`:environment, `IT`:environment>, `p_name`:character> | struct<`p`:double, `cost`:double, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`Switch to R`:environment, `Go agile`:environment, `Outsource`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any>, environment> => struct<`IT`:environment, `Research`:environment, `Accounting`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Accounting Standards`:environment, `New Software`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Labs`:environment, `New Product Line`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:null, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`New Product Line`:environment, `New Labs`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`New Software`:environment, `New Accounting Standards`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`Outsource`:environment, `Go agile`:environment, `Switch to R`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`Accounting`:environment, `Research`:environment, `IT`:environment>, `p_name`:character> | struct<`p`:double, `cost`:double, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`Switch to R`:environment, `Go agile`:environment, `Outsource`:environment, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any>;
type `attribute` <environment, symbol> => ? struct<`fillcolor`:character, `fontcolor`:character, `tooltip`:character> | struct<`fillcolor`:character, `penwidth`:character> | struct<`label`:any => any> | struct<`label`:any => any, `tooltip`:any => any, `fontname`:character> | struct<`shape`:character> | character | double | struct<`arrowhead`:character, `color`:character, `penwidth`:double> | struct<`arrowhead`:character, `label`:any => any, `fontname`:character, `penwidth`:any => any, `color`:any => any> | struct<`color`:character, `label`:character, `penwidth`:double, `fontcolor`:character>;
type `Clone` <environment, ? any => any, logical> => environment;
type `copy_slice` <struct<`enclosing`:environment, `binding`:environment, `private`:environment>, struct<`enclosing`:environment, `binding`:environment, `private`:environment>, tuple<struct<`old`:environment, `new`:environment>>, logical> => null;
type `Do` <list<environment> | struct<`2.3`:environment, `2.4`:environment, `5`:environment, `6.7`:environment, `6.8`:environment> | struct<`Accounting.New Software`:environment, `Accounting.New Accounting Standards`:environment, `Research.New Product Line`:environment, `Research.New Labs`:environment, `IT.Outsource`:environment, `IT.Go agile`:environment, `IT.Switch to R`:environment>, any => any, ???> => list<environment> | struct<`2.3`:environment, `2.4`:environment, `5`:environment, `6.7`:environment, `6.8`:environment> | struct<`Accounting.New Software`:environment, `Accounting.New Accounting Standards`:environment, `Research.New Product Line`:environment, `Research.New Labs`:environment, `IT.Outsource`:environment, `IT.Go agile`:environment, `IT.Switch to R`:environment>;
type `filter` <character[]> => logical[];
type `filterFun` <environment> => logical;
type `format` <? double, double, character, ???> => character;
type `FormatFixedDecimal` <? double, double> => character;
type `FormatPercent` <integer, double, character, ???> => character;
type `FromListExplicit` <struct<`name`:character, `spouse`:character, `born`:character, `died`:character, `children`:tuple<struct<`name`:character, `spouse`:character, `born`:character, `died`:character>, struct<`name`:character, `born`:character, `died`:character>>>, character, character, null, character[]> => environment;
type `FromListSimple` <struct<`head`:character, `spouse`:character, `born`:character, `died`:character, ``:struct<`head`:character, `spouse`:character, `born`:character, `died`:character>, ``:struct<`head`:character, `born`:character, `died`:character>> | struct<`spouse`:character, `born`:character, `died`:character, `Joseph II`:struct<`spouse`:character, `born`:character, `died`:character>, `Helen`:struct<`born`:character, `died`:character>>, character, ? character, character[]> => environment;
type `fun` <environment> => ? double | environment | character;
type `FUN` <? environment | character | any => any | double | struct<`Accounting`:environment, `Research`:environment, `IT`:environment> | struct<`New Product Line`:environment, `New Labs`:environment> | struct<`New Software`:environment, `New Accounting Standards`:environment> | struct<`Outsource`:environment, `Go agile`:environment, `Switch to R`:environment> | struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment> | struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment> | struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment> | struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment> | struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment> | struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment> | struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment> | struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment> | struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment> | struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment> | struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment> | struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment> | struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment> | struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment> | struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment> | struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment> | struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment> | struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment> | struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment> | struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment> | struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment> | struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment> | struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment> | struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment> | struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment> | struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment> | struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment> | struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment> | struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment> | struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment> | struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment>> => ? character[] | double[] | struct<`arrowhead`:character, `color`:character, `penwidth`:double> | struct<`arrowhead`:character, `label`:any => any, `fontname`:character, `penwidth`:any => any, `color`:any => any> | struct<`color`:character, `label`:character, `penwidth`:double, `fontcolor`:character> | struct<`fillcolor`:character, `fontcolor`:character, `tooltip`:character> | struct<`fillcolor`:character, `penwidth`:character> | struct<`label`:any => any> | struct<`label`:any => any, `tooltip`:any => any, `fontname`:character> | struct<`shape`:character> | environment | tuple<environment> | struct<`3`:environment, `4`:environment> | struct<`7`:environment, `8`:environment> | struct<`New Product Line`:environment, `New Labs`:environment> | struct<`New Software`:environment, `New Accounting Standards`:environment> | struct<`Outsource`:environment, `Go agile`:environment, `Switch to R`:environment> | any => any | struct<`Accounting`:environment, `Research`:environment, `IT`:environment> | struct<`children`:struct<`New Product Line`:struct<`cost`:double, `p`:double>, `New Labs`:struct<`cost`:double, `p`:double>>> | struct<`children`:struct<`New Software`:struct<`cost`:double, `p`:double>, `New Accounting Standards`:struct<`cost`:double, `p`:double>>> | struct<`children`:struct<`Outsource`:struct<`cost`:double, `p`:double>, `Go agile`:struct<`cost`:double, `p`:double>, `Switch to R`:struct<`cost`:double, `p`:double>>> | struct<`cost`:double, `p`:double> | struct<`id`:character, `descendants`:tuple<struct<`id`:character, `cost`:double, `p`:double>, struct<`id`:character, `cost`:double, `p`:double>>> | struct<`name`:character, `children`:tuple<struct<`name`:character, `cost`:double, `p`:double>, struct<`name`:character, `cost`:double, `p`:double>>> | struct<`name`:character, `cost`:double> | struct<`name`:character, `New Product Line`:struct<`name`:character, `cost`:double>, `New Labs`:struct<`name`:character, `cost`:double>> | struct<`name`:character, `New Software`:struct<`name`:character, `cost`:double>, `New Accounting Standards`:struct<`name`:character, `cost`:double>> | struct<`name`:character, `Outsource`:struct<`name`:character, `cost`:double>, `Go agile`:struct<`name`:character, `cost`:double>, `Switch to R`:struct<`name`:character, `cost`:double>> | struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment> | struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment> | struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment> | struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment> | struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment> | struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment> | struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment> | struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment> | struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment> | struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment> | struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment> | struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment> | struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment> | struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment> | struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment> | struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment> | struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment> | struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment> | struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment> | struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment> | struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment> | struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment> | struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment> | struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment> | struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment> | struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment> | struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment> | struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment> | struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment> | struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment> | struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment> | tuple<double, double>;
type `GetEdgeStyleFactory` <character> => any => any;
type `GetName` <? environment> => ? character;
type `GetSplittingNodeLabel` <struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double> | struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>> | struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>> | struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:double[], `toleft`:integer, `table`:null, `variableName`:character>, `ssplits`:tuple<list<? double>, list<? double>, list<? double>>, `prediction`:double, `left`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `right`:struct<`nodeID`:integer, `weights`:double[], `criterion`:struct<`statistic`:double[], `criterion`:double[], `maxcriterion`:double>, `terminal`:logical, `psplit`:list<null>, `ssplits`:tuple<null, null, null>, `prediction`:double, `left`:null, `right`:null, `NA`:double>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>>, `NA`:double, `ssplit`:tuple<struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>, struct<`variableID`:integer, `ordered`:logical, `splitpoint`:double, `splitstatistics`:null, `toleft`:integer, `table`:null, `variableName`:character>>>, symbol | logical> => character;
type `GetStyle` <environment, character, character, environment | symbol> => ? character | double;
type `is_method` <? character | double | environment | struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment> | struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment> | struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment> | struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment> | struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment> | struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment> | struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment> | struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment> | struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment> | struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment> | struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment> | struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment> | struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment> | struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment> | struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment> | struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment> | struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment> | struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment> | struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment> | struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment> | struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment> | struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment> | struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment> | struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment> | struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment> | struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment> | struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment> | struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment> | struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment> | struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment> | struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment>, tuple<environment>> => logical;
type `isLeaf` <environment> => logical;
type `isRoot` <environment> => logical;
type `list2env2` <struct<`.originalCount`:integer, `.originalTotalCount`:double, `.id`:integer, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:null, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment>, `p_name`:character> | struct<`IT`:environment, `Research`:environment, `Accounting`:environment, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Accounting Standards`:environment, `New Software`:environment, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`New Labs`:environment, `New Product Line`:environment, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:struct<`New Product Line`:environment, `New Labs`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`New Software`:environment, `New Accounting Standards`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`Outsource`:environment, `Go agile`:environment, `Switch to R`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`Accounting`:environment, `Research`:environment, `IT`:environment>, `p_name`:character> | struct<`p`:double, `cost`:double, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`Switch to R`:environment, `Go agile`:environment, `Outsource`:environment, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any>, environment, language, language, language, logical> => environment;
type `make_first_new_slice` <struct<`enclosing`:environment, `binding`:environment, `private`:environment>, logical> => struct<`enclosing`:environment, `binding`:environment, `private`:environment>;
type `Newick` <environment> => character;
type `plot.Node` <environment, ???, character[], null, character> => struct<`x`:struct<`diagram`:character, `config`:struct<`engine`:character, `options`:null>>, `width`:null, `height`:null, `sizingPolicy`:struct<`defaultWidth`:null, `defaultHeight`:null, `padding`:null, `viewer`:struct<`defaultWidth`:null, `defaultHeight`:null, `padding`:null, `fill`:logical, `suppress`:logical, `paneHeight`:null>, `browser`:struct<`defaultWidth`:null, `defaultHeight`:null, `padding`:null, `fill`:logical, `external`:logical>, `knitr`:struct<`defaultWidth`:null, `defaultHeight`:null, `figure`:logical>>, `dependencies`:null, `elementId`:null, `preRenderHook`:null, `jsHooks`:tuple<>>;
type `print.Node` <environment, ??? | any => any | character[] | integer[], ? character[] | integer[], double, ? any => any> => struct<`levelName`:character[]>;
type `PrintPruneDist` <environment, double> => environment;
type `PrintPruneSimple` <environment, double> => environment;
type `remap_func_envs` <struct<`.originalCount`:integer, `.originalTotalCount`:double, `.id`:integer, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:null, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment>, `p_name`:character>, tuple<struct<`old`:environment, `new`:environment>> | symbol> => struct<`.originalCount`:integer, `.originalTotalCount`:double, `.id`:integer, `averageBranchingFactor`:any => any, `siblings`:any => any, `root`:any => any, `isBinary`:any => any, `height`:any => any, `level`:any => any, `leafCount`:any => any, `leaves`:any => any, `levelName`:any => any, `fieldsAll`:any => any, `fields`:any => any, `position`:any => any, `pathString`:any => any, `path`:any => any, `totalCount`:any => any, `count`:any => any, `isRoot`:any => any, `isLeaf`:any => any, `children`:any => any, `parent`:any => any, `name`:any => any, `clone`:any => any, `Set`:any => any, `Do`:any => any, `Get`:any => any, `FindNode`:any => any, `Navigate`:any => any, `Climb`:any => any, `Prune`:any => any, `Revert`:any => any, `Sort`:any => any, `RemoveAttribute`:any => any, `RemoveChild`:any => any, `AddSiblingNode`:any => any, `AddSibling`:any => any, `AddChildNode`:any => any, `AddChild`:any => any, `initialize`:any => any> | struct<`p_parent`:environment, `p_children`:null, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1.1`:environment, `1.1.1.2`:environment, `1.1.1.3`:environment, `1.1.1.4`:environment, `1.1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.1`:environment, `1.1.2`:environment, `1.1.3`:environment, `1.1.4`:environment, `1.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.2.1`:environment, `1.1.2.2`:environment, `1.1.2.3`:environment, `1.1.2.4`:environment, `1.1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.3.1`:environment, `1.1.3.2`:environment, `1.1.3.3`:environment, `1.1.3.4`:environment, `1.1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.4.1`:environment, `1.1.4.2`:environment, `1.1.4.3`:environment, `1.1.4.4`:environment, `1.1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.1.5.1`:environment, `1.1.5.2`:environment, `1.1.5.3`:environment, `1.1.5.4`:environment, `1.1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1.1`:environment, `1.2.1.2`:environment, `1.2.1.3`:environment, `1.2.1.4`:environment, `1.2.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.1`:environment, `1.2.2`:environment, `1.2.3`:environment, `1.2.4`:environment, `1.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.2.1`:environment, `1.2.2.2`:environment, `1.2.2.3`:environment, `1.2.2.4`:environment, `1.2.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.3.1`:environment, `1.2.3.2`:environment, `1.2.3.3`:environment, `1.2.3.4`:environment, `1.2.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.4.1`:environment, `1.2.4.2`:environment, `1.2.4.3`:environment, `1.2.4.4`:environment, `1.2.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.2.5.1`:environment, `1.2.5.2`:environment, `1.2.5.3`:environment, `1.2.5.4`:environment, `1.2.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1.1`:environment, `1.3.1.2`:environment, `1.3.1.3`:environment, `1.3.1.4`:environment, `1.3.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.1`:environment, `1.3.2`:environment, `1.3.3`:environment, `1.3.4`:environment, `1.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.2.1`:environment, `1.3.2.2`:environment, `1.3.2.3`:environment, `1.3.2.4`:environment, `1.3.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.3.1`:environment, `1.3.3.2`:environment, `1.3.3.3`:environment, `1.3.3.4`:environment, `1.3.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.4.1`:environment, `1.3.4.2`:environment, `1.3.4.3`:environment, `1.3.4.4`:environment, `1.3.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.3.5.1`:environment, `1.3.5.2`:environment, `1.3.5.3`:environment, `1.3.5.4`:environment, `1.3.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1.1`:environment, `1.4.1.2`:environment, `1.4.1.3`:environment, `1.4.1.4`:environment, `1.4.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.1`:environment, `1.4.2`:environment, `1.4.3`:environment, `1.4.4`:environment, `1.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.2.1`:environment, `1.4.2.2`:environment, `1.4.2.3`:environment, `1.4.2.4`:environment, `1.4.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.3.1`:environment, `1.4.3.2`:environment, `1.4.3.3`:environment, `1.4.3.4`:environment, `1.4.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.4.1`:environment, `1.4.4.2`:environment, `1.4.4.3`:environment, `1.4.4.4`:environment, `1.4.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.4.5.1`:environment, `1.4.5.2`:environment, `1.4.5.3`:environment, `1.4.5.4`:environment, `1.4.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1.1`:environment, `1.5.1.2`:environment, `1.5.1.3`:environment, `1.5.1.4`:environment, `1.5.1.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.1`:environment, `1.5.2`:environment, `1.5.3`:environment, `1.5.4`:environment, `1.5.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.2.1`:environment, `1.5.2.2`:environment, `1.5.2.3`:environment, `1.5.2.4`:environment, `1.5.2.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.3.1`:environment, `1.5.3.2`:environment, `1.5.3.3`:environment, `1.5.3.4`:environment, `1.5.3.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.4.1`:environment, `1.5.4.2`:environment, `1.5.4.3`:environment, `1.5.4.4`:environment, `1.5.4.5`:environment>, `p_name`:character> | struct<`p_parent`:environment, `p_children`:struct<`1.5.5.1`:environment, `1.5.5.2`:environment, `1.5.5.3`:environment, `1.5.5.4`:environment, `1.5.5.5`:environment>, `p_name`:character> | struct<`p_parent`:null, `p_children`:struct<`1.1`:environment, `1.2`:environment, `1.3`:environment, `1.4`:environment, `1.5`:environment>, `p_name`:character>;
type `Set` <tuple<environment, environment, environment> | list<environment>, double[] | character[]> => tuple<environment, environment, environment> | list<environment>;
type `SetEdgeStyle` <environment, logical, logical, character> => logical;
type `SetFormat` <environment, character, any => any> => any => any;
type `SetGraphStyle` <environment, logical, character> => struct<`rankdir`:character>;
type `SetNodeStyle` <environment, logical, logical, character | any => any> => logical;
type `SetStyle` <environment, character, logical, logical, character | any => any> => logical;
type `Sort` <environment, character, ???, logical, logical> => environment;
type `ToDataFrameTable` <environment, character | any => any, null> => struct<`cost`:double[], `p`:double[]>;
type `ToDataFrameTree` <environment, logical | character | any => any, ? any => any> => struct<`levelName`:character[]>;
type `ToDataFrameTypeCol` <environment, ???, character, character, null> => struct<`level_1`:character[], `level_2`:character[], `level_3`:character[]>;
type `ToListExplicit` <environment, logical, character, character, ???> => struct<`id`:character, `descendants`:tuple<struct<`id`:character, `descendants`:tuple<struct<`id`:character, `cost`:double, `p`:double>, struct<`id`:character, `cost`:double, `p`:double>>>, struct<`id`:character, `descendants`:tuple<struct<`id`:character, `cost`:double, `p`:double>, struct<`id`:character, `cost`:double, `p`:double>>>, struct<`id`:character, `descendants`:tuple<struct<`id`:character, `cost`:double, `p`:double>, struct<`id`:character, `cost`:double, `p`:double>, struct<`id`:character, `cost`:double, `p`:double>>>>> | struct<`name`:character, `children`:tuple<struct<`name`:character, `children`:tuple<struct<`name`:character, `cost`:double, `p`:double>, struct<`name`:character, `cost`:double, `p`:double>>>, struct<`name`:character, `children`:tuple<struct<`name`:character, `cost`:double, `p`:double>, struct<`name`:character, `cost`:double, `p`:double>>>, struct<`name`:character, `children`:tuple<struct<`name`:character, `cost`:double, `p`:double>, struct<`name`:character, `cost`:double, `p`:double>, struct<`name`:character, `cost`:double, `p`:double>>>>> | struct<`name`:character, `children`:struct<`Accounting`:struct<`children`:struct<`New Software`:struct<`cost`:double, `p`:double>, `New Accounting Standards`:struct<`cost`:double, `p`:double>>>, `Research`:struct<`children`:struct<`New Product Line`:struct<`cost`:double, `p`:double>, `New Labs`:struct<`cost`:double, `p`:double>>>, `IT`:struct<`children`:struct<`Outsource`:struct<`cost`:double, `p`:double>, `Go agile`:struct<`cost`:double, `p`:double>, `Switch to R`:struct<`cost`:double, `p`:double>>>>>;
type `ToListSimple` <environment, character, character | ???> => struct<`name`:character, `Accounting`:struct<`name`:character, `New Software`:struct<`name`:character, `cost`:double>, `New Accounting Standards`:struct<`name`:character, `cost`:double>>, `Research`:struct<`name`:character, `New Product Line`:struct<`name`:character, `cost`:double>, `New Labs`:struct<`name`:character, `cost`:double>>, `IT`:struct<`name`:character, `Outsource`:struct<`name`:character, `cost`:double>, `Go agile`:struct<`name`:character, `cost`:double>, `Switch to R`:struct<`name`:character, `cost`:double>>>;
type `.f` <character, character[], ???> => environment;
