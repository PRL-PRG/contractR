type `::` <^double[], character | ^double[], double[], ??? | symbol | character, double, double[], double[], logical> => struct<`x`:double[], `y`:double[]> | struct<`x1`:double[], `x2`:double[], `fhat`:^double[]> | double;
type `filter` <character[]> => logical[];
type `linbin` <double[], double[], logical> => double[];
type `bkfe` <double[], double, double, integer, double[] | ???, logical, logical> => double;
type `dpih` <double[], character, integer, integer, double[], logical> => double;
type `bkde` <double[], character, logical, ??? | double, double, double[] | ???, logical> => struct<`x`:double[], `y`:double[]>;
type `bkde2D` <^double[], double[], integer[], ???, logical> => struct<`x1`:double[], `x2`:double[], `fhat`:^double[]>;
type `blkest` <double[], double[], integer, double> => struct<`sigsqe`:double, `th22e`:double, `th24e`:double>;
type `cpblock` <double[], double[], double, double> => integer;
type `dpik` <double[], character, integer, character, logical, double, double[], logical> => double;
type `dpill` <double[], double[], double, double, double, double, integer, double[], logical> => double;
type `fun` <symbol, symbol> => null;
type `linbin2D` <^double[], double[], double[]> => ^double[];
type `locpoly` <double[], double[] | ???, integer, ???, character, double, integer, double, double[] | ???, logical, logical> => struct<`x`:double[], `y`:double[]>;
type `rlbin` <double[], double[], double[], logical> => struct<`xcounts`:double[], `ycounts`:double[]>;
type `sdiag` <double[], integer, integer, character, double, integer, double, double[], logical, logical> => struct<`x`:double[], `y`:double[]>;
type `sstdiag` <double[], integer, integer, character, double, integer, double, double[], logical, logical> => struct<`x`:double[], `y`:double[]>;
