type `ahist` <double[] | struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, double[] | language, ? character | double, ? double[], double[], logical, character, character | language, character, character[], character, double, character[], double, logical, character[], logical, character | ???> => struct<`breaks`:double[], `counts`:double[], `density`:double[], `mids`:double[], `xname`:character, `equidist`:logical>;
type `Ckmeans_1d_dp` <double[], integer, double[], integer, integer, integer, integer[], double[], double[], double[], double[], character, character> => struct<`centers`:double[], `cluster`:integer[], `BIC`:double[], `withinss`:double[], `size`:double[]>;
type `Ckmeans.1d.dp` <double[], double[], double[], character[], character[]> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `Ckmedian_1d_dp` <double[], integer, double, integer, integer, integer, integer[], double[], double[], double[], double[], character, character> => struct<`centers`:double[], `cluster`:integer[], `BIC`:double[], `withinss`:double[], `size`:double[]>;
type `Ckmedian.1d.dp` <double[], double[], double, character[], character[]> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `Cksegs_1d_dp` <double[], integer, double[], integer, integer, integer, integer[], double[], double[], double[], double[], character, character> => struct<`centers`:double[], `cluster`:integer[], `BIC`:double[], `withinss`:double[], `size`:double[]>;
type `Cksegs.1d.dp` <double[], double[], double[], character[], character[]> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `filter` <character[]> => logical[];
type `FUN` <integer> => null;
type `MCW_main` <integer[], ^integer[], integer, integer, character, character> => struct<`centers`:double[], `cluster`:integer[], `BIC`:double[], `withinss`:double[], `size`:double[]>;
type `plot.ahist` <struct<`breaks`:double[], `counts`:double[], `density`:double[], `mids`:double[], `xname`:character, `equidist`:logical>, double[], double[], character, character | symbol, character, character[], character, double, character[], double, logical, logical, character | ???> => struct<`breaks`:double[], `counts`:double[], `density`:double[], `mids`:double[], `xname`:character, `equidist`:logical>;
type `plot.Ckmeans.1d.dp` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, ? character, null, ? character, null, null, ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `plot.Ckmedian.1d.dp` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, null, null, ? character, null, null, ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `plot.Cksegs.1d.dp` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, ? character, null, ? character, null, null, double | ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `plotBIC` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, character, character, character, character, character, ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `print.Ckmeans.1d.dp` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `print.Ckmedian.1d.dp` <struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, ???> => struct<`cluster`:integer[], `centers`:double[], `withinss`:double[], `size`:double[], `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
type `print.Cksegs.1d.dp` <struct<`cluster`:integer[], `centers`:double, `withinss`:double, `size`:double, `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>, double> => struct<`cluster`:integer[], `centers`:double, `withinss`:double, `size`:double, `totss`:double, `tot.withinss`:double, `betweenss`:double, `BIC`:double[], `xname`:character, `yname`:character>;
