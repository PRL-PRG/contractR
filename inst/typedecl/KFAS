type `[.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, character, ???, ???, ???, double, logical, ???> => double[];
type `[<-.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, character, character | ???, ??? | character, ???, ???, ???, ^double[]> => struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>;
type `approxSSM` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, ???, double, double> => struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language, `thetahat`:^double[], `iterations`:integer, `difference`:double>;
type `artransform` <double[]> => double[];
type `checkfn` <struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language>> => logical;
type `coef.KFS` <struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `alphahat`:^double[], `V`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double, `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, ? double[] | symbol, ? double[], logical, character, logical, ???> => ^double[];
type `coef.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, ? double[], ? double[], logical, character, logical, double, ???> => ^double[];
type `filter` <character[]> => logical[];
type `fitSSM` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:^double[], `T`:double, `R`:double, `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:null, `T`:double[], `R`:double[], `Q`:^double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:null, `T`:double[], `R`:double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, double[], any => any | ???, ??? | any => any, null, character | ???> => struct<`optim.out`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:character>, `model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language>> | struct<`optim.out`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:character>, `model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>> | struct<`optim.out`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `model`:struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language>> | struct<`optim.out`:struct<`par`:double[], `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>> | struct<`optim.out`:struct<`par`:double[], `value`:double, `counts`:^integer[], `convergence`:integer, `message`:null>, `model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>> | struct<`optim.out`:struct<`par`:double, `value`:double, `counts`:integer[], `convergence`:integer, `message`:null>, `model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>>;
type `fitted.KFS` <struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `alphahat`:^double[], `V`:double[], `thetahat`:^double[], `V_theta`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double, `H`:character, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `alphahat`:^double[], `V`:double[], `thetahat`:^double[], `V_theta`:double[], `muhat`:^double[], `V_mu`:double[], `iterations`:integer, `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `m`:^double[], `P_mu`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, null, null, logical, ???> => double[];
type `fitted.SSModel` <struct<`y`:^double[], `Z`:double, `H`:character, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, null, null, logical, double, ???> => double[];
type `FUN` <character | integer> => ^double[];
type `hatvalues.KFS` <struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, ???> => ^double[];
type `importanceSSM` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, character[], logical, double, logical, ???, logical, double> => struct<`samples`:double[], `weights`:double[]>;
type `initTheta` <^double[], ^double[], character[]> => ^double[];
type `interval` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, character, double, character, integer[], double, logical, integer[], symbol | logical, double, logical> => tuple<^double[]>;
type `is.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language, `thetahat`:^double[], `iterations`:integer, `difference`:double> | struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, logical, logical> => ? logical;
type `KFS` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language, `thetahat`:^double[], `iterations`:integer, `difference`:double> | struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, ??? | character, ??? | character[], logical, character[], double | symbol, ??? | double, double, double, logical> => struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `alphahat`:^double[], `V`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language, `thetahat`:^double[], `iterations`:integer, `difference`:double>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double, `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `alphahat`:^double[], `V`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double, `H`:character, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `muhat`:^double[], `V_mu`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double, `H`:character, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `thetahat`:^double[], `V_theta`:double[], `call`:language> | struct<`model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `muhat`:^double[], `V_mu`:double[], `call`:language>;
type `ldl` <^double[], ???> => ^double[];
type `logLik.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, logical, double, logical, ^double[] | ??? | symbol, logical, language | character[], double, ???, double, ???> => double;
type `pearson_standardized` <struct<`model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double, `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `etahat`:^double[], `V_eta`:double[], `epshat`:^double[], `V_eps`:^double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, character, double> => ^double[];
type `predict.SSModel` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language> | ???, ??? | double, character, double, character[], null, logical, double, logical, double, logical, ???> => ^double[];
type `recursive_standardized` <struct<`model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double, `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `etahat`:^double[], `V_eta`:double[], `epshat`:^double[], `V_eps`:^double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, character, double> => ^double[];
type `rename_states` <struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, character> => struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>;
type `same` <double[], double[]> => logical;
type `signal` <struct<`model`:struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double[], `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, character[], logical> => struct<`signal`:^double[], `variance`:double[]>;
type `simHelper` <struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, double, logical> => struct<`epsplus`:double[], `etaplus`:double[], `aplus1`:^double[], `c2`:double[], `nNonzeroP1`:integer, `nNonzeroP1inf`:integer>;
type `simulateSSM` <struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, character[], logical, double, logical, logical> => double[];
type `SSMarima` <? double[], ? double[], double, double, logical, ??? | integer, double, null, ???> => struct<`index`:double, `m`:double, `k`:integer, `Z`:^double[], `T`:^double[], `R`:^double[], `Q`:^double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[]>;
type `SSMcustom` <^double[], ^double[], ??? | ^double[], double | ^logical[], ??? | ^double[], ??? | ^double[], ^double[], integer, integer, ? character> => struct<`index`:integer, `m`:double, `k`:double, `p`:integer, `n`:integer, `Z`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvz`:logical, `tvt`:logical, `tvr`:logical, `tvq`:logical, `state_names`:character> | struct<`index`:integer, `m`:integer, `k`:double, `p`:integer, `n`:integer, `Z`:double[], `T`:double[], `R`:double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvz`:logical, `tvt`:logical, `tvr`:logical, `tvq`:logical, `state_names`:character[]>;
type `SSModel` <language, struct<`u`:double[], `lot1`:double[], `lot2`:double[]> | ??? | ^double[], ? ??? | ^logical[] | double, double[] | ???, character | ???, double> => struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:character, `T`:double[], `R`:double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:^double[], `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:^double[], `T`:double, `R`:double, `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:null, `T`:double[], `R`:double[], `Q`:^double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:null, `T`:double[], `R`:double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>;
type `SSMregression` <language, struct<`cbind(lot1# lot2)`:^double[], `log(u)`:double[]> | ???, ??? | character, ??? | ^logical[], integer[], ???, ???, ???, ???, integer, logical, null, ? character[] | ???> => struct<`index`:integer[], `m`:double, `k`:double, `Z`:double[], `T`:^double[], `R`:null, `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[]> | struct<`index`:integer, `m`:double, `k`:integer, `Z`:double[], `T`:^double[], `R`:^double[], `Q`:^logical[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[]>;
type `SSMseasonal` <double, ? ???, character, ???, integer, ???, ???, ???, integer, null, ???, ???> => struct<`index`:integer, `m`:double, `k`:double, `Z`:^double[], `T`:^double[], `R`:^double[], `Q`:^double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[], `period`:double, `sea.type`:character> | struct<`index`:integer, `m`:double, `k`:double, `Z`:^double[], `T`:^double[], `R`:null, `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[], `period`:double, `sea.type`:character>;
type `SSMtrend` <double, ? double | tuple<double> | tuple<^logical[]> | tuple<null>, character | ???, integer[], ??? | double[], ???, ??? | ^double[], integer, null, ???> => struct<`index`:integer[], `m`:double, `k`:integer, `Z`:^double[], `T`:^double[], `R`:^double[], `Q`:^logical[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character> | struct<`index`:integer, `m`:double, `k`:integer, `Z`:^double[], `T`:^double[], `R`:^double[], `Q`:^double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character[]> | struct<`index`:integer, `m`:double, `k`:integer, `Z`:^double[], `T`:^double[], `R`:^double[], `Q`:null, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `tvq`:double, `tvr`:double, `tvz`:double, `state_names`:character>;
type `state_standardized` <struct<`model`:struct<`y`:^double[], `Z`:double, `H`:double, `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>, `all_gaussian`:logical, `dims`:struct<`p`:integer, `m`:integer, `n`:integer>, `KFS_transform`:character, `d`:integer, `j`:integer, `logLik`:double, `a`:^double[], `P`:double[], `Pinf`:double, `att`:^double[], `Ptt`:double[], `v`:^double[], `F`:^double[], `Finf`:^double[], `alphahat`:^double[], `V`:double[], `etahat`:^double[], `V_eta`:double[], `epshat`:^double[], `V_eps`:^double[], `muhat`:^double[], `V_mu`:double[], `call`:language>, character, double> => ^double[];
type `transformSSM` <struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language>, character> => struct<`y`:^double[], `Z`:double[], `H`:double[], `T`:double, `R`:double, `Q`:double, `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character[], `tol`:double, `call`:language, `terms`:language> | struct<`y`:^double[], `Z`:double[], `H`:double, `T`:double[], `R`:double[], `Q`:double[], `a1`:^double[], `P1`:^double[], `P1inf`:^double[], `u`:character, `distribution`:character, `tol`:double, `call`:language, `terms`:language>;
