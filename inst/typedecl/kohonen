type `check.data` <^double[] | tuple<^double[]> | struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:integer[]> | struct<`measurements`:^double[], `vintages`:integer[]>> => tuple<^double[]> | struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]> | struct<`measurements`:^double[], `vintages`:^double[]>;
type `check.data.na` <tuple<^double[]> | struct<`alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[]> | struct<`measurements`:^double[], `vintages`:^double[]>, double> => integer[];
type `checkListVariables` <tuple<^double[]>, integer> => logical;
type `classmat2classvec` <^double[], double> => integer[];
type `classvec2classmat` <double[]> => ^double[];
type `CreateStdDistancePointers` <integer[], logical> => expression;
type `expandMap` <struct<`data`:struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:double, `dist.fcts`:character[]>> => struct<`data`:struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null>, `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:double, `dist.fcts`:character[], `nhbrdist`:^double[]>;
type `filter` <character[]> => logical[];
type `FUN` <^double[] | struct<>, double, double> => ^double[];
type `getCodes` <struct<`codes`:tuple<^double[]>, `distance.weights`:double, `dist.fcts`:character, `data`:tuple<^double[]>> | struct<`codes`:tuple<^double[], ^double[]>, `distance.weights`:double[], `dist.fcts`:character[], `data`:tuple<^double[], ^double[]>> | struct<`codes`:struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null>, `distance.weights`:double[], `dist.fcts`:character[], `data`:struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]>> | struct<`codes`:struct<`measurements`:^double[], `vintages`:^double[]>, `distance.weights`:double[], `dist.fcts`:character[], `data`:struct<`measurements`:^double[], `vintages`:^double[]>>, double | integer[]> => ^double[] | tuple<^double[], ^double[]> | struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null> | struct<`measurements`:^double[], `vintages`:^double[]>;
type `getDistancePointers` <character[], character[], double> => tuple<> | list<null>;
type `getnNA` <tuple<^double[]> | struct<`measurements`:^double[]> | struct<`vintages`:^double[]> | struct<`alpha`:^double[]> | struct<`cdc15`:^double[]> | struct<`cdc28`:^double[]> | struct<`elu`:^double[]>, double, integer | symbol> => ^double[];
type `is.factor.matrix` <^double[], double, double> => logical;
type `map.kohonen` <struct<`codes`:tuple<^double[], ^double[]>, `distance.weights`:double[], `dist.fcts`:character[], `data`:tuple<^double[], ^double[]>> | struct<`codes`:struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null>, `distance.weights`:double[], `dist.fcts`:character[], `data`:struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]>> | struct<`codes`:struct<`measurements`:^double[], `vintages`:^double[]>, `distance.weights`:double[], `dist.fcts`:character[], `data`:struct<`measurements`:^double[], `vintages`:^double[]>> | struct<`codes`:tuple<^double[]>, `distance.weights`:double, `dist.fcts`:character, `data`:tuple<^double[]>>, ??? | tuple<^double[]> | ^double[], ? integer[] | double, ? double[], double, ???> => struct<`unit.classif`:double[], `distances`:double[], `whatmap`:integer[], `user.weights`:double[]> | struct<`unit.classif`:double[], `distances`:double[], `whatmap`:double, `user.weights`:double[]>;
type `object.distances` <struct<`data`:tuple<^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:integer, `dist.fcts`:character> | struct<`data`:struct<`alpha`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:double, `dist.fcts`:character> | struct<`data`:struct<`cdc15`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:double, `dist.fcts`:character> | struct<`data`:struct<`cdc28`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:double, `dist.fcts`:character> | struct<`data`:struct<`elu`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:double, `dist.fcts`:character> | struct<`data`:struct<`measurements`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:integer, `dist.fcts`:character> | struct<`data`:struct<`measurements`:^double[], `vintages`:^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:struct<`measurements`:^double[], `vintages`:^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]> | struct<`data`:struct<`vintages`:^double[]>, `whatmap`:double, `user.weights`:double, `distance.weights`:double, `maxNA.fraction`:integer, `dist.fcts`:character>, character, ???> => double[];
type `ObjectDistances` <^double[], integer[], ^double[], tuple<>, double[]> => double[];
type `plot.heatkey` <struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>, double[] | symbol, character[], ? character[], logical, double, ???> => null;
type `plot.kohcounts` <struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>, null, character, null, symbol, null, logical, logical, double, character[], character, ???> => ^integer[];
type `plot.kohonen` <struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>, character, null, null, null, null, character, ? any => any, ???, null, null, logical, ??? | ^double[], null, logical, double, character[], character, ???> => ? ^integer[];
type `plot.kohprop` <struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>, ^double[], character, ? any => any, symbol, null, logical, logical, double, character[], character, ???> => null;
type `plot.somgrid` <struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, ???, ???, ???> => null;
type `predict.kohonen` <struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>, ^double[], ^double[], null, double, double, integer, ???> => struct<`predictions`:tuple<^double[]>, `unit.classif`:double[], `unit.predictions`:tuple<^double[]>, `whatmap`:double>;
type `RcppMap` <^double[], integer[], ^double[], ^double[], double[], tuple<>> => struct<`winners`:integer[], `unitdistances`:double[]>;
type `RcppSupersom` <^double[], ^double[], integer[], double[], tuple<>, ^double[], ^double[], integer, double[], double[], double> => struct<`codes`:^double[], `changes`:^double[]>;
type `remove.data.na` <tuple<^double[]> | struct<`alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[]> | struct<`measurements`:^double[], `vintages`:^double[]>, integer[]> => tuple<^double[]> | struct<`alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[]> | struct<`measurements`:^double[], `vintages`:^double[]>;
type `som` <^double[], struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>> => struct<`data`:tuple<^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double, `distance.weights`:double, `whatmap`:integer, `maxNA.fraction`:integer, `dist.fcts`:character>;
type `somgrid` <double, double, character, character[], logical> => struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>;
type `supersom` <tuple<^double[]> | struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:integer[]> | struct<`measurements`:^double[], `vintages`:integer[]>, struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, double, double[], double, ? integer[], double[], double, logical, null, character[], language, ??? | struct<`alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[]>, logical> => struct<`data`:tuple<^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double, `distance.weights`:double, `whatmap`:integer, `maxNA.fraction`:integer, `dist.fcts`:character> | struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]> | struct<`data`:struct<`cln`:^double[], `clb`:^double[], `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:struct<`cln`:null, `clb`:null, `alpha`:^double[], `cdc15`:^double[], `cdc28`:^double[], `elu`:^double[], `class`:null>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:double, `dist.fcts`:character[]> | struct<`data`:struct<`measurements`:^double[], `vintages`:^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:struct<`measurements`:^double[], `vintages`:^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>;
type `xyf` <^double[], ^double[], double[] | struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>> => struct<`data`:tuple<^double[], ^double[]>, `unit.classif`:double[], `distances`:double[], `grid`:struct<`pts`:^double[], `xdim`:double, `ydim`:double, `topo`:character, `neighbourhood.fct`:integer, `toroidal`:logical>, `codes`:tuple<^double[], ^double[]>, `changes`:^double[], `alpha`:double[], `radius`:double[], `user.weights`:double[], `distance.weights`:double[], `whatmap`:integer[], `maxNA.fraction`:integer, `dist.fcts`:character[]>;
