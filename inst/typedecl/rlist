type `.evalwith` <character[] | double[] | struct<`name`:character, `age`:double> | struct<`name`:character, `value`:double> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> => ? struct<`name`:character, `age`:double> | struct<`name`:character, `value`:double> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>> | struct<`x`:double, `p`:double> | struct<`x`:double, `y`:double>;
type `[.List` <environment, ??? | character> => double | environment | struct<`A`:double, `B`:double> | struct<`p2`:double, `p3`:double>;
type `[[` <struct<`message`:character, `call`:null>> => null;
type `[[.List` <environment, character> => environment;
type `[[<-.List` <environment, character, double> => environment;
type `[<-.List` <environment, character, null> => environment;
type `$` <language | symbol, ???> => environment;
type `$<-.List` <environment, character, double> => environment;
type `args_env` <integer | language | struct<`state`:logical> | symbol, environment> => environment;
type `createCallClosure` <symbol> => any => any;
type `createListClosure` <symbol, symbol> => any => any;
type `dots` <language | symbol | tuple<double, double, double>> => tuple<language> | tuple<symbol> | struct<``:symbol, `c1`:language> | struct<``:symbol, `score.range`:language> | struct<`exams`:language> | struct<`grade`:language> | struct<`high`:language, `low`:language> | struct<`num`:symbol, `sym`:symbol> | struct<`score`:language> | struct<`tp`:symbol>;
type `f` <tuple<tuple<character, character>, tuple<character, character>, tuple<character, character>> | struct<`april`:character[], `july`:character[]> | struct<> | struct<`april`:double, `july`:double> | struct<`p1`:null, `p2`:double> | struct<`p1`:double, `p2`:double> | struct<`april`:tuple<tuple<character, character>, tuple<character, character>>, `july`:tuple<tuple<character, character>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, ??? | any => any | integer | language, logical | ???, logical, logical> => struct<`V1`:character[], `V2`:character[]> | ^character[] | ^double[] | tuple<tuple<character, character>, tuple<character, character>, tuple<character, character>> | struct<`p1`:double, `p2`:double> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `filter` <character[]> => logical[];
type `FUN` <? double | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | character[] | struct<`x`:null, `y`:character[]> | struct<`a`:double, `b`:struct<`x`:double>> | struct<`a`:double, `b`:struct<`z`:double>> | symbol | language | tuple<character, character, character, any => any>, symbol | language | character, environment, any => any, null> => ? struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>> | struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p1`:struct<`min`:double, `max`:double>, `p2`:struct<`min`:double, `max`:double>, `p3`:struct<`min`:double, `max`:double>> | tuple<> | struct<`y`:character[]> | tuple<any => any> | tuple<any => any, any => any, any => any, any => any> | ^character[] | struct<> | ^double[] | struct<`p1`:double, `p2`:double>;
type `getnames` <struct<``:symbol, `c1`:language> | struct<``:symbol, `score.range`:language> | struct<`a`:double[], `b`:double[]> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`num`:symbol, `sym`:symbol> | struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`x`:character[], `y`:character[]> | double[] | tuple<character[], character[], character[]> | tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>> | tuple<symbol> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`tp`:symbol>, character[] | language> => character[];
type `is.empty` <double[] | tuple<> | tuple<character[], character[], character[]> | tuple<language> | tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>> | tuple<symbol> | struct<`a`:double[], `b`:double[]> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`x`:character[], `y`:character[]>> => logical;
type `is.error` <character | double> => logical;
type `is.formula` <language | symbol> => logical;
type `lambda` <language | symbol> => struct<`expr`:language, `symbols`:character[]> | struct<`expr`:symbol, `symbols`:character[]>;
type `List` <language | symbol> => environment;
type `List_get` <symbol, struct<`a`:double, `b`:double>, pairlist, environment> => environment;
type `List_set` <symbol, struct<`a`:double>, pairlist, ? double, environment> => environment;
type `list.all` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, logical> => ? logical;
type `list.any` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, logical> => logical;
type `list.cases` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`x`:character[], `y`:character[]>, symbol | ??? | language, logical, logical> => character[] | double[];
type `list.cbind` <tuple<struct<`i`:integer[], `x`:double[]>, struct<`y`:double[], `z`:double[]>>> => struct<`i`:integer[], `x`:double[], `y`:double[], `z`:double[]>;
type `list.class` <struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, language | symbol, logical> => struct<`cpp`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `csharp`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>>, `java`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>, `python`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `r`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>> | struct<`movies`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `music`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>, `reading`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `sports`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>>;
type `list.clean` <list<null> | struct<`x`:null, `y`:character[]> | list<? character[]> | tuple<character[], character[], character, character, character> | list<? character> | tuple<character, character, null, null, null> | list<? double[]> | list<? ^double[]> | list<? double> | struct<`a`:null, `b`:struct<`x`:null, `y`:character[]>, `d`:double, `e`:double> | struct<`p1`:struct<`c1`:double, `c2`:double>, `p2`:struct<`c1`:double, `c2`:double>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, any => any, logical> => tuple<> | tuple<character[]> | tuple<double[]> | struct<`d`:double, `e`:double> | struct<`p1`:struct<`c1`:double, `c2`:double>, `p2`:struct<`c1`:double, `c2`:double>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`y`:character[]>;
type `list.count` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => integer;
type `list.do` <tuple<struct<`a`:integer, `b`:double, `c`:integer>, struct<`a`:integer, `b`:double, `c`:integer>, struct<`a`:integer, `b`:double, `c`:integer>> | tuple<struct<`i`:integer[], `x`:double[]>, struct<`y`:double[], `z`:double[]>> | struct<`p1`:struct<`name`:integer>, `p2`:struct<`name`:integer>, `p3`:struct<`name`:integer>> | tuple<double[], double[], double[]>, character | any => any, ???> => struct<`a`:integer[], `b`:double[], `c`:integer[]> | ^double[];
type `list.exclude` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.expand` <tuple<struct<`x`:double, `y`:character>, struct<`x`:double, `y`:character>> | tuple<double[], double[]> | integer[]> => tuple<struct<`a`:struct<`x`:double, `y`:character>, `b`:character[]>, struct<`a`:struct<`x`:double, `y`:character>, `b`:character[]>, struct<`a`:struct<`x`:double, `y`:character>, `b`:character[]>, struct<`a`:struct<`x`:double, `y`:character>, `b`:character[]>> | list<struct<`x`:double[], `y`:character>>;
type `list.filter` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.find` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, double> => struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.findi` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, double> => integer[];
type `list.findi.internal` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, environment, double, logical> => integer[];
type `list.first` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => ? struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>;
type `list.first.internal` <null, language | struct<`expr`:language, `symbols`:character[]>, environment, logical> => struct<`state`:logical> | struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.flatten` <struct<`a`:double, `b`:struct<`b1`:double, `b2`:double>, `c`:struct<`c1`:struct<`c11`:character, `c12`:character>, `c2`:double>> | struct<`a`:double, `b`:struct<`x`:character, `y`:character, `z`:double>>, logical, character> => struct<`a`:double, `b.b1`:double, `b.b2`:double, `c.c1.c11`:character, `c.c1.c12`:character, `c.c2`:double> | struct<`a`:double, `b.z`:double> | struct<`b.x`:character, `b.y`:character>;
type `list.group` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language | symbol, logical> => struct<`8`:struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `9`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>;
type `list.group.internal` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, tuple<language> | tuple<symbol>, environment, ? character, character, logical> => struct<`8`:struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `9`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`cpp`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `csharp`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>>, `java`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>, `python`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `r`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>> | struct<`movies`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `music`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>, `reading`:struct<`p1`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `csharp`:double, `python`:double>>, `p3`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `cpp`:double, `python`:double>>>, `sports`:struct<`p2`:struct<`name`:character, `age`:double, `interest`:character[], `lang`:struct<`r`:double, `java`:double, `cpp`:double>>>>;
type `list.is` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, logical> => logical[];
type `list.is.internal` <struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, environment> => logical[];
type `list.iter` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.join` <struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>>, struct<`p1`:struct<`name`:character, `age`:double, `type`:character>, `p2`:struct<`name`:character, `age`:double, `type`:character>, `p3`:struct<`name`:character, `age`:double, `type`:character>>, symbol | language, ???, ???, logical> => struct<`p1`:struct<`name`:character, `age`:double, `type`:character>, `p3`:struct<`name`:character, `age`:double, `type`:character>>;
type `list.last` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => ? struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>;
type `list.map` <struct<`a`:double[], `b`:double[]> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language | symbol> => struct<`a`:double, `b`:double> | struct<`A`:double, `B`:double> | struct<`a`:double, `b`:null> | struct<`p1`:character, `p2`:character, `p3`:character> | struct<`p1`:struct<`c1`:double, `c2`:double>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`c1`:double, `c2`:double>, `p3`:struct<`c1`:double, `c2`:double>>;
type `list.map.internal` <tuple<character[], character[], character[]> | tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>> | double[] | struct<`a`:double[], `b`:double[]> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`x`:character[], `y`:character[]>, symbol | language | struct<`expr`:language, `symbols`:character[]>, environment, any => any, ? environment> => tuple<character[], character[], character[]> | tuple<character, character> | struct<`a`:double, `b`:double> | struct<`A`:double, `B`:double> | struct<`a`:double, `b`:null> | struct<`p1`:character[], `p2`:character[], `p3`:character[]> | struct<`p1`:struct<`name`:integer>, `p2`:struct<`name`:integer>, `p3`:struct<`name`:integer>> | struct<`p1`:struct<`c1`:double, `c2`:double>> | struct<`p1`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `p2`:null, `p3`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`p1`:struct<`tp`:character>, `p2`:struct<`tp`:character>, `p3`:struct<`tp`:character>> | struct<`p1`:struct<`type`:character>, `p2`:struct<`type`:character>, `p3`:struct<`type`:character>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`c1`:double, `c2`:double>, `p3`:struct<`c1`:double, `c2`:double>> | struct<`x`:character[], `y`:character[]>;
type `list.mapv` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, symbol | language, ???, logical> => character[] | double[];
type `list.match` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, character, ???> => struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.merge` <struct<`a`:double, `b`:struct<`x`:double, `y`:double>>> => struct<`a`:double, `b`:struct<`x`:double, `y`:double, `z`:double>>;
type `list.names` <double[] | tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>>, language | symbol> => double[] | struct<`A`:struct<`name`:character, `value`:double>, `B`:struct<`name`:character, `value`:double>>;
type `list.order` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language | symbol, logical, logical> => integer[];
type `list.order.internal` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, tuple<language> | tuple<symbol, language>, environment, ? logical> => integer[];
type `list.parse.character` <character, character, ???> => struct<`a`:struct<`type`:character, `class`:character, `registered`:logical>>;
type `list.parse.data.frame` <struct<`a`:integer[], `type`:integer[]>, ???> => struct<`1`:struct<`a`:integer, `type`:integer>, `2`:struct<`a`:integer, `type`:integer>, `3`:struct<`a`:integer, `type`:integer>>;
type `list.parse.matrix` <^double[], ???> => struct<`item1`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item2`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item3`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item4`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item5`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item6`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item7`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item8`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item9`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item10`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item11`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item12`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item13`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item14`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item15`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item16`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item17`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item18`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item19`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item20`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item21`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item22`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item23`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item24`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item25`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item26`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item27`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item28`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item29`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item30`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item31`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item32`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item33`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item34`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item35`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item36`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item37`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item38`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item39`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item40`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item41`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item42`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item43`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item44`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item45`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item46`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item47`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item48`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item49`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item50`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item51`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item52`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item53`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item54`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item55`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item56`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item57`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item58`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item59`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item60`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item61`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item62`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item63`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item64`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item65`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item66`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item67`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item68`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item69`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item70`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item71`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item72`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item73`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item74`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item75`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item76`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item77`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item78`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item79`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item80`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item81`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item82`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item83`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item84`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item85`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item86`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item87`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item88`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item89`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item90`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item91`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item92`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item93`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item94`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item95`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item96`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item97`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item98`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item99`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item100`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item101`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item102`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item103`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item104`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item105`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item106`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item107`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item108`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item109`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item110`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item111`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item112`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item113`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item114`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item115`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item116`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item117`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item118`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item119`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item120`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item121`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item122`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item123`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item124`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item125`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item126`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item127`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item128`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item129`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item130`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item131`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item132`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item133`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item134`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item135`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item136`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item137`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item138`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item139`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item140`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item141`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item142`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item143`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item144`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item145`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item146`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item147`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item148`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item149`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item150`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item151`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item152`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item153`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item154`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item155`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item156`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item157`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item158`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item159`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item160`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item161`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item162`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item163`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item164`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item165`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item166`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item167`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item168`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item169`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item170`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item171`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item172`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item173`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item174`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item175`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item176`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item177`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item178`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item179`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item180`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item181`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item182`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item183`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item184`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item185`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item186`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item187`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item188`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item189`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item190`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item191`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item192`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item193`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item194`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item195`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item196`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item197`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item198`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item199`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>, `item200`:struct<`a`:double, `b`:double, `c`:double, `d`:double, `e`:double>>;
type `list.prepend` <struct<`a`:double, `b`:double, `c`:double>, double> => struct<`d`:double, `e`:double, `a`:double, `b`:double, `c`:double> | struct<`d`:double, `f`:double[], `a`:double, `b`:double, `c`:double>;
type `list.rbind` <tuple<struct<`a`:integer, `b`:double, `c`:integer>, struct<`a`:integer, `b`:double, `c`:integer>, struct<`a`:integer, `b`:double, `c`:integer>> | struct<`p1`:struct<`name`:integer>, `p2`:struct<`name`:integer>, `p3`:struct<`name`:integer>> | tuple<double[], double[], double[]>> => struct<`a`:integer[], `b`:double[], `c`:integer[]> | ^double[];
type `list.remove` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, character | double[]> => struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.reverse` <struct<`a`:double, `b`:double, `c`:double>> => struct<`c`:double, `b`:double, `a`:double>;
type `list.sample` <struct<`a`:double, `b`:double[], `c`:double[]>, double, logical, language, null> => struct<`b`:double[], `c`:double[]>;
type `list.search` <struct<`p1`:struct<`type`:character, `score`:double>, `p2`:struct<`type`:character[], `score`:double[]>, `p3`:struct<`type`:character[], `score`:double[]>, `p4`:struct<`type`:character[], `score`:^double[]>> | struct<`p1`:struct<`name`:character[], `age`:double>, `p2`:struct<`name`:character[], `age`:double>, `p3`:struct<`name`:character[], `age`:double>, `p4`:struct<`name`:character[], `age`:double>, `p5`:struct<`name`:character[], `age`:double>>, language, character, ???, logical> => tuple<> | struct<`p1.name`:character[], `p2.name`:character[], `p3.name`:character, `p4.name`:character, `p5.name`:character> | struct<`p1.name`:character, `p5.name`:character> | struct<`p1.score`:double> | struct<`p1.type`:character> | struct<`p2.score`:double[]> | struct<`p2.type`:character[]> | struct<`p3.score`:double[]>;
type `list.select` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, symbol> => struct<`p1`:struct<`tp`:character>, `p2`:struct<`tp`:character>, `p3`:struct<`tp`:character>> | struct<`p1`:struct<`type`:character>, `p2`:struct<`type`:character>, `p3`:struct<`type`:character>>;
type `list.skip` <struct<`a`:double, `b`:double, `c`:double>, double> => struct<`c`:double>;
type `list.skipWhile` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => struct<`p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.sort` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, symbol | language, null>=> null;
type `list.table` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, symbol, struct<`dnn`:character[]> | struct<`useNA`:character>> => ^integer[];
type `list.take` <struct<`a`:double, `b`:double, `c`:double>, double, logical> => struct<`a`:double>;
type `list.takeWhile` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => tuple<> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `list.ungroup` <struct<`a`:struct<`a1`:struct<`x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>>>, `b`:struct<`b1`:struct<`x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>>>> | struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>, double, ???, logical, logical> => struct<`a.a1.x`:struct<`x1`:double, `x2`:double>, `a.a1.y`:struct<`y1`:double, `y2`:double>, `b.b1.x`:struct<`x1`:double, `x2`:double>, `b.b1.y`:struct<`y1`:double, `y2`:double>> | struct<`a1`:struct<`x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>>, `b1`:struct<`x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>> | struct<`x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>, `x`:struct<`x1`:double, `x2`:double>, `y`:struct<`y1`:double, `y2`:double>>;
type `list.unzip` <struct<`p1`:struct<`a`:double, `b`:double>, `p2`:struct<`a`:double, `b`:double>> | struct<`april`:struct<`n_days`:double, `holidays`:tuple<tuple<character, character>, tuple<character, character>>, `month_info`:character[]>, `july`:struct<`n_days`:double, `holidays`:tuple<tuple<character, character>>, `month_info`:character[]>>, character[], ? ??? | character | tuple<character, character, character, any => any>, character, null> => struct<`b`:double[]> | struct<`n_days`:double[], `holidays`:struct<`date`:character[], `name`:character[]>, `month_info`:^character[]>;
type `list.update` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language, logical> => struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `exams`:integer>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `exams`:integer>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `exams`:integer>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `grade`:double>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `grade`:double>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `grade`:double>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `high`:double, `low`:double>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `high`:double, `low`:double>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>, `high`:double, `low`:double>> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double, `min`:double, `max`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double, `min`:double, `max`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double, `min`:double, `max`:double>>>;
type `list.which` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language> => integer[];
type `list.zip` <tuple<double, double, double>, logical, logical> => tuple<struct<`num`:double, `sym`:character>, struct<`num`:double, `sym`:character>, struct<`num`:double, `sym`:character>>;
type `map` <any => any, tuple<tuple<character[], character[], character[]>, tuple<character[], character[], character[]>, integer[], character> | tuple<tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>>, tuple<struct<`name`:character, `value`:double>, struct<`name`:character, `value`:double>>, integer[], character> | tuple<double[], double[], integer[], character> | struct<> | struct<`num`:tuple<double, double, double>, `sym`:tuple<character, character, character>> | tuple<struct<`a`:double[], `b`:double[]>, struct<`a`:double[], `b`:double[]>, integer[], character[]> | tuple<struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>, struct<`A`:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `B`:struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>, integer[], character[]> | tuple<struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, integer[], character[]> | tuple<struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>>, struct<`p1`:struct<`name`:character, `age`:double>, `p2`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>>, integer[], character[]> | tuple<struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, integer, character> | tuple<struct<`p1`:struct<`name`:character, `age`:double>, `p3`:struct<`name`:character, `age`:double>>, struct<`p2`:struct<`name`:character, `age`:double, `type`:character>, `p1`:struct<`name`:character, `age`:double, `type`:character>>> | struct<``:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `exams`:struct<`p1`:integer, `p2`:integer, `p3`:integer>> | struct<``:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `grade`:struct<`p1`:double, `p2`:double, `p3`:double>> | struct<``:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `high`:struct<`p1`:double, `p2`:double, `p3`:double>, `low`:struct<`p1`:double, `p2`:double, `p3`:double>> | struct<``:struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `score`:struct<`p1`:struct<`min`:double, `max`:double>, `p2`:struct<`min`:double, `max`:double>, `p3`:struct<`min`:double, `max`:double>>> | tuple<struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, integer[], character[]> | tuple<struct<`x`:character[], `y`:character[]>, struct<`x`:character[], `y`:character[]>, integer[], character[]>, null, logical> => tuple<character[], character[], character[]> | tuple<character, character> | tuple<struct<`a`:integer, `type`:integer>, struct<`a`:integer, `type`:integer>, struct<`a`:integer, `type`:integer>> | tuple<struct<`num`:double, `sym`:character>, struct<`num`:double, `sym`:character>, struct<`num`:double, `sym`:character>> | struct<`a`:double, `b`:double> | struct<`A`:double, `B`:double> | struct<`a`:double, `b`:null> | struct<`p1`:character[], `p2`:character[], `p3`:character[]> | struct<`p1`:struct<`name`:integer>, `p2`:struct<`name`:integer>, `p3`:struct<`name`:integer>> | struct<`p1`:struct<`c1`:double, `c2`:double>> | struct<`p1`:struct<`min`:double, `max`:double>, `p2`:struct<`min`:double, `max`:double>, `p3`:struct<`min`:double, `max`:double>> | struct<`p1`:struct<`name`:character, `age`:double, `type`:character>, `p3`:struct<`name`:character, `age`:double, `type`:character>> | struct<`p1`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `p2`:null, `p3`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>> | struct<`p1`:struct<`tp`:character>, `p2`:struct<`tp`:character>, `p3`:struct<`tp`:character>> | struct<`p1`:struct<`type`:character>, `p2`:struct<`type`:character>, `p3`:struct<`type`:character>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`c1`:double, `c2`:double>, `p3`:struct<`c1`:double, `c2`:double>> | struct<`x`:character[], `y`:character[]>;
type `ndots` <pairlist> => logical;
type `reduce` <any => any, tuple<any => any> | struct<`p1`:character[], `p2`:character[], `p3`:character[]> | tuple<character[], character[], character[]> | struct<`x`:character[], `y`:character[]> | tuple<any => any, any => any, any => any, any => any> | tuple<struct<`a`:double, `b`:struct<`x`:double, `y`:double>>, struct<`a`:double, `b`:struct<`z`:double>>, struct<`a`:double, `b`:struct<`x`:double>>> | tuple<language>, struct<`april`:character[], `july`:character[]> | character[] | struct<`april`:tuple<tuple<character, character>, tuple<character, character>>, `july`:tuple<tuple<character, character>>> | struct<`april`:double, `july`:double> | struct<`p1`:null, `p2`:double> | struct<`p1`:double, `p2`:double> | tuple<> | struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, ???> => ^character[] | struct<> | ^double[] | struct<`a`:double, `b`:struct<`x`:double, `y`:double, `z`:double>> | struct<`p1`:double, `p2`:double> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `set_argnames` <struct<`num`:symbol, `sym`:symbol> | struct<`tp`:symbol> | tuple<symbol> | struct<``:symbol, `c1`:language> | struct<``:symbol, `score.range`:language>, struct<`num`:tuple<double, double, double>, `sym`:tuple<character, character, character>> | struct<`tp`:symbol> | tuple<symbol> | struct<``:symbol, `c1`:language> | struct<``:symbol, `score.range`:language>> => struct<`num`:tuple<double, double, double>, `sym`:tuple<character, character, character>> | struct<`tp`:symbol> | struct<`type`:symbol>;
type `subset.list` <struct<`p1`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, language | ???, language | symbol | ???, ???> => struct<`p1`:struct<`c1`:double, `c2`:double>, `p2`:struct<`c1`:double, `c2`:double>> | struct<`p2`:double, `p3`:double> | struct<`p2`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>, `p3`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>;
type `tryEval` <double | language, null> => ? double;
type `tryGet` <symbol, double, ???, environment> => double;
type `tryWithCondition` <? language | struct<`p1`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `p2`:null, `p3`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>, null> => ? struct<`p1`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>, `p2`:null, `p3`:struct<`state`:null, `value`:struct<`type`:character, `score`:struct<`c1`:double, `c2`:double>>>>;
