type `::` <any => any | character | ???, character | double | ???> => struct<`foo`:double, `bar`:double> | any => any | logical | struct<`raise`:character, `lin.eq.eps`:double, `lin.ineq.eps`:double, `na.value`:null, `sequential`:logical, `na.condition`:logical>;
type `[[` <double | character | language> => null;
type `clone_and_merge` <any => any, double | ??? | character> => any => any;
type `filter` <character[]> => logical[];
type `fun` <symbol, symbol> => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `inlist` <character> => any => any;
type `inrange` <double, double> => any => any;
type `is_setting` <double | ???> => logical;
type `options_manager` <character | double, struct<`foo`:any => any, `bar`:any => any> | struct<`fu`:any => any> | ??? | struct<`prob`:any => any, `y`:any => any>> => any => any;
type `reset` <any => any> => struct<`foo`:double, `bar`:character> | struct<`foo`:double, `bar`:double, `baz`:character>;
type `reset_options` < > => struct<`CBoundsCheck`:logical, `HTTPUserAgent`:character, `OutDec`:character, `PCRE_limit_recursion`:null, `PCRE_study`:integer, `PCRE_use_JIT`:logical, `add.smooth`:logical, `bitmapType`:character, `browser`:character, `browserNLdisabled`:logical, `check.bounds`:logical, `citation.bibtex.max`:integer, `continue`:character, `contrasts`:character[], `defaultPackages`:character[], `demo.ask`:character, `deparse.cutoff`:integer, `device`:any => any, `device.ask.default`:logical, `digits`:integer, `dvipscmd`:character, `echo`:logical, `editor`:character, `encoding`:character, `example.ask`:character, `expressions`:integer, `help.search.types`:character[], `help.try.all.packages`:logical, `internet.info`:integer, `keep.source`:logical, `keep.source.pkgs`:logical, `locatorBell`:logical, `mailer`:character, `matprod`:character, `max.print`:integer, `menu.graphics`:logical, `na.action`:character, `nwarnings`:integer, `pager`:character, `papersize`:character, `pdfviewer`:character, `pkgType`:character, `printcmd`:character, `prompt`:character, `repos`:character, `rl_word_breaks`:character, `scipen`:double, `show.coef.Pvalues`:logical, `show.error.messages`:logical, `show.signif.stars`:logical, `showErrorCalls`:logical, `str`:struct<`strict.width`:character, `digits.d`:integer, `vec.len`:integer>, `str.dendrogram.last`:character, `stringsAsFactors`:logical, `texi2dvi`:character, `timeout`:double, `topLevelEnvironment`:null, `ts.S.compat`:logical, `ts.eps`:double, `unzip`:character, `useFancyQuotes`:logical, `verbose`:logical, `warn`:double, `warning.length`:integer, `width`:integer>;
type `reset_par` < > => struct<`xlog`:logical, `ylog`:logical, `adj`:double, `ann`:logical, `ask`:logical, `bty`:character, `cex`:double, `cex.axis`:double, `cex.lab`:double, `cex.main`:double, `cex.sub`:double, `col`:character, `col.axis`:character, `col.lab`:character, `col.main`:character, `col.sub`:character, `crt`:double, `err`:integer, `family`:character, `fg`:character, `fig`:double[], `font`:integer, `font.axis`:integer, `font.lab`:integer, `font.main`:integer, `font.sub`:integer, `lab`:integer[], `las`:integer, `lend`:character, `lheight`:double, `ljoin`:character, `lmitre`:double, `lty`:character, `lwd`:double, `mar`:double[], `mex`:double, `mfcol`:integer[], `mfg`:integer[], `mfrow`:integer[], `mgp`:double[], `mkh`:double, `oma`:double[], `omd`:double[], `omi`:double[], `pch`:integer, `pty`:character, `smo`:double, `srt`:double, `tck`:null, `tcl`:double, `usr`:double[], `xaxp`:double[], `xaxs`:character, `xaxt`:character, `xpd`:logical, `yaxp`:double[], `yaxs`:character, `yaxt`:character, `ylbias`:double>;
type `stop_if_reserved` <character | double> => logical[];
