type `filter` <character[]> => logical[];
type `fun` <symbol | character[], symbol> => ? struct<`callr.condition_handler_cli_message`:null> | character[];
type `::` <character | struct<> | ??? | double, ? character | integer, ? character, double | character, ? logical, ? character | integer, null, integer> => ? character[];
type `:::` <double, integer[], integer[]> => character;
type `.transformer` <character, environment> => character;
type `[[` <struct<`message`:character, `call`:language> | symbol> => struct<`message`:character, `call`:language> | logical;
type `%||%` <? character | double | environment | tuple<> | tuple<tuple<struct<`tag`:character[], `class`:character, `id`:character[]>>> | tuple<tuple<struct<`tag`:character, `class`:character[], `id`:character[]>>> | list<tuple<struct<`tag`:character[], `class`:character[], `id`:character[]>>> | list<tuple<struct<`tag`:character, `class`:character[], `id`:character[]>> | tuple<struct<`tag`:character[], `class`:character, `id`:character[]>>> | struct<`.tmp`:struct<`color`:character, `fmt`:any => any>> | struct<`.val`:struct<`digits`:double>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character, `fmt`:any => any>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character, `fmt`:any => any>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character, `fmt`:any => any>, `span.strong`:struct<`font-weight`:character, `fmt`:any => any>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.pkg`:struct<`color`:character, `fmt`:any => any>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>, `span.key`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>, `span.file`:struct<`color`:character, `fmt`:any => any>, `span.path`:struct<`color`:character, `fmt`:any => any>, `span.email`:struct<`color`:character, `fmt`:any => any>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character, `fmt`:any => any>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.val`:struct<`transform`:any => any, `color`:character, `fmt`:any => any>, `span.field`:struct<`color`:character, `fmt`:any => any>> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer> | struct<`fs_path`:character> | struct<`h1`:struct<`color`:character, `font-weight`:character, `fmt`:any => any>> | struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character, `fmt`:any => any>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character, `fmt`:any => any>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character, `fmt`:any => any>, `span.version`:struct<`color`:character, `fmt`:any => any>, `span.emph`:struct<`font-style`:character, `fmt`:any => any>, `span.strong`:struct<`font-weight`:character, `font-style`:character, `fmt`:any => any>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character, `fmt`:any => any>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character, `fmt`:any => any>, `span.arg`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.file`:struct<`color`:character, `fmt`:any => any>, `span.path`:struct<`color`:character, `fmt`:any => any>, `span.email`:struct<`color`:character, `fmt`:any => any>, `span.url`:struct<`color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.var`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.envvar`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character, `fmt`:any => any>>, ? character | double | language | environment | tuple<> | struct<`str`:character, `values`:environment> | integer[] | struct<`h`:character, `v`:character, `l`:character, `j`:character>> => ? character | double | environment | tuple<> | tuple<tuple<struct<`tag`:character[], `class`:character, `id`:character[]>>> | tuple<tuple<struct<`tag`:character, `class`:character[], `id`:character[]>>> | list<tuple<struct<`tag`:character[], `class`:character[], `id`:character[]>>> | list<tuple<struct<`tag`:character, `class`:character[], `id`:character[]>> | tuple<struct<`tag`:character[], `class`:character, `id`:character[]>>> | struct<`.tmp`:struct<`color`:character, `fmt`:any => any>> | struct<`.val`:struct<`digits`:double>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character, `fmt`:any => any>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character, `fmt`:any => any>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character, `fmt`:any => any>, `span.strong`:struct<`font-weight`:character, `fmt`:any => any>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.pkg`:struct<`color`:character, `fmt`:any => any>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>, `span.key`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>, `span.file`:struct<`color`:character, `fmt`:any => any>, `span.path`:struct<`color`:character, `fmt`:any => any>, `span.email`:struct<`color`:character, `fmt`:any => any>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character, `fmt`:any => any>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.val`:struct<`transform`:any => any, `color`:character, `fmt`:any => any>, `span.field`:struct<`color`:character, `fmt`:any => any>> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer> | struct<`fs_path`:character> | struct<`h1`:struct<`color`:character, `font-weight`:character, `fmt`:any => any>> | struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character, `fmt`:any => any>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character, `fmt`:any => any>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character, `fmt`:any => any>, `span.version`:struct<`color`:character, `fmt`:any => any>, `span.emph`:struct<`font-style`:character, `fmt`:any => any>, `span.strong`:struct<`font-weight`:character, `font-style`:character, `fmt`:any => any>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character, `fmt`:any => any>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character, `fmt`:any => any>, `span.arg`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.file`:struct<`color`:character, `fmt`:any => any>, `span.path`:struct<`color`:character, `fmt`:any => any>, `span.email`:struct<`color`:character, `fmt`:any => any>, `span.url`:struct<`color`:character, `before`:character, `after`:character, `fmt`:any => any>, `span.var`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.envvar`:struct<`background-color`:character, `color`:character, `fmt`:any => any>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character, `fmt`:any => any>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character, `fmt`:any => any>> | struct<`str`:character, `values`:environment> | integer[] | struct<`h`:character, `v`:character, `l`:character, `j`:character>;
type `$` <? struct<`str`:character, `values`:environment> | tuple<struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>> | struct<`foo`:struct<`str`:character, `values`:environment>, `bar`:struct<`str`:character, `values`:environment>, `baz`:struct<`str`:character, `values`:environment>> | character[] | struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>> | double | struct<`.tmp`:struct<`color`:character>> | struct<`.val`:struct<`digits`:double>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.pkg`:struct<`color`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character>, `span.key`:struct<`before`:character, `after`:character, `color`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.val`:struct<`transform`:any => any, `color`:character>, `span.field`:struct<`color`:character>> | struct<`h1`:struct<`color`:character, `font-weight`:character>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character>>, ? tuple<struct<`str`:character, `values`:null>, struct<`str`:character, `values`:environment>> | double | character | language, ? double | character, double | struct<`str`:character, `values`:environment>, null> => ? environment | character[] | double | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer>;
type `add_child` <tuple<> | tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>>, character, character> => tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>>;
type `add_handler` <environment, struct<`expr`:language, `envir`:environment>, logical> => struct<`expr`:language, `envir`:environment>;
type `apply_style` <character[], ? character | any => any, logical> => character[];
type `box_styles` < > => list<character>;
type `boxx` <character[], character, double[], double[], character[], null, ? character | any => any, ? character | any => any, character[], language | integer> => character;
type `builtin_theme` <character> => struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.pkg`:struct<`color`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character>, `span.key`:struct<`before`:character, `after`:character, `color`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.val`:struct<`transform`:any => any, `color`:character>, `span.field`:struct<`color`:character>>;
type `capitalize` <character> => character;
type `cat_bullet` <character[], null, null, character, ? character, integer> => null;
type `cat_line` <character[], ? character, null, integer> => null;
type `cat_rule` <???, integer> => null;
type `cli__default_handler` <struct<`message`:character, `type`:character, `args`:struct<``:character[], `.envir`:environment>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:character>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:null>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`text`:struct<`str`:character, `values`:environment>>, `pid`:integer>> => ? character | environment;
type `cli__message` <character, struct<`id`:character> | struct<``:character[], `.envir`:environment> | struct<`id`:null> | struct<`text`:struct<`str`:character, `values`:environment>>, logical, ? environment> => ? character;
type `cli_alert` <character, null, null, logical, environment> => character;
type `cli_alert_danger` <character, null, null, logical, environment> => character;
type `cli_alert_info` <character, null, null, logical, environment> => character;
type `cli_alert_success` <character, null, null, logical, environment> => character;
type `cli_alert_warning` <character, null, null, logical, environment> => character;
type `cli_blockquote` <character, character, null, null, environment> => character;
type `cli_code` <character[], ???, character, logical, environment> => character;
type `cli_div` <null, ? character, ? struct<`.tmp`:struct<`color`:character>> | struct<`.val`:struct<`digits`:double>> | struct<`h1`:struct<`color`:character, `font-weight`:character>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character>>, logical, environment> => character;
type `cli_dl` <? character[], null, null, logical, logical, environment> => character;
type `cli_end` <? character> => ? character;
type `cli_format_method` <null, struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>>> => character[];
type `cli_format.character` <character[], tuple<> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any>, ???> => character[];
type `cli_format.numeric` <double[], struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double> | struct<`digits`:double>, ???> => double[];
type `cli_h1` <character, null, null, environment> => character;
type `cli_h2` <character, null, null, environment> => character;
type `cli_li` <? character, null, null, logical, environment> => character;
type `cli_ol` <? character[], null, null, logical, logical, environment> => character;
type `cli_output_connection` < > => integer;
type `cli_par` <null, null, logical, environment> => character;
type `cli_process_failed` <null, null, null, language, character> => null;
type `cli_process_start` <character, character[], character, character, character, logical, environment> => character;
type `cli_rule` <character, character, character, null, environment> => character;
type `cli_server_default` <struct<`message`:character, `type`:character, `args`:struct<``:character[], `.envir`:environment>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:character>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:null>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`text`:struct<`str`:character, `values`:environment>>, `pid`:integer>> => ? character | environment;
type `cli_server_default_safe` <struct<`message`:character, `type`:character, `args`:struct<``:character[], `.envir`:environment>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:character>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`id`:null>, `pid`:integer> | struct<`message`:character, `type`:character, `args`:struct<`text`:struct<`str`:character, `values`:environment>>, `pid`:integer>> => ? character | environment;
type `cli_sitrep` < > => struct<`cli_unicode_option`:null, `symcol_charset`:character, `console_utf8`:logical, `latex_active`:logical, `num_colors`:double, `console_width`:integer>;
type `cli_status` <character, character, character, logical, logical, environment, character> => character;
type `cli_status_clear` <? character, character, null, null, language | symbol> => ? character;
type `cli_text` <character, environment> => null;
type `cli_ul` <? character[], null, null, logical, logical, environment> => character;
type `cli_verbatim` <character[], environment> => null;
type `cliapp` <? struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>>, null, character | integer> => environment;
type `clii__cat` <environment, character> => null;
type `clii__cat_ln` <environment, character[], double, double> => null;
type `clii__clear_status_bar` <environment> => null;
type `clii__container_end` <environment, ? character> => environment;
type `clii__container_start` <environment, character, ? character, ? character, ? character> => character;
type `clii__get_width` <environment, double> => double;
type `clii__heading` <environment, character, struct<`str`:character, `values`:environment>, symbol, null> => environment;
type `clii__inline` <environment, ? struct<`str`:character, `values`:environment>, ? tuple<struct<`str`:character, `values`:null>, struct<`str`:character, `values`:environment>>> => character;
type `clii__item_text` <environment, character, character | symbol, character, struct<`str`:character, `values`:environment>, null> => environment;
type `clii__message` <character, null, logical, character | integer> => null;
type `clii__vspace` <environment, double> => ? double;
type `clii__xtext` <environment, ? struct<`str`:character, `values`:environment>, ? tuple<struct<`str`:character, `values`:null>, struct<`str`:character, `values`:environment>>, double, double> => environment;
type `clii_add_theme` <environment, ? struct<`.tmp`:struct<`color`:character>> | struct<`.val`:struct<`digits`:double>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.pkg`:struct<`color`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character>, `span.key`:struct<`before`:character, `after`:character, `color`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.val`:struct<`transform`:any => any, `color`:character>, `span.field`:struct<`color`:character>> | struct<`h1`:struct<`color`:character, `font-weight`:character>> | struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character>>> => character;
type `clii_alert` <environment, character, struct<`str`:character, `values`:environment>, character, null, logical> => null;
type `clii_blockquote` <environment, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, character, null> => environment;
type `clii_div` <environment, character, ? character, ? struct<`.tmp`:struct<`color`:character>> | struct<`.val`:struct<`digits`:double>> | struct<`h1`:struct<`color`:character, `font-weight`:character>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character>>> => character;
type `clii_dl` <environment, tuple<> | struct<`foo`:struct<`str`:character, `values`:environment>, `bar`:struct<`str`:character, `values`:environment>, `baz`:struct<`str`:character, `values`:environment>>, character, null, symbol | logical> => character;
type `clii_end` <environment, ? character> => environment;
type `clii_h1` <environment, struct<`str`:character, `values`:environment>, symbol, null> => environment;
type `clii_h2` <environment, struct<`str`:character, `values`:environment>, symbol, null> => environment;
type `clii_init` <environment, ? struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>>, null, character | integer> => environment;
type `clii_li` <environment, tuple<> | tuple<struct<`str`:character, `values`:environment>> | struct<`bar`:struct<`str`:character, `values`:environment>> | struct<`baz`:struct<`str`:character, `values`:environment>> | struct<`foo`:struct<`str`:character, `values`:environment>>, ? character, null> => character;
type `clii_ol` <environment, tuple<> | tuple<struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>>, character, null, symbol | logical> => character;
type `clii_par` <environment, character, null> => character;
type `clii_rule` <environment, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, character> => null;
type `clii_status` <environment, character, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, logical, character> => null;
type `clii_status_clear` <environment, ? character, character, ? symbol, ? symbol> => null;
type `clii_status_update` <environment, character, struct<`str`:character, `values`:environment>, null, null> => null;
type `clii_text` <environment, struct<`str`:character, `values`:environment>> => environment;
type `clii_ul` <environment, tuple<> | tuple<struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>, struct<`str`:character, `values`:environment>>, character, null, symbol | logical> => character;
type `clii_verbatim` <environment, character[], environment> => environment;
type `col_blue` <character> => character;
type `col_cyan` <character> => character;
type `col_green` <character> => character;
type `col_red` <character> => character;
type `col_white` <character[]> => character[];
type `color_border` <character> => character;
type `color_content` <character[]> => character[];
type `combine_ansi_styles` <character> => any => any;
type `console_width` < > => integer;
type `cray_wrapper_fun` <any => any> => any => any;
type `create_formatter` <struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `font-style`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `before`:character, `after`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `fmt`:any => any, `before`:character, `font-weight`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double>> => struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `font-style`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `before`:character, `after`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `fmt`:any => any, `before`:character, `font-weight`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double>;
type `dedent` <character, double> => character;
type `default_app` < > => ? environment;
type `defer` <language, environment, character> => struct<`expr`:language, `envir`:environment>;
type `detect_dark_theme` <character> => logical;
type `error` <character> => character;
type `format_code` <logical> => any => any;
type `format_r_code` <logical> => any => any;
type `FUN` <character | struct<`color`:character> | struct<`font-style`:character> | struct<`font-weight`:character> | struct<`transform`:any => any, `color`:character> | integer | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`str`:character, `values`:environment> | struct<`str`:character, `values`:null>, integer[] | environment> => struct<`color`:character, `fmt`:any => any> | struct<`font-style`:character, `fmt`:any => any> | struct<`font-weight`:character, `fmt`:any => any> | struct<`transform`:any => any, `color`:character, `fmt`:any => any> | tuple<struct<`tag`:character[], `class`:character[], `id`:character[]>> | integer | character[] | struct<`tag`:character[], `class`:character[], `id`:character[]> | struct<`str`:character, `values`:environment>;
type `get_active_symbol_set` < > => character;
type `get_handlers` <environment> => tuple<> | tuple<struct<`expr`:language, `envir`:environment>>;
type `get_line_char` <character | double> => character;
type `glue_cmd` <character, environment> => struct<`str`:character, `values`:environment>;
type `glue_delay` <character, ? environment> => struct<`str`:character, `values`:environment> | struct<`str`:character, `values`:null>;
type `inline_collapse` <character[] | double> => character;
type `inline_generic` <symbol, symbol, character[], struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `font-style`:character, `fmt`:any => any>> => character[];
type `inline_regex` < > => character;
type `is_border_style` <character> => logical;
type `is_col` <? character> => logical;
type `is_count` <double> => logical;
type `is_interactive` < > => logical;
type `is_iterm` < > => logical;
type `is_padding_or_margin` <double[]> => logical;
type `is_string` <character | double> => logical;
type `is_utf8_output` < > => logical;
type `last` <? struct<`body`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer>> | tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>>> => ? struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>;
type `list_border_styles` < > => character[];
type `lorem_paragraph` <integer[], integer[]> => character;
type `lorem_sentence` <integer[]> => character;
type `make_ansi_style` <character[], logical, logical, double> => character[] | any => any;
type `make_cmd_transformer` <environment> => any => any;
type `make_line` <double, character, ? character> => character;
type `make_space` <double[]> => character[];
type `match_selector` <tuple<struct<`tag`:character[], `class`:character[], `id`:character[]>>, tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>>> => logical;
type `match_selector_node` <struct<`tag`:character[], `class`:character[], `id`:character[]>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:character> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> => logical;
type `merge_embedded_styles` <struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer> | tuple<> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character>, struct<`margin-top`:double, `margin-bottom`:double> | tuple<> | struct<`padding-left`:double> | struct<`margin-left`:double> | struct<`class-map`:struct<`fs_path`:character>> | struct<`before`:character> | struct<`fmt`:any => any> | struct<`color`:character, `fmt`:any => any, `font-weight`:character> | struct<`transform`:any => any, `color`:character, `fmt`:any => any> | struct<`transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double>> => struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer>;
type `na.omit` <null> => integer[];
type `new_class` <character, any => any> => environment;
type `new_uuid` < > => character;
type `note` <character> => character;
type `orig_fmt` <character> => character;
type `push` <? tuple<> | tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer>>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>, ? character> => tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | struct<`body`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer>>;
type `random_id` < > => character;
type `rule` <character, character, character, character | double, null, null, null, double> => character;
type `rule_left` <struct<`left`:character, `center`:character, `right`:character, `line`:character, `col`:null, `line_col`:character, `background_col`:null, `width`:integer> | struct<`left`:character, `center`:character, `right`:character, `line`:character, `col`:null, `line_col`:null, `background_col`:null, `width`:integer>> => character;
type `rule_left_right` <struct<`left`:character, `center`:character, `right`:character, `line`:character, `col`:null, `line_col`:null, `background_col`:null, `width`:integer>> => character;
type `rule_line` <struct<`left`:character, `center`:character, `right`:character, `line`:character, `col`:null, `line_col`:null, `background_col`:null, `width`:double>> => character;
type `set_handlers` <environment, tuple<struct<`expr`:language, `envir`:environment>>> => null;
type `simple_theme` <character> => struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>>;
type `simple_theme_code` <logical> => struct<`background-color`:character, `color`:character>;
type `simple_theme_emph` < > => struct<`font-style`:character>;
type `simple_theme_file` < > => struct<`color`:character>;
type `simple_theme_url` < > => struct<`color`:character>;
type `start_app` <? struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>>, character[] | integer, logical, language | environment> => environment;
type `stop_app` <environment> => null;
type `str_tail` <character[]> => character[];
type `strrep` <character, double[]> => character[];
type `style` <character[]> => character[];
type `style_bold` <character> => character;
type `style_underline` <character> => character;
type `theme_code` <logical> => struct<`background-color`:character, `color`:character>;
type `theme_code_tick` <logical> => struct<`background-color`:character, `color`:character, `before`:character, `after`:character>;
type `theme_create` <? struct<`body`:struct<`class-map`:struct<`fs_path`:character>>, `h1`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h2`:struct<`font-weight`:character, `margin-top`:double, `margin-bottom`:double, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `fmt`:any => any>, `.alert`:struct<`before`:character>, `.alert-success`:struct<`before`:character>, `.alert-danger`:struct<`before`:character>, `.alert-warning`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `li`:struct<`padding-left`:double>, `ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul`:struct<`list-style-type`:character, `padding-left`:double>, `ul ul ul`:struct<`list-style-type`:character>, `ul ul`:struct<`padding-left`:double>, `ul dl`:struct<`padding-left`:double>, `ol ol`:struct<`padding-left`:double>, `ol ul`:struct<`padding-left`:double>, `ol dl`:struct<`padding-left`:double>, `dl ol`:struct<`padding-left`:double>, `dl ul`:struct<`padding-left`:double>, `dl dl`:struct<`padding-left`:double>, `blockquote`:struct<`padding-left`:integer, `padding-right`:integer, `font-style`:character, `margin-top`:integer, `margin-bottom`:integer, `before`:character, `after`:character>, `blockquote cite`:struct<`before`:character, `font-style`:character, `font-weight`:character>, `.code`:struct<`fmt`:any => any>, `.code.R`:struct<`fmt`:any => any>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character>, `span.code`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.pkg`:struct<`color`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.kbd`:struct<`before`:character, `after`:character, `color`:character>, `span.key`:struct<`before`:character, `after`:character, `color`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`before`:character, `after`:character, `color`:character, `font-style`:character>, `span.var`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.envvar`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.val`:struct<`transform`:any => any, `color`:character>, `span.field`:struct<`color`:character>> | struct<`h1`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h2`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character, `fmt`:any => any>, `h3`:struct<`margin-top`:double, `margin-bottom`:double, `color`:character>, `par`:struct<`margin-top`:double, `margin-bottom`:double>, `.alert-danger`:struct<`background-color`:character, `color`:character, `before`:character>, `.alert-warning`:struct<`color`:character, `font-weight`:character, `before`:character>, `.alert-success`:struct<`before`:character>, `.alert-info`:struct<`before`:character>, `.alert-start`:struct<`before`:character>, `span.pkg`:struct<`color`:character, `font-weight`:character>, `span.version`:struct<`color`:character>, `span.emph`:struct<`font-style`:character>, `span.strong`:struct<`font-weight`:character, `font-style`:character>, `span.fun`:struct<`background-color`:character, `color`:character, `after`:character>, `span.fn`:struct<`background-color`:character, `color`:character, `after`:character>, `span.arg`:struct<`background-color`:character, `color`:character>, `span.kbd`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.key`:struct<`background-color`:character, `color`:character, `before`:character, `after`:character>, `span.file`:struct<`color`:character>, `span.path`:struct<`color`:character>, `span.email`:struct<`color`:character>, `span.url`:struct<`color`:character, `before`:character, `after`:character>, `span.var`:struct<`background-color`:character, `color`:character>, `span.envvar`:struct<`background-color`:character, `color`:character>, `span.timestamp`:struct<`before`:character, `after`:character, `color`:character>> | struct<`.tmp`:struct<`color`:character>> | struct<`.val`:struct<`digits`:double>> | struct<`h1`:struct<`color`:character, `font-weight`:character>> | struct<`ol`:struct<`margin-left`:double>> | struct<`rule`:struct<`color`:character, `background-color`:character, `line-type`:character>>> => struct<`selector`:character[], `parsed`:tuple<>, `style`:tuple<>, `cnt`:character[]>;
type `theme_function` <logical> => struct<`background-color`:character, `color`:character, `before`:character, `after`:character>;
type `transform_hook` <character[] | double[], symbol | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any> | struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double>> => character[] | double[];
type `try_silently` <character> => character;
type `vcapply` <integer[] | character[], any => any, integer[] | ???, logical> => character[];
type `viapply` <struct<`cli-256725-11`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `before`:character, `after`:character, `fmt`:any => any>, `cli-256725-12`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:integer, `padding-right`:integer, `font-style`:character, `fmt`:any => any, `before`:character, `font-weight`:character>> | struct<`cli-256725-91`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>, `cli-256725-94`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-1`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-10`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-13`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `fmt`:any => any>> | struct<`cli-256725-15`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer>> | struct<`cli-256725-18`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character>> | struct<`cli-256725-19`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any>> | struct<`cli-256725-22`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:double>> | struct<`cli-256725-24`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:double>> | struct<`cli-256725-25`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:double>> | struct<`cli-256725-26`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `padding-left`:double>> | struct<`cli-256725-27`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer>> | struct<`cli-256725-28`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer>> | struct<`cli-256725-29`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any>> | struct<`cli-256725-30`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any>> | struct<`cli-256725-31`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer>> | struct<`cli-256725-33`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `transform`:any => any, `color`:character, `fmt`:any => any, `digits`:double>> | struct<`cli-256725-38`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character>> | struct<`cli-256725-39`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any, `color`:character>> | struct<`cli-256725-41`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-42`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character, `after`:character, `color`:character, `font-style`:character, `fmt`:any => any>> | struct<`cli-256725-44`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any>> | struct<`cli-256725-46`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:integer, `margin-right`:integer, `start`:integer, `font-weight`:character, `fmt`:any => any>> | struct<`cli-256725-48`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-49`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-5`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-50`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-52`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-53`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-55`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-57`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-58`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-59`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-6`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any>> | struct<`cli-256725-62`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-63`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-65`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-66`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-67`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-68`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:double, `margin-bottom`:double, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-7`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-73`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-74`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-79`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-8`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `color`:character, `fmt`:any => any>> | struct<`cli-256725-80`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-81`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-82`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-83`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-85`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `background-color`:character, `line-type`:character, `fmt`:any => any>> | struct<`cli-256725-86`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-87`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-88`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `fmt`:any => any>> | struct<`cli-256725-89`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `background-color`:character, `color`:character, `before`:character, `after`:character, `fmt`:any => any>> | struct<`cli-256725-9`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:integer, `margin-right`:integer, `start`:integer, `before`:character>> | struct<`cli-256725-90`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `color`:character, `fmt`:any => any>> | struct<`cli-256725-92`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double>> | struct<`cli-256725-93`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `font-style`:character, `fmt`:any => any>> | struct<`cli-256725-95`:struct<`class-map`:struct<`fs_path`:character>, `margin-top`:integer, `margin-bottom`:integer, `margin-left`:double, `margin-right`:integer, `start`:integer, `list-style-type`:character, `padding-left`:double, `font-style`:character, `fmt`:any => any>>, any => any, ???, logical> => integer[];
type `vlapply` <tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | tuple<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>, struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null> | struct<`tag`:character, `id`:character, `class`:character[], `theme`:character>> | list<struct<`tag`:character, `id`:character, `class`:character[], `theme`:null>>, any => any, ???, logical> => logical[];
type `warn` <character> => character;
type `is_latex_output` < > => logical;
type `box_chars` < > => struct<`h`:character, `v`:character, `l`:character, `j`:character>;
type `pt` <character, integer[], integer[], character[]> => null;
type `print.rule` <character, ???, character> => character;
